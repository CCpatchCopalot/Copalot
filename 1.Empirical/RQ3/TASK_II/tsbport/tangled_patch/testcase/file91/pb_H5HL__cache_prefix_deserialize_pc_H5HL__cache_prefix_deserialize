argument  @ 24 @ argument  @ 25 @ 
expr  @ 24 @ expr  @ 25 @ 
comment: /* Note that the heap should be a single object in the cache */  @ 38 @ comment: /* Note that the heap should be a single object in the cache */  @ 39 @ 
expr  @ 54 @ expr  @ 55 @ 
name: single_cache_obj  @ 59 @ name: single_cache_obj  @ 62 @ 
expr_stmt  @ 63 @ expr_stmt  @ 66 @ 
name: image  @ 5 @ name: image  @ 7 @ 
name: HDassert  @ 16 @ name: HDassert  @ 17 @ 
expr  @ 31 @ expr  @ 32 @ 
modifier: *  @ 1 @ modifier: *  @ 3 @ 
name: HDassert  @ 20 @ name: HDassert  @ 21 @ 
argument  @ 23 @ argument  @ 24 @ 
name: heap  @ 35 @ name: heap  @ 36 @ 
expr  @ 19 @ expr  @ 20 @ 
argument_list  @ 15 @ argument_list  @ 16 @ 
call  @ 54 @ call  @ 55 @ 
name: image  @ 51 @ name: image  @ 52 @ 
name: H5HL__hdr_deserialize  @ 27 @ name: H5HL__hdr_deserialize  @ 28 @ 
literal: "can't decode local heap header"  @ 28 @ literal: "can't decode local heap header"  @ 29 @ 
name: HDassert  @ 17 @ name: HDassert  @ 18 @ 
name: sizeof_size  @ 23 @ name: sizeof_size  @ 24 @ 
name: heap  @ 51 @ name: heap  @ 52 @ 
argument  @ 19 @ argument  @ 20 @ 
name: H5E_HEAP  @ 32 @ name: H5E_HEAP  @ 33 @ 
call  @ 73 @ call  @ 76 @ 
operator: )  @ 46 @ operator: )  @ 49 @ 
operator: ->  @ 42 @ operator: ->  @ 43 @ 
decl  @ 1 @ decl  @ 3 @ 
name: H5F_addr_defined  @ 19 @ name: H5F_addr_defined  @ 20 @ 
operator: (  @ 31 @ operator: (  @ 32 @ 
name: H5HL__new  @ 23 @ name: H5HL__new  @ 24 @ 
parameter  @ 1 @ parameter  @ 2 @ 
argument  @ 78 @ argument  @ 81 @ 
name: NULL  @ 4 @ name: NULL  @ 6 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
condition  @ 73 @ condition  @ 76 @ 
expr  @ 15 @ expr  @ 16 @ 
name: dblk_addr  @ 37 @ name: dblk_addr  @ 38 @ 
block  @ 67 @ block  @ 70 @ 
name: H5E_CANTRELEASE  @ 70 @ name: H5E_CANTRELEASE  @ 73 @ 
expr  @ 23 @ expr  @ 24 @ 
argument  @ 24 @ argument  @ 25 @ 
block  @ 72 @ block  @ 75 @ 
name: single_cache_obj  @ 39 @ name: single_cache_obj  @ 40 @ 
name: size_t  @ 1 @ name: size_t  @ 2 @ 
operator: ==  @ 73 @ operator: ==  @ 76 @ 
expr  @ 51 @ expr  @ 52 @ 
decl_stmt  @ 10 @ decl_stmt  @ 11 @ 
argument  @ 32 @ argument  @ 33 @ 
name  @ 23 @ name  @ 24 @ 
argument  @ 70 @ argument  @ 73 @ 
expr  @ 27 @ expr  @ 28 @ 
argument_list  @ 14 @ argument_list  @ 15 @ 
expr  @ 37 @ expr  @ 38 @ 
init  @ 7 @ init  @ 8 @ 
expr  @ 74 @ expr  @ 77 @ 
decl  @ 1 @ decl  @ 2 @ 
expr  @ 74 @ expr  @ 77 @ 
call  @ 19 @ call  @ 20 @ 
condition  @ 31 @ condition  @ 32 @ 
decl_stmt  @ 8 @ decl_stmt  @ 9 @ 
name: void  @ 1 @ name: void  @ 2 @ 
expr  @ 69 @ expr  @ 72 @ 
operator: =  @ 59 @ operator: =  @ 62 @ 
name: sizeof_addr  @ 17 @ name: sizeof_addr  @ 18 @ 
literal: 0  @ 27 @ literal: 0  @ 28 @ 
name: lheap_chunk  @ 42 @ name: lheap_chunk  @ 43 @ 
argument  @ 31 @ argument  @ 32 @ 
operator: )  @ 7 @ operator: )  @ 8 @ 
operator: (  @ 46 @ operator: (  @ 49 @ 
name: uint8_t  @ 27 @ name: uint8_t  @ 28 @ 
type  @ 8 @ type  @ 9 @ 
block  @ 55 @ block  @ 56 @ 
if  @ 35 @ if  @ 36 @ 
operator: +  @ 37 @ operator: +  @ 38 @ 
argument_list  @ 16 @ argument_list  @ 17 @ 
expr_stmt  @ 51 @ expr_stmt  @ 52 @ 
argument  @ 37 @ argument  @ 38 @ 
argument  @ 28 @ argument  @ 29 @ 
name: prfx_addr  @ 19 @ name: prfx_addr  @ 20 @ 
argument_list  @ 20 @ argument_list  @ 21 @ 
argument_list  @ 69 @ argument_list  @ 72 @ 
name: ret_value  @ 67 @ name: ret_value  @ 70 @ 
operator: +  @ 46 @ operator: +  @ 49 @ 
name: H5_ATTR_UNUSED  @ 1 @ name: H5_ATTR_UNUSED  @ 3 @ 
name: dirty  @ 1 @ name: dirty  @ 3 @ 
argument  @ 54 @ argument  @ 55 @ 
block  @ 59 @ block  @ 62 @ 
operator: ==  @ 42 @ operator: ==  @ 43 @ 
argument_list  @ 42 @ argument_list  @ 43 @ 
comment: /* Note that the heap should _NOT_ be a single * object in the cache */  @ 58 @ comment: /* Note that the heap should _NOT_ be a single
             * object in the cache*/  @ 59 @ 
type  @ 7 @ type  @ 8 @ 
expr  @ 63 @ expr  @ 66 @ 
expr  @ 16 @ expr  @ 17 @ 
name: H5HL_prfx_t  @ 4 @ name: H5HL_prfx_t  @ 6 @ 
expr  @ 32 @ expr  @ 33 @ 
argument_list  @ 73 @ argument_list  @ 76 @ 
if_stmt  @ 69 @ if_stmt  @ 72 @ 
argument  @ 43 @ argument  @ 44 @ 
expr  @ 19 @ expr  @ 20 @ 
expr_stmt  @ 17 @ expr_stmt  @ 18 @ 
name: udata  @ 17 @ name: udata  @ 18 @ 
argument_list  @ 27 @ argument_list  @ 28 @ 
block_content  @ 59 @ block_content  @ 62 @ 
block  @ 70 @ block  @ 73 @ 
expr  @ 27 @ expr  @ 28 @ 
name: H5E_HEAP  @ 24 @ name: H5E_HEAP  @ 25 @ 
comment: /* Set image to the start of the data block.This is necessary * because there may be a gap between the used portion of the * prefix and the data block due to alignment constraints. */  @ 45 @ comment: /* Set image to the start of the data block.  This is necessary
             * because there may be a gap between the used portion of the* prefix and the data block due to alignment constraints. */  @ 46 @ 
expr_stmt  @ 70 @ expr_stmt  @ 73 @ 
expr  @ 23 @ expr  @ 24 @ 
condition  @ 37 @ condition  @ 38 @ 
operator: >  @ 17 @ operator: >  @ 18 @ 
name: NULL  @ 42 @ name: NULL  @ 43 @ 
type  @ 1 @ type  @ 1 @ 
expr  @ 37 @ expr  @ 38 @ 
expr  @ 16 @ expr  @ 17 @ 
operator: ->  @ 23 @ operator: ->  @ 24 @ 
operator: )  @ 37 @ operator: )  @ 38 @ 
argument_list  @ 32 @ argument_list  @ 33 @ 
argument_list  @ 24 @ argument_list  @ 25 @ 
specifier: const  @ 1 @ specifier: const  @ 2 @ 
if_stmt  @ 35 @ if_stmt  @ 36 @ 
expr  @ 8 @ expr  @ 9 @ 
name: H5HL__prfx_new  @ 31 @ name: H5HL__prfx_new  @ 32 @ 
if  @ 67 @ if  @ 70 @ 
expr_stmt  @ 39 @ expr_stmt  @ 40 @ 
expr  @ 27 @ expr  @ 28 @ 
argument_list  @ 28 @ argument_list  @ 29 @ 
expr  @ 73 @ expr  @ 76 @ 
if  @ 69 @ if  @ 72 @ 
name: HDONE_ERROR  @ 70 @ name: HDONE_ERROR  @ 73 @ 
type  @ 10 @ type  @ 11 @ 
expr  @ 14 @ expr  @ 15 @ 
expr  @ 59 @ expr  @ 62 @ 
expr  @ 39 @ expr  @ 40 @ 
name: TRUE  @ 39 @ name: TRUE  @ 40 @ 
name: udata  @ 7 @ name: udata  @ 8 @ 
operator: ->  @ 37 @ operator: ->  @ 38 @ 
name: heap  @ 37 @ name: heap  @ 38 @ 
if_stmt  @ 54 @ if_stmt  @ 55 @ 
expr  @ 27 @ expr  @ 28 @ 
name: len  @ 14 @ name: len  @ 15 @ 
modifier: *  @ 7 @ modifier: *  @ 8 @ 
name: sizeof_size  @ 16 @ name: sizeof_size  @ 17 @ 
operator: >  @ 18 @ operator: >  @ 19 @ 
condition  @ 68 @ condition  @ 71 @ 
operator: ->  @ 37 @ operator: ->  @ 38 @ 
name: heap  @ 46 @ name: heap  @ 49 @ 
name: dblk_size  @ 42 @ name: dblk_size  @ 43 @ 
expr  @ 31 @ expr  @ 32 @ 
literal: 0  @ 18 @ literal: 0  @ 19 @ 
comment: /* Local heap */  @ 3 @ comment: /* Local heap */  @ 5 @ 
argument  @ 17 @ argument  @ 18 @ 
expr  @ 7 @ expr  @ 8 @ 
type  @ 1 @ type  @ 2 @ 
decl_stmt  @ 4 @ decl_stmt  @ 6 @ 
operator: ->  @ 17 @ operator: ->  @ 18 @ 
call  @ 74 @ call  @ 77 @ 
call  @ 19 @ call  @ 20 @ 
expr  @ 24 @ expr  @ 25 @ 
block_content  @ 24 @ block_content  @ 25 @ 
name: prfx_size  @ 37 @ name: prfx_size  @ 38 @ 
expr_stmt  @ 15 @ expr_stmt  @ 16 @ 
name  @ 51 @ name  @ 52 @ 
call  @ 37 @ call  @ 38 @ 
block_content  @ 55 @ block_content  @ 56 @ 
name: udata  @ 23 @ name: udata  @ 24 @ 
operator: ->  @ 37 @ operator: ->  @ 38 @ 
block  @ 2 @ block  @ 4 @ 
operator: ==  @ 69 @ operator: ==  @ 72 @ 
argument_list  @ 74 @ argument_list  @ 77 @ 
name: uint8_t  @ 5 @ name: uint8_t  @ 7 @ 
argument  @ 28 @ argument  @ 29 @ 
name: H5HL__fl_deserialize  @ 54 @ name: H5HL__fl_deserialize  @ 55 @ 
expr  @ 24 @ expr  @ 25 @ 
comment: /* Check arguments */  @ 12 @ comment: /* Check arguments */  @ 13 @ 
name: HGOTO_ERROR  @ 32 @ name: HGOTO_ERROR  @ 33 @ 
expr  @ 18 @ expr  @ 19 @ 
argument  @ 23 @ argument  @ 24 @ 
decl  @ 8 @ decl  @ 9 @ 
expr_stmt  @ 16 @ expr_stmt  @ 17 @ 
condition  @ 67 @ condition  @ 70 @ 
call  @ 42 @ call  @ 43 @ 
name: H5E_CANTRELEASE  @ 74 @ name: H5E_CANTRELEASE  @ 77 @ 
argument_list  @ 43 @ argument_list  @ 44 @ 
name  @ 42 @ name  @ 43 @ 
name: udata  @ 18 @ name: udata  @ 19 @ 
condition  @ 35 @ condition  @ 36 @ 
expr  @ 19 @ expr  @ 20 @ 
operator: (  @ 42 @ operator: (  @ 43 @ 
name: H5HL_cache_prfx_ud_t  @ 7 @ name: H5HL_cache_prfx_ud_t  @ 8 @ 
operator: ->  @ 23 @ operator: ->  @ 24 @ 
expr  @ 35 @ expr  @ 36 @ 
argument  @ 73 @ argument  @ 76 @ 
operator: =  @ 46 @ operator: =  @ 49 @ 
type  @ 3 @ type  @ 5 @ 
argument  @ 42 @ argument  @ 43 @ 
comment: /* Copy the heap data from the speculative read buffer */  @ 48 @ comment: /* Copy the heap data from the speculative read buffer */  @ 51 @ 
call  @ 70 @ call  @ 73 @ 
type  @ 1 @ type  @ 3 @ 
type  @ 1 @ type  @ 2 @ 
operator: )  @ 42 @ operator: )  @ 43 @ 
operator: (  @ 23 @ operator: (  @ 24 @ 
name: prfx  @ 31 @ name: prfx  @ 32 @ 
name: FAIL  @ 69 @ name: FAIL  @ 72 @ 
if_stmt  @ 67 @ if_stmt  @ 70 @ 
init  @ 5 @ init  @ 7 @ 
operator: <  @ 27 @ operator: <  @ 28 @ 
call  @ 17 @ call  @ 18 @ 
name: _udata  @ 1 @ name: _udata  @ 2 @ 
call  @ 16 @ call  @ 17 @ 
expr  @ 74 @ expr  @ 77 @ 
name: _image  @ 1 @ name: _image  @ 2 @ 
name: prfx_addr  @ 37 @ name: prfx_addr  @ 38 @ 
expr  @ 70 @ expr  @ 73 @ 
modifier: *  @ 8 @ modifier: *  @ 9 @ 
condition  @ 23 @ condition  @ 24 @ 
call  @ 27 @ call  @ 28 @ 
comment: /* end H5HL__cache_prefix_deserialize() */  @ 79 @ comment: /* end H5HL__cache_prefix_deserialize() */  @ 82 @ 
specifier: static  @ 1 @ specifier: static  @ 1 @ 
name: dblk_size  @ 35 @ name: dblk_size  @ 36 @ 
condition  @ 27 @ condition  @ 28 @ 
operator: =  @ 42 @ operator: =  @ 43 @ 
comment: /* Return value */  @ 8 @ comment: /* Return value */  @ 9 @ 
operator: >  @ 16 @ operator: >  @ 17 @ 
argument  @ 15 @ argument  @ 16 @ 
init  @ 8 @ init  @ 9 @ 
comment: /* User data for callback */  @ 7 @ comment: /* User data for callback */  @ 8 @ 
name: udata  @ 19 @ name: udata  @ 20 @ 
operator: ->  @ 42 @ operator: ->  @ 43 @ 
decl  @ 10 @ decl  @ 11 @ 
name: dblk_image  @ 42 @ name: dblk_image  @ 43 @ 
decl_stmt  @ 3 @ decl_stmt  @ 5 @ 
name: udata  @ 15 @ name: udata  @ 16 @ 
literal: 0  @ 14 @ literal: 0  @ 15 @ 
expr  @ 70 @ expr  @ 73 @ 
argument  @ 24 @ argument  @ 25 @ 
modifier: *  @ 4 @ modifier: *  @ 6 @ 
argument_list  @ 54 @ argument_list  @ 55 @ 
name: image  @ 27 @ name: image  @ 28 @ 
decl  @ 7 @ decl  @ 8 @ 
operator: ->  @ 46 @ operator: ->  @ 49 @ 
if_stmt  @ 23 @ if_stmt  @ 24 @ 
expr  @ 32 @ expr  @ 33 @ 
name: HGOTO_ERROR  @ 28 @ name: HGOTO_ERROR  @ 29 @ 
expr  @ 70 @ expr  @ 73 @ 
comment: /* Allocate space for the heap data image */  @ 41 @ comment: /* Allocate space for the heap data image */  @ 42 @ 
name: prfx  @ 4 @ name: prfx  @ 6 @ 
expr  @ 51 @ expr  @ 52 @ 
name: ret_value  @ 8 @ name: ret_value  @ 9 @ 
decl  @ 3 @ decl  @ 5 @ 
operator: >  @ 14 @ operator: >  @ 15 @ 
block_content  @ 68 @ block_content  @ 71 @ 
init  @ 3 @ init  @ 5 @ 
specifier: const  @ 5 @ specifier: const  @ 7 @ 
name: udata  @ 23 @ name: udata  @ 24 @ 
name  @ 37 @ name  @ 38 @ 
name: void  @ 1 @ name: void  @ 1 @ 
decl  @ 5 @ decl  @ 7 @ 
operator: =  @ 23 @ operator: =  @ 24 @ 
call  @ 20 @ call  @ 21 @ 
comment: /* Pointer into decoding buffer */  @ 5 @ comment: /* Pointer into decoding buffer */  @ 7 @ 
name  @ 18 @ name  @ 19 @ 
if_stmt  @ 37 @ if_stmt  @ 38 @ 
name: H5HL_cache_prfx_ud_t  @ 7 @ name: H5HL_cache_prfx_ud_t  @ 8 @ 
operator: !  @ 67 @ operator: !  @ 70 @ 
name: NULL  @ 70 @ name: NULL  @ 73 @ 
expr  @ 42 @ expr  @ 43 @ 
name  @ 35 @ name  @ 36 @ 
name: H5MM_memcpy  @ 51 @ name: H5MM_memcpy  @ 52 @ 
expr_stmt  @ 19 @ expr_stmt  @ 20 @ 
expr_stmt  @ 18 @ expr_stmt  @ 19 @ 
name: len  @ 1 @ name: len  @ 2 @ 
modifier: *  @ 1 @ modifier: *  @ 2 @ 
name: sizeof_addr  @ 23 @ name: sizeof_addr  @ 24 @ 
name: heap  @ 54 @ name: heap  @ 55 @ 
expr  @ 42 @ expr  @ 43 @ 
expr  @ 46 @ expr  @ 49 @ 
expr  @ 42 @ expr  @ 43 @ 
name: heap  @ 37 @ name: heap  @ 38 @ 
expr  @ 51 @ expr  @ 52 @ 
operator: ==  @ 31 @ operator: ==  @ 32 @ 
argument  @ 28 @ argument  @ 29 @ 
block  @ 74 @ block  @ 77 @ 
operator: =  @ 39 @ operator: =  @ 40 @ 
label  @ 65 @ label  @ 68 @ 
call  @ 23 @ call  @ 24 @ 
operator: &&  @ 73 @ operator: &&  @ 76 @ 
expr_stmt  @ 32 @ expr_stmt  @ 33 @ 
name: NULL  @ 8 @ name: NULL  @ 9 @ 
name  @ 39 @ name  @ 40 @ 
name: udata  @ 23 @ name: udata  @ 24 @ 
expr  @ 15 @ expr  @ 16 @ 
argument_list  @ 23 @ argument_list  @ 24 @ 
condition  @ 42 @ condition  @ 43 @ 
block  @ 68 @ block  @ 71 @ 
literal: 0  @ 16 @ literal: 0  @ 17 @ 
name: heap  @ 39 @ name: heap  @ 40 @ 
operator: )  @ 27 @ operator: )  @ 28 @ 
name  @ 23 @ name  @ 24 @ 
comment: /* Build free list */  @ 53 @ comment: /* Build free list */  @ 54 @ 
name: NULL  @ 31 @ name: NULL  @ 32 @ 
argument_list  @ 18 @ argument_list  @ 19 @ 
argument_list  @ 37 @ argument_list  @ 38 @ 
block_content  @ 39 @ block_content  @ 40 @ 
argument  @ 55 @ argument  @ 56 @ 
argument  @ 70 @ argument  @ 73 @ 
name: heap  @ 59 @ name: heap  @ 62 @ 
operator: ->  @ 35 @ operator: ->  @ 36 @ 
expr  @ 4 @ expr  @ 6 @ 
if  @ 37 @ if  @ 38 @ 
argument  @ 14 @ argument  @ 15 @ 
if  @ 68 @ if  @ 71 @ 
name: _image  @ 46 @ name: _image  @ 49 @ 
operator: ->  @ 39 @ operator: ->  @ 40 @ 
expr  @ 69 @ expr  @ 72 @ 
name: heap  @ 42 @ name: heap  @ 43 @ 
name  @ 37 @ name  @ 38 @ 
name: NULL  @ 74 @ name: NULL  @ 77 @ 
name: H5HL_t  @ 3 @ name: H5HL_t  @ 5 @ 
decl_stmt  @ 5 @ decl_stmt  @ 7 @ 
argument_list  @ 51 @ argument_list  @ 52 @ 
type  @ 4 @ type  @ 6 @ 
if_stmt  @ 68 @ if_stmt  @ 71 @ 
expr  @ 70 @ expr  @ 73 @ 
expr  @ 74 @ expr  @ 77 @ 
name  @ 17 @ name  @ 18 @ 
argument  @ 70 @ argument  @ 73 @ 
operator: *  @ 46 @ operator: *  @ 49 @ 
name: H5E_CANTALLOC  @ 32 @ name: H5E_CANTALLOC  @ 33 @ 
argument  @ 42 @ argument  @ 43 @ 
type  @ 1 @ type  @ 2 @ 
name: NULL  @ 24 @ name: NULL  @ 25 @ 
name: FALSE  @ 59 @ name: FALSE  @ 62 @ 
expr  @ 17 @ expr  @ 18 @ 
name  @ 37 @ name  @ 38 @ 
name: _image  @ 5 @ name: _image  @ 7 @ 
comment: /* Allocate space in memory for the heap */  @ 22 @ comment: /* Allocate space in memory for the heap */  @ 23 @ 
comment: /* Allocate the heap prefix */  @ 30 @ comment: /* Allocate the heap prefix */  @ 31 @ 
literal: 0  @ 17 @ literal: 0  @ 18 @ 
parameter  @ 1 @ parameter  @ 3 @ 
name: heap  @ 37 @ name: heap  @ 38 @ 
name: _udata  @ 7 @ name: _udata  @ 8 @ 
argument  @ 27 @ argument  @ 28 @ 
name: dblk_size  @ 51 @ name: dblk_size  @ 52 @ 
modifier: *  @ 3 @ modifier: *  @ 5 @ 
name: sizeof_prfx  @ 18 @ name: sizeof_prfx  @ 19 @ 
expr  @ 24 @ expr  @ 25 @ 
comment: /* Heap prefix deserialized */  @ 4 @ comment: /* Heap prefix deserialized */  @ 6 @ 
expr  @ 54 @ expr  @ 55 @ 
operator: ==  @ 23 @ operator: ==  @ 24 @ 
name  @ 59 @ name  @ 62 @ 
name: heap  @ 31 @ name: heap  @ 32 @ 
expr  @ 68 @ expr  @ 71 @ 
argument  @ 27 @ argument  @ 28 @ 
expr  @ 37 @ expr  @ 38 @ 
modifier: *  @ 5 @ modifier: *  @ 7 @ 
name: H5E_CANTALLOC  @ 24 @ name: H5E_CANTALLOC  @ 25 @ 
argument  @ 74 @ argument  @ 77 @ 
name: uint8_t  @ 5 @ name: uint8_t  @ 7 @ 
argument  @ 51 @ argument  @ 52 @ 
name: H5HL__prfx_dest  @ 69 @ name: H5HL__prfx_dest  @ 72 @ 
call  @ 32 @ call  @ 33 @ 
operator: )  @ 31 @ operator: )  @ 32 @ 
name: HGOTO_ERROR  @ 24 @ name: HGOTO_ERROR  @ 25 @ 
argument_list  @ 13 @ argument_list  @ 14 @ 
literal: "unable to destroy local heap"  @ 74 @ literal: "unable to destroy local heap"  @ 77 @ 
name  @ 16 @ name  @ 17 @ 
argument  @ 51 @ argument  @ 52 @ 
expr  @ 67 @ expr  @ 70 @ 
argument  @ 43 @ argument  @ 44 @ 
if_stmt  @ 31 @ if_stmt  @ 32 @ 
expr  @ 14 @ expr  @ 15 @ 
argument  @ 16 @ argument  @ 17 @ 
literal: "can't initialize free list"  @ 55 @ literal: "can't initialize free list"  @ 56 @ 
name: HDassert  @ 13 @ name: HDassert  @ 14 @ 
name: H5E_HEAP  @ 74 @ name: H5E_HEAP  @ 77 @ 
block_content  @ 69 @ block_content  @ 72 @ 
operator: (  @ 37 @ operator: (  @ 38 @ 
decl  @ 1 @ decl  @ 2 @ 
if  @ 73 @ if  @ 76 @ 
name: heap  @ 42 @ name: heap  @ 43 @ 
block  @ 32 @ block  @ 33 @ 
operator: *  @ 7 @ operator: *  @ 8 @ 
name: heap  @ 51 @ name: heap  @ 52 @ 
decl  @ 1 @ decl  @ 2 @ 
expr  @ 18 @ expr  @ 19 @ 
name: FUNC_ENTER_STATIC  @ 10 @ name: FUNC_ENTER_PACKAGE  @ 11 @ 
operator: )  @ 5 @ operator: )  @ 7 @ 
block_content  @ 70 @ block_content  @ 73 @ 
name: hbool_t  @ 1 @ name: hbool_t  @ 3 @ 
name: HGOTO_ERROR  @ 43 @ name: HGOTO_ERROR  @ 44 @ 
expr  @ 20 @ expr  @ 21 @ 
if_stmt  @ 73 @ if_stmt  @ 76 @ 
call  @ 31 @ call  @ 32 @ 
comment: /* Deserialize the heap's header */  @ 26 @ comment: /* Deserialize the heap's header */  @ 27 @ 
name  @ 46 @ name  @ 49 @ 
expr  @ 32 @ expr  @ 33 @ 
modifier: *  @ 1 @ modifier: *  @ 2 @ 
name: NULL  @ 23 @ name: NULL  @ 24 @ 
argument  @ 18 @ argument  @ 19 @ 
name: done  @ 65 @ name: done  @ 68 @ 
decl  @ 4 @ decl  @ 6 @ 
name: FAIL  @ 73 @ name: FAIL  @ 76 @ 
name: NULL  @ 32 @ name: NULL  @ 33 @ 
name: prfx  @ 68 @ name: prfx  @ 71 @ 
expr_stmt  @ 24 @ expr_stmt  @ 25 @ 
argument  @ 74 @ argument  @ 77 @ 
argument  @ 20 @ argument  @ 21 @ 
expr  @ 13 @ expr  @ 14 @ 
name: prfx_size  @ 46 @ name: prfx_size  @ 49 @ 
name: H5HL__cache_prefix_deserialize  @ 1 @ name: H5HL__cache_prefix_deserialize  @ 2 @ 
literal: 0  @ 54 @ literal: 0  @ 55 @ 
name: udata  @ 27 @ name: udata  @ 28 @ 
argument_list  @ 17 @ argument_list  @ 18 @ 
name: prfx  @ 69 @ name: prfx  @ 72 @ 
call  @ 69 @ call  @ 72 @ 
expr  @ 23 @ expr  @ 24 @ 
expr  @ 3 @ expr  @ 5 @ 
name: HDONE_ERROR  @ 74 @ name: HDONE_ERROR  @ 77 @ 
expr  @ 73 @ expr  @ 76 @ 
argument  @ 43 @ argument  @ 44 @ 
name: void  @ 8 @ name: void  @ 9 @ 
name: HDassert  @ 18 @ name: HDassert  @ 19 @ 
name: H5HL__dest  @ 73 @ name: H5HL__dest  @ 76 @ 
argument  @ 70 @ argument  @ 73 @ 
argument  @ 55 @ argument  @ 56 @ 
argument  @ 55 @ argument  @ 56 @ 
block_content  @ 3 @ block_content  @ 5 @ 
argument  @ 74 @ argument  @ 77 @ 
name: udata  @ 16 @ name: udata  @ 17 @ 
argument_list  @ 19 @ argument_list  @ 20 @ 
block_content  @ 73 @ block_content  @ 76 @ 
else  @ 57 @ else  @ 58 @ 
init  @ 4 @ init  @ 6 @ 
argument  @ 19 @ argument  @ 20 @ 
specifier: const  @ 5 @ specifier: const  @ 7 @ 
argument  @ 24 @ argument  @ 25 @ 
name: HDassert  @ 19 @ name: HDassert  @ 20 @ 
argument  @ 23 @ argument  @ 24 @ 
argument_list  @ 78 @ argument_list  @ 81 @ 
name: heap  @ 3 @ name: heap  @ 5 @ 
name: heap  @ 73 @ name: heap  @ 76 @ 
argument  @ 27 @ argument  @ 28 @ 
parameter  @ 1 @ parameter  @ 2 @ 
comment: /* Check if heap data block is contiguous with header */  @ 36 @ comment: /* Check if heap data block is contiguous with header */  @ 37 @ 
specifier: const  @ 27 @ specifier: const  @ 28 @ 
block_content  @ 32 @ block_content  @ 33 @ 
argument  @ 43 @ argument  @ 44 @ 
name: heap  @ 27 @ name: heap  @ 28 @ 
name  @ 42 @ name  @ 43 @ 
expr  @ 17 @ expr  @ 18 @ 
operator: ->  @ 23 @ operator: ->  @ 24 @ 
name: dirty  @ 20 @ name: dirty  @ 21 @ 
expr_stmt  @ 20 @ expr_stmt  @ 21 @ 
argument  @ 37 @ argument  @ 38 @ 
operator: =  @ 63 @ operator: =  @ 66 @ 
name: void  @ 1 @ name: void  @ 2 @ 
comment: /* Release the [possibly partially initialized] local heap on errors */  @ 66 @ comment: /* Release the [possibly partially initialized] local heap on errors */  @ 69 @ 
type  @ 5 @ type  @ 7 @ 
operator: ->  @ 18 @ operator: ->  @ 19 @ 
name: HGOTO_ERROR  @ 55 @ name: HGOTO_ERROR  @ 56 @ 
specifier: const  @ 46 @ specifier: const  @ 49 @ 
operator: ->  @ 51 @ operator: ->  @ 52 @ 
operator: (  @ 27 @ operator: (  @ 28 @ 
literal: "can't allocate local heap prefix"  @ 32 @ literal: "can't allocate local heap prefix"  @ 33 @ 
condition  @ 54 @ condition  @ 55 @ 
operator: *  @ 27 @ operator: *  @ 28 @ 
name  @ 23 @ name  @ 24 @ 
unit  @ 1 @ unit  @ 1 @ 
expr_stmt  @ 59 @ expr_stmt  @ 62 @ 
operator: )  @ 23 @ operator: )  @ 24 @ 
else  @ 72 @ else  @ 75 @ 
block_content  @ 74 @ block_content  @ 77 @ 
operator: (  @ 46 @ operator: (  @ 49 @ 
literal: "can't allocate local heap structure"  @ 24 @ literal: "can't allocate local heap structure"  @ 25 @ 
if  @ 31 @ if  @ 32 @ 
operator: ->  @ 59 @ operator: ->  @ 62 @ 
if  @ 23 @ if  @ 24 @ 
expr  @ 23 @ expr  @ 24 @ 
argument  @ 28 @ argument  @ 29 @ 
argument  @ 32 @ argument  @ 33 @ 
decl_stmt  @ 7 @ decl_stmt  @ 8 @ 
operator: ->  @ 16 @ operator: ->  @ 17 @ 
expr  @ 51 @ expr  @ 52 @ 
argument_list  @ 31 @ argument_list  @ 32 @ 
condition  @ 69 @ condition  @ 72 @ 
name: uint8_t  @ 46 @ name: uint8_t  @ 49 @ 
argument  @ 51 @ argument  @ 52 @ 
argument  @ 32 @ argument  @ 33 @ 
operator: ->  @ 19 @ operator: ->  @ 20 @ 
expr_stmt  @ 46 @ expr_stmt  @ 49 @ 
name: image  @ 46 @ name: image  @ 49 @ 
block  @ 35 @ block  @ 36 @ 
expr  @ 32 @ expr  @ 33 @ 
operator: (  @ 5 @ operator: (  @ 7 @ 
argument  @ 55 @ argument  @ 56 @ 
parameter  @ 1 @ parameter  @ 2 @ 
operator: ->  @ 51 @ operator: ->  @ 52 @ 
operator: *  @ 5 @ operator: *  @ 7 @ 
name: dblk_image  @ 51 @ name: dblk_image  @ 52 @ 
call  @ 14 @ call  @ 15 @ 
argument_list  @ 19 @ argument_list  @ 20 @ 
name: H5FL_BLK_MALLOC  @ 42 @ name: H5FL_BLK_MALLOC  @ 43 @ 
operator: =  @ 31 @ operator: =  @ 32 @ 
name: sizeof_prfx  @ 23 @ name: sizeof_prfx  @ 24 @ 
call  @ 51 @ call  @ 52 @ 
argument  @ 69 @ argument  @ 72 @ 
name  @ 51 @ name  @ 52 @ 
operator: )  @ 46 @ operator: )  @ 49 @ 
expr  @ 70 @ expr  @ 73 @ 
parameter_list  @ 1 @ parameter_list  @ 2 @ 
operator: (  @ 7 @ operator: (  @ 8 @ 
argument_list  @ 55 @ argument_list  @ 56 @ 
expr_stmt  @ 14 @ expr_stmt  @ 15 @ 
if  @ 54 @ if  @ 55 @ 
function  @ 1 @ function  @ 1 @ 
expr  @ 5 @ expr  @ 7 @ 
call  @ 24 @ call  @ 25 @ 
argument_list  @ 70 @ argument_list  @ 73 @ 
expr  @ 32 @ expr  @ 33 @ 
literal: "memory allocation failed"  @ 43 @ literal: "memory allocation failed"  @ 44 @ 
name: heap  @ 23 @ name: heap  @ 24 @ 
expr_stmt  @ 74 @ expr_stmt  @ 77 @ 
call  @ 15 @ call  @ 16 @ 
name: ret_value  @ 63 @ name: ret_value  @ 66 @ 
name: H5E_HEAP  @ 70 @ name: H5E_HEAP  @ 73 @ 
name: HDassert  @ 15 @ name: HDassert  @ 16 @ 
comment: /* Check if heap block exists */  @ 34 @ comment: /* Check if heap block exists */  @ 35 @ 
argument  @ 13 @ argument  @ 14 @ 
literal: "unable to destroy local heap prefix"  @ 70 @ literal: "unable to destroy local heap prefix"  @ 73 @ 
name: image  @ 13 @ name: image  @ 14 @ 
name: H5F_addr_eq  @ 37 @ name: H5F_addr_eq  @ 38 @ 
name: FUNC_LEAVE_NOAPI  @ 78 @ name: FUNC_LEAVE_NOAPI  @ 81 @ 
operator: <  @ 54 @ operator: <  @ 55 @ 
macro  @ 78 @ macro  @ 81 @ 
argument  @ 74 @ argument  @ 77 @ 
block  @ 37 @ block  @ 38 @ 
name: HDassert  @ 14 @ name: HDassert  @ 15 @ 
argument  @ 32 @ argument  @ 33 @ 
call  @ 18 @ call  @ 19 @ 
comment: /* Set return value */  @ 62 @ comment: /* Set return value */  @ 65 @ 
block  @ 24 @ block  @ 25 @ 
block_content  @ 37 @ block_content  @ 38 @ 
name: prfx  @ 63 @ name: prfx  @ 66 @ 
name: heap  @ 73 @ name: heap  @ 76 @ 
expr  @ 74 @ expr  @ 77 @ 
name  @ 19 @ name  @ 20 @ 
expr  @ 20 @ expr  @ 21 @ 
name: NULL  @ 3 @ name: NULL  @ 5 @ 
expr  @ 24 @ expr  @ 25 @ 

