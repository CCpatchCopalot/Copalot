expr  @ 20 @ expr  @ 19 @ 
operator: =  @ 20 @ operator: =  @ 19 @ 
expr  @ 91 @ expr  @ 93 @ 
operator: )  @ 72 @ operator: )  @ 73 @ 
control  @ 40 @ control  @ 39 @ 
expr  @ 91 @ expr  @ 93 @ 
name: e  @ 3 @ name: e  @ 3 @ 
expr  @ 66 @ expr  @ 67 @ 
name: field  @ 11 @ name: field  @ 11 @ 
name: qp_local  @ 49 @ name: qp_local  @ 48 @ 
expr  @ 39 @ expr  @ 38 @ 
name  @ 29 @ name  @ 28 @ 
name: i  @ 32 @ name: i  @ 31 @ 
name: GF_Node  @ 41 @ name: GF_Node  @ 40 @ 
literal: 1  @ 23 @ literal: 1  @ 22 @ 
name: initial_qp  @ 7 @ name: initial_qp  @ 7 @ 
sizeof  @ 10 @ sizeof  @ 10 @ 
call  @ 85 @ call  @ 87 @ 
block  @ 51 @ block  @ 52 @ 
type  @ 1 @ type  @ 1 @ 
call  @ 61 @ call  @ 62 @ 
call  @ 72 @ call  @ 73 @ 
name: qp_local  @ 56 @ name: qp_local  @ 57 @ 
if_stmt  @ 51 @ if_stmt  @ 52 @ 
expr  @ 28 @ expr  @ 27 @ 
operator: ->  @ 41 @ operator: ->  @ 40 @ 
argument_list  @ 10 @ argument_list  @ 10 @ 
init  @ 32 @ init  @ 31 @ 
name: codec  @ 35 @ name: codec  @ 34 @ 
operator: *  @ 72 @ operator: *  @ 73 @ 
name: e  @ 36 @ name: e  @ 35 @ 
if  @ 28 @ if  @ 27 @ 
name: field  @ 29 @ name: field  @ 28 @ 
argument_list  @ 33 @ argument_list  @ 32 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
name: sffield  @ 11 @ name: sffield  @ 11 @ 
name: initial_qp  @ 23 @ name: initial_qp  @ 22 @ 
argument  @ 65 @ argument  @ 66 @ 
argument_list  @ 72 @ argument_list  @ 73 @ 
parameter  @ 1 @ parameter  @ 1 @ 
name: i  @ 40 @ name: i  @ 39 @ 
expr  @ 56 @ expr  @ 57 @ 
if_stmt  @ 56 @ if_stmt  @ 57 @ 
operator: =  @ 19 @ operator: =  @ 18 @ 
name: gf_node_get_tag  @ 48 @ name: gf_node_get_tag  @ 47 @ 
expr  @ 33 @ expr  @ 32 @ 
expr  @ 72 @ expr  @ 73 @ 
init  @ 40 @ init  @ 39 @ 
operator: &  @ 35 @ operator: &  @ 34 @ 
operator: ->  @ 13 @ operator: ->  @ 13 @ 
operator: =  @ 23 @ operator: =  @ 22 @ 
name: i  @ 5 @ name: i  @ 5 @ 
expr  @ 80 @ expr  @ 82 @ 
name: far_ptr  @ 29 @ name: far_ptr  @ 28 @ 
expr  @ 73 @ expr  @ 74 @ 
name: GF_Err  @ 1 @ name: GF_Err  @ 1 @ 
argument  @ 35 @ argument  @ 34 @ 
init  @ 41 @ init  @ 40 @ 
condition  @ 46 @ condition  @ 45 @ 
name: sffield  @ 33 @ name: sffield  @ 32 @ 
return  @ 44 @ return  @ 43 @ 
expr  @ 44 @ expr  @ 43 @ 
expr  @ 33 @ expr  @ 32 @ 
name: new_node  @ 49 @ name: new_node  @ 48 @ 
name: last  @ 6 @ name: last  @ 6 @ 
name: field  @ 65 @ name: field  @ 66 @ 
expr  @ 43 @ expr  @ 42 @ 
if  @ 36 @ if  @ 35 @ 
name: far_ptr  @ 72 @ name: far_ptr  @ 73 @ 
name: codec  @ 1 @ name: codec  @ 1 @ 
expr  @ 48 @ expr  @ 47 @ 
condition  @ 59 @ condition  @ 60 @ 
block  @ 73 @ block  @ 74 @ 
name: gf_bifs_dec_qp_remove  @ 91 @ name: gf_bifs_dec_qp_remove  @ 93 @ 
name: codec  @ 41 @ name: codec  @ 40 @ 
argument_list  @ 35 @ argument_list  @ 34 @ 
argument  @ 72 @ argument  @ 73 @ 
condition  @ 40 @ condition  @ 39 @ 
block_content  @ 23 @ block_content  @ 22 @ 
decl  @ 7 @ decl  @ 7 @ 
block_content  @ 33 @ block_content  @ 32 @ 
name: new_node  @ 53 @ name: new_node  @ 54 @ 
argument_list  @ 25 @ argument_list  @ 24 @ 
type  @ 1 @ type  @ 1 @ 
expr_stmt  @ 19 @ expr_stmt  @ 18 @ 
name: bs  @ 1 @ name: bs  @ 1 @ 
parameter  @ 1 @ parameter  @ 1 @ 
expr_stmt  @ 12 @ expr_stmt  @ 12 @ 
expr  @ 76 @ expr  @ 77 @ 
operator: ->  @ 72 @ operator: ->  @ 73 @ 
argument  @ 20 @ argument  @ 19 @ 
operator: =  @ 65 @ operator: =  @ 66 @ 
expr_stmt  @ 20 @ expr_stmt  @ 19 @ 
name  @ 65 @ name  @ 66 @ 
expr_stmt  @ 58 @ expr_stmt  @ 59 @ 
return  @ 59 @ return  @ 60 @ 
argument  @ 35 @ argument  @ 34 @ 
name: e  @ 59 @ name: e  @ 60 @ 
name: NDTtype  @ 13 @ name: NDTtype  @ 13 @ 
operator: <  @ 32 @ operator: <  @ 31 @ 
name  @ 76 @ name  @ 77 @ 
operator: ->  @ 76 @ operator: ->  @ 77 @ 
argument  @ 29 @ argument  @ 28 @ 
name: is_mem_com  @ 1 @ name: is_mem_com  @ 1 @ 
expr  @ 51 @ expr  @ 52 @ 
argument_list  @ 62 @ argument_list  @ 63 @ 
expr  @ 33 @ expr  @ 32 @ 
expr  @ 57 @ expr  @ 58 @ 
operator: ->  @ 58 @ operator: ->  @ 59 @ 
operator: &  @ 72 @ operator: &  @ 73 @ 
name: gf_node_register  @ 61 @ name: gf_node_register  @ 62 @ 
call  @ 58 @ call  @ 59 @ 
name: GF_Err  @ 3 @ name: GF_Err  @ 3 @ 
if_stmt  @ 36 @ if_stmt  @ 35 @ 
argument  @ 10 @ argument  @ 10 @ 
expr_stmt  @ 85 @ expr_stmt  @ 87 @ 
parameter  @ 1 @ parameter  @ 1 @ 
expr  @ 23 @ expr  @ 22 @ 
name: e  @ 43 @ name: e  @ 42 @ 
name: qp_on  @ 80 @ name: qp_on  @ 82 @ 
condition  @ 28 @ condition  @ 27 @ 
name  @ 28 @ name  @ 27 @ 
expr  @ 92 @ expr  @ 94 @ 
argument  @ 29 @ argument  @ 28 @ 
name: ActiveQP  @ 22 @ name: ActiveQP  @ 21 @ 
name: fieldType  @ 28 @ name: fieldType  @ 27 @ 
call  @ 29 @ call  @ 28 @ 
expr  @ 59 @ expr  @ 60 @ 
argument  @ 61 @ argument  @ 62 @ 
name  @ 33 @ name  @ 32 @ 
name: field  @ 72 @ name: field  @ 73 @ 
name: fieldType  @ 12 @ name: fieldType  @ 12 @ 
name: field  @ 1 @ name: field  @ 1 @ 
block_content  @ 65 @ block_content  @ 66 @ 
expr  @ 35 @ expr  @ 34 @ 
decl_stmt  @ 7 @ decl_stmt  @ 7 @ 
operator: ->  @ 70 @ operator: ->  @ 71 @ 
condition  @ 34 @ condition  @ 33 @ 
expr  @ 53 @ expr  @ 54 @ 
name: new_node  @ 41 @ name: new_node  @ 40 @ 
call  @ 91 @ call  @ 93 @ 
argument_list  @ 41 @ argument_list  @ 40 @ 
name: fieldIndex  @ 11 @ name: fieldIndex  @ 11 @ 
operator: )  @ 49 @ operator: )  @ 48 @ 
name: sffield  @ 13 @ name: sffield  @ 13 @ 
expr  @ 12 @ expr  @ 12 @ 
block  @ 83 @ block  @ 85 @ 
name: e  @ 44 @ name: e  @ 43 @ 
operator: ->  @ 28 @ operator: ->  @ 27 @ 
name  @ 12 @ name  @ 12 @ 
expr  @ 51 @ expr  @ 52 @ 
name: BD_DecMFFieldVec  @ 1 @ name: BD_DecMFFieldVec  @ 1 @ 
name: gf_node_list_add_child_last  @ 58 @ name: gf_node_list_add_child_last  @ 59 @ 
expr_stmt  @ 61 @ expr_stmt  @ 62 @ 
expr  @ 13 @ expr  @ 13 @ 
block_content  @ 66 @ block_content  @ 67 @ 
name: fieldIndex  @ 11 @ name: fieldIndex  @ 11 @ 
argument  @ 65 @ argument  @ 66 @ 
decl_stmt  @ 6 @ decl_stmt  @ 6 @ 
decl  @ 8 @ decl  @ 8 @ 
comment: /*proto coding*/  @ 69 @ comment: /*proto coding*/  @ 70 @ 
operator: <  @ 40 @ operator: <  @ 39 @ 
argument  @ 58 @ argument  @ 59 @ 
block_content  @ 91 @ block_content  @ 93 @ 
argument  @ 12 @ argument  @ 12 @ 
block_content  @ 30 @ block_content  @ 29 @ 
expr  @ 85 @ expr  @ 87 @ 
else  @ 38 @ else  @ 37 @ 
argument_list  @ 48 @ argument_list  @ 47 @ 
name: gf_bs_read_int  @ 20 @ name: gf_bs_read_int  @ 19 @ 
block  @ 57 @ block  @ 58 @ 
condition  @ 56 @ condition  @ 57 @ 
argument  @ 19 @ argument  @ 18 @ 
block  @ 56 @ block  @ 57 @ 
return  @ 92 @ return  @ 94 @ 
condition  @ 30 @ condition  @ 29 @ 
argument  @ 53 @ argument  @ 54 @ 
name: node  @ 46 @ name: node  @ 45 @ 
name: u8  @ 7 @ name: u8  @ 7 @ 
operator: =  @ 72 @ operator: =  @ 73 @ 
operator: ->  @ 12 @ operator: ->  @ 12 @ 
name: is_mem_com  @ 43 @ name: is_mem_com  @ 42 @ 
expr  @ 85 @ expr  @ 87 @ 
call  @ 41 @ call  @ 40 @ 
condition  @ 48 @ condition  @ 47 @ 
operator: =  @ 32 @ operator: =  @ 31 @ 
name: e  @ 35 @ name: e  @ 34 @ 
name: codec  @ 22 @ name: codec  @ 21 @ 
expr  @ 35 @ expr  @ 34 @ 
block_content  @ 48 @ block_content  @ 47 @ 
decl  @ 1 @ decl  @ 1 @ 
expr  @ 58 @ expr  @ 59 @ 
name: NbBits  @ 19 @ name: NbBits  @ 18 @ 
argument  @ 58 @ argument  @ 59 @ 
if_stmt  @ 48 @ if_stmt  @ 47 @ 
decl  @ 7 @ decl  @ 7 @ 
argument_list  @ 65 @ argument_list  @ 66 @ 
operator: .  @ 33 @ operator: .  @ 32 @ 
expr  @ 61 @ expr  @ 62 @ 
literal: 1  @ 55 @ literal: 1  @ 56 @ 
name  @ 13 @ name  @ 13 @ 
name: nbFields  @ 4 @ name: nbFields  @ 4 @ 
if  @ 59 @ if  @ 60 @ 
name: qp_local  @ 80 @ name: qp_local  @ 82 @ 
argument  @ 29 @ argument  @ 28 @ 
expr  @ 43 @ expr  @ 42 @ 
expr  @ 72 @ expr  @ 73 @ 
expr  @ 65 @ expr  @ 66 @ 
block_content  @ 73 @ block_content  @ 74 @ 
name: NbBits  @ 4 @ name: NbBits  @ 4 @ 
return  @ 73 @ return  @ 74 @ 
condition  @ 54 @ condition  @ 55 @ 
incr  @ 40 @ incr  @ 39 @ 
expr  @ 10 @ expr  @ 10 @ 
name: GF_Node  @ 1 @ name: GF_Node  @ 1 @ 
call  @ 51 @ call  @ 52 @ 
argument_list  @ 85 @ argument_list  @ 87 @ 
expr  @ 59 @ expr  @ 60 @ 
name: u32  @ 5 @ name: u32  @ 5 @ 
name: gf_node_list_add_child_last  @ 65 @ name: gf_node_list_add_child_last  @ 66 @ 
name: node  @ 35 @ name: node  @ 34 @ 
name: GF_TRUE  @ 91 @ name: GF_TRUE  @ 93 @ 
argument  @ 19 @ argument  @ 18 @ 
if  @ 91 @ if  @ 93 @ 
return  @ 66 @ return  @ 67 @ 
name: new_node  @ 58 @ name: new_node  @ 59 @ 
expr_stmt  @ 33 @ expr_stmt  @ 32 @ 
expr  @ 43 @ expr  @ 42 @ 
expr  @ 58 @ expr  @ 59 @ 
operator: (  @ 49 @ operator: (  @ 48 @ 
name  @ 58 @ name  @ 59 @ 
name: codec  @ 85 @ name: codec  @ 87 @ 
if_stmt  @ 66 @ if_stmt  @ 67 @ 
block  @ 2 @ block  @ 2 @ 
argument  @ 10 @ argument  @ 10 @ 
name  @ 72 @ name  @ 73 @ 
decl  @ 4 @ decl  @ 4 @ 
condition  @ 76 @ condition  @ 77 @ 
expr  @ 19 @ expr  @ 18 @ 
name  @ 12 @ name  @ 12 @ 
name: nbFields  @ 25 @ name: nbFields  @ 24 @ 
operator: ->  @ 29 @ operator: ->  @ 28 @ 
argument_list  @ 91 @ argument_list  @ 93 @ 
expr  @ 41 @ expr  @ 40 @ 
type  @ 5 @ type  @ 5 @ 
ternary  @ 76 @ ternary  @ 77 @ 
argument_list  @ 20 @ argument_list  @ 19 @ 
name: initial_qp  @ 16 @ name: initial_qp  @ 15 @ 
comment: /*we have a QP in the same scope, remove previousNB: we assume this is the right behavior, the spec doesn't saywhether QP is cumulative or not*/  @ 50 @ comment: /*we have a QP in the same scope, remove previous
						NB: we assume this is the right behavior, the spec doesn't saywhether QP is cumulative or not*/  @ 49 @ 
condition  @ 57 @ condition  @ 58 @ 
block_content  @ 49 @ block_content  @ 48 @ 
name: e  @ 29 @ name: e  @ 28 @ 
modifier: *  @ 41 @ modifier: *  @ 40 @ 
decl  @ 1 @ decl  @ 1 @ 
expr  @ 20 @ expr  @ 19 @ 
name: qp_on  @ 51 @ name: qp_on  @ 52 @ 
type  @ 1 @ type  @ 1 @ 
name: GF_SG_VRML_MFNODE  @ 28 @ name: GF_SG_VRML_MFNODE  @ 27 @ 
block_content  @ 81 @ block_content  @ 83 @ 
expr  @ 55 @ expr  @ 56 @ 
condition  @ 51 @ condition  @ 52 @ 
expr_stmt  @ 16 @ expr_stmt  @ 15 @ 
name: sffield  @ 35 @ name: sffield  @ 34 @ 
block_content  @ 72 @ block_content  @ 73 @ 
name: gf_node_register  @ 43 @ name: gf_node_register  @ 42 @ 
expr  @ 46 @ expr  @ 45 @ 
argument  @ 43 @ argument  @ 42 @ 
decl_stmt  @ 3 @ decl_stmt  @ 3 @ 
operator: !=  @ 28 @ operator: !=  @ 27 @ 
expr_stmt  @ 65 @ expr_stmt  @ 66 @ 
expr  @ 41 @ expr  @ 40 @ 
block  @ 48 @ block  @ 47 @ 
comment: /*according to the spec, the QP applies to the current node itself, not just children.If IsLocal is TRUE remove the node*/  @ 79 @ comment: /*according to the spec, the QP applies to the current node itself, not just children.
		If IsLocal is TRUE remove the node*/  @ 80 @ 
for  @ 32 @ for  @ 31 @ 
expr  @ 51 @ expr  @ 52 @ 
name: gf_node_unregister  @ 62 @ name: gf_node_unregister  @ 63 @ 
name: new_node  @ 65 @ name: new_node  @ 66 @ 
block  @ 34 @ block  @ 33 @ 
operator: ->  @ 49 @ operator: ->  @ 48 @ 
expr  @ 29 @ expr  @ 28 @ 
if  @ 56 @ if  @ 57 @ 
name: qp_local  @ 56 @ name: qp_local  @ 57 @ 
comment: //vector description - alloc the MF size before  @ 18 @ comment: //vector description - alloc the MF size before  @ 17 @ 
expr  @ 53 @ expr  @ 54 @ 
expr  @ 42 @ expr  @ 41 @ 
expr  @ 29 @ expr  @ 28 @ 
operator: &  @ 65 @ operator: &  @ 66 @ 
name: e  @ 53 @ name: e  @ 54 @ 
if_stmt  @ 28 @ if_stmt  @ 27 @ 
operator: =  @ 39 @ operator: =  @ 38 @ 
argument_list  @ 10 @ argument_list  @ 10 @ 
operator: ==  @ 81 @ operator: ==  @ 83 @ 
block  @ 60 @ block  @ 61 @ 
expr  @ 61 @ expr  @ 62 @ 
name: e  @ 30 @ name: e  @ 29 @ 
if  @ 73 @ if  @ 74 @ 
name: field  @ 58 @ name: field  @ 59 @ 
expr  @ 76 @ expr  @ 77 @ 
name: codec  @ 57 @ name: codec  @ 58 @ 
operator: =  @ 53 @ operator: =  @ 54 @ 
name: GF_ChildNodeItem  @ 6 @ name: GF_ChildNodeItem  @ 6 @ 
name: i  @ 32 @ name: i  @ 31 @ 
name: M_QuantizationParameter  @ 49 @ name: M_QuantizationParameter  @ 48 @ 
block  @ 40 @ block  @ 39 @ 
expr_stmt  @ 56 @ expr_stmt  @ 57 @ 
comment: //ask to get rid of QP and reactivate if we had a QP when entering the node  @ 84 @ comment: //ask to get rid of QP and reactivate if we had a QP when entering the node  @ 86 @ 
expr  @ 73 @ expr  @ 74 @ 
else  @ 83 @ else  @ 85 @ 
expr  @ 29 @ expr  @ 28 @ 
decl  @ 5 @ decl  @ 5 @ 
name: NULL  @ 61 @ name: NULL  @ 62 @ 
block  @ 36 @ block  @ 35 @ 
for  @ 40 @ for  @ 39 @ 
argument  @ 72 @ argument  @ 73 @ 
argument  @ 65 @ argument  @ 66 @ 
name: force_keep_qp  @ 57 @ name: force_keep_qp  @ 58 @ 
expr  @ 43 @ expr  @ 42 @ 
expr  @ 35 @ expr  @ 34 @ 
name: e  @ 73 @ name: e  @ 74 @ 
block_content  @ 29 @ block_content  @ 28 @ 
decl  @ 1 @ decl  @ 1 @ 
expr_stmt  @ 29 @ expr_stmt  @ 28 @ 
if  @ 51 @ if  @ 52 @ 
expr  @ 85 @ expr  @ 87 @ 
return  @ 36 @ return  @ 35 @ 
block  @ 75 @ block  @ 76 @ 
type  @ 3 @ type  @ 3 @ 
expr  @ 91 @ expr  @ 93 @ 
name: field  @ 33 @ name: field  @ 32 @ 
name: fieldType  @ 29 @ name: fieldType  @ 28 @ 
argument  @ 85 @ argument  @ 87 @ 
name: bs  @ 20 @ name: bs  @ 19 @ 
name: Bool  @ 1 @ name: Bool  @ 1 @ 
if  @ 34 @ if  @ 33 @ 
decl  @ 6 @ decl  @ 6 @ 
if_stmt  @ 42 @ if_stmt  @ 41 @ 
expr  @ 11 @ expr  @ 11 @ 
operator: ->  @ 33 @ operator: ->  @ 32 @ 
name: new_node  @ 72 @ name: new_node  @ 73 @ 
expr  @ 33 @ expr  @ 32 @ 
operator: ->  @ 57 @ operator: ->  @ 58 @ 
name: field  @ 41 @ name: field  @ 40 @ 
name: e  @ 34 @ name: e  @ 33 @ 
expr  @ 56 @ expr  @ 57 @ 
name: e  @ 34 @ name: e  @ 33 @ 
name: GF_FieldInfo  @ 10 @ name: GF_FieldInfo  @ 10 @ 
block  @ 80 @ block  @ 82 @ 
name: last  @ 58 @ name: last  @ 59 @ 
if_stmt  @ 91 @ if_stmt  @ 93 @ 
else  @ 43 @ else  @ 42 @ 
if_stmt  @ 57 @ if_stmt  @ 58 @ 
modifier: *  @ 6 @ modifier: *  @ 6 @ 
expr  @ 43 @ expr  @ 42 @ 
expr  @ 43 @ expr  @ 42 @ 
argument  @ 10 @ argument  @ 10 @ 
name  @ 13 @ name  @ 13 @ 
if  @ 70 @ if  @ 71 @ 
expr  @ 54 @ expr  @ 55 @ 
expr  @ 53 @ expr  @ 54 @ 
name: memset  @ 10 @ name: memset  @ 10 @ 
argument  @ 85 @ argument  @ 87 @ 
literal: 0  @ 16 @ literal: 0  @ 15 @ 
block  @ 44 @ block  @ 43 @ 
decl_stmt  @ 5 @ decl_stmt  @ 5 @ 
name: field  @ 28 @ name: field  @ 27 @ 
control  @ 32 @ control  @ 31 @ 
name: i  @ 32 @ name: i  @ 31 @ 
block  @ 42 @ block  @ 41 @ 
name: GF_OK  @ 92 @ name: GF_OK  @ 94 @ 
expr_stmt  @ 43 @ expr_stmt  @ 42 @ 
type  @ 7 @ type  @ 7 @ 
expr  @ 30 @ expr  @ 29 @ 
name: NULL  @ 43 @ name: NULL  @ 42 @ 
expr  @ 44 @ expr  @ 43 @ 
expr  @ 41 @ expr  @ 40 @ 
block  @ 66 @ block  @ 67 @ 
name: nbFields  @ 29 @ name: nbFields  @ 28 @ 
name: u32  @ 4 @ name: u32  @ 4 @ 
name  @ 29 @ name  @ 28 @ 
expr  @ 62 @ expr  @ 63 @ 
argument_list  @ 29 @ argument_list  @ 28 @ 
name: bs  @ 19 @ name: bs  @ 18 @ 
expr  @ 58 @ expr  @ 59 @ 
comment: //qp_local = 0;  @ 86 @ comment: //				qp_local = 0;  @ 88 @ 
name: gf_sg_vrml_mf_get_item  @ 33 @ name: gf_sg_vrml_mf_get_item  @ 32 @ 
argument  @ 35 @ argument  @ 34 @ 
name: field  @ 12 @ name: field  @ 12 @ 
argument_list  @ 51 @ argument_list  @ 52 @ 
if_stmt  @ 44 @ if_stmt  @ 43 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
block_content  @ 58 @ block_content  @ 59 @ 
operator: =  @ 35 @ operator: =  @ 34 @ 
block_content  @ 36 @ block_content  @ 35 @ 
expr  @ 25 @ expr  @ 24 @ 
expr_stmt  @ 62 @ expr_stmt  @ 63 @ 
expr  @ 48 @ expr  @ 47 @ 
call  @ 35 @ call  @ 34 @ 
if_stmt  @ 34 @ if_stmt  @ 33 @ 
operator: =  @ 16 @ operator: =  @ 15 @ 
operator: =  @ 58 @ operator: =  @ 59 @ 
block_content  @ 43 @ block_content  @ 42 @ 
if  @ 48 @ if  @ 47 @ 
block_content  @ 1 @ block_content  @ 1 @ 
expr  @ 40 @ expr  @ 39 @ 
condition  @ 43 @ condition  @ 42 @ 
condition  @ 32 @ condition  @ 31 @ 
block  @ 81 @ block  @ 83 @ 
expr  @ 32 @ expr  @ 31 @ 
argument  @ 33 @ argument  @ 32 @ 
call  @ 12 @ call  @ 12 @ 
condition  @ 22 @ condition  @ 21 @ 
expr  @ 66 @ expr  @ 67 @ 
block_content  @ 41 @ block_content  @ 40 @ 
name: node  @ 62 @ name: node  @ 63 @ 
name: gf_bifs_dec_sf_field  @ 35 @ name: gf_bifs_dec_sf_field  @ 34 @ 
operator: ->  @ 29 @ operator: ->  @ 28 @ 
name: e  @ 72 @ name: e  @ 73 @ 
argument  @ 58 @ argument  @ 59 @ 
block_content  @ 34 @ block_content  @ 33 @ 
operator: .  @ 13 @ operator: .  @ 13 @ 
name: gf_bifs_dec_qp_remove  @ 85 @ name: gf_bifs_dec_qp_remove  @ 87 @ 
operator: ++  @ 32 @ operator: ++  @ 31 @ 
expr  @ 33 @ expr  @ 32 @ 
block_content  @ 56 @ block_content  @ 57 @ 
block  @ 46 @ block  @ 45 @ 
expr  @ 25 @ expr  @ 24 @ 
if_stmt  @ 80 @ if_stmt  @ 82 @ 
expr  @ 76 @ expr  @ 77 @ 
expr  @ 76 @ expr  @ 77 @ 
condition  @ 66 @ condition  @ 67 @ 
argument  @ 62 @ argument  @ 63 @ 
argument  @ 48 @ argument  @ 47 @ 
name: gf_sg_vrml_mf_alloc  @ 29 @ name: gf_sg_vrml_mf_alloc  @ 28 @ 
block  @ 30 @ block  @ 29 @ 
argument  @ 91 @ argument  @ 93 @ 
name: nbFields  @ 32 @ name: nbFields  @ 31 @ 
name: qp_on  @ 7 @ name: qp_on  @ 7 @ 
name: far_ptr  @ 58 @ name: far_ptr  @ 59 @ 
name: codec  @ 70 @ name: codec  @ 71 @ 
if  @ 42 @ if  @ 41 @ 
if_stmt  @ 46 @ if_stmt  @ 45 @ 
decl  @ 3 @ decl  @ 3 @ 
condition  @ 80 @ condition  @ 82 @ 
if_stmt  @ 59 @ if_stmt  @ 60 @ 
call  @ 19 @ call  @ 18 @ 
name: far_ptr  @ 33 @ name: far_ptr  @ 32 @ 
return  @ 34 @ return  @ 33 @ 
if  @ 22 @ if  @ 21 @ 
operator: =  @ 55 @ operator: =  @ 56 @ 
name: codec  @ 91 @ name: codec  @ 93 @ 
name: initial_qp  @ 85 @ name: initial_qp  @ 87 @ 
name: gf_bifs_dec_node  @ 41 @ name: gf_bifs_dec_node  @ 40 @ 
expr  @ 29 @ expr  @ 28 @ 
literal: 0  @ 32 @ literal: 0  @ 31 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
type  @ 4 @ type  @ 4 @ 
operator: &  @ 58 @ operator: &  @ 59 @ 
expr  @ 10 @ expr  @ 10 @ 
argument  @ 25 @ argument  @ 24 @ 
argument  @ 91 @ argument  @ 93 @ 
if  @ 44 @ if  @ 43 @ 
comment: //qp_local = 1;  @ 82 @ comment: //				qp_local = 1;  @ 84 @ 
condition  @ 70 @ condition  @ 71 @ 
argument  @ 33 @ argument  @ 32 @ 
name: new_node  @ 43 @ name: new_node  @ 42 @ 
name: bs  @ 41 @ name: bs  @ 40 @ 
name: pCurrentProto  @ 70 @ name: pCurrentProto  @ 71 @ 
expr  @ 40 @ expr  @ 39 @ 
block  @ 91 @ block  @ 93 @ 
expr_stmt  @ 49 @ expr_stmt  @ 48 @ 
expr  @ 61 @ expr  @ 62 @ 
block  @ 32 @ block  @ 31 @ 
name: e  @ 54 @ name: e  @ 55 @ 
operator: ->  @ 65 @ operator: ->  @ 66 @ 
expr  @ 20 @ expr  @ 19 @ 
operator: ==  @ 48 @ operator: ==  @ 47 @ 
block  @ 22 @ block  @ 21 @ 
name: qp_local  @ 7 @ name: qp_local  @ 7 @ 
parameter_list  @ 1 @ parameter_list  @ 1 @ 
argument_list  @ 61 @ argument_list  @ 62 @ 
name  @ 41 @ name  @ 40 @ 
decl  @ 1 @ decl  @ 1 @ 
argument  @ 41 @ argument  @ 40 @ 
expr  @ 40 @ expr  @ 39 @ 
call  @ 43 @ call  @ 42 @ 
condition  @ 44 @ condition  @ 43 @ 
name: NDTtype  @ 13 @ name: NDTtype  @ 13 @ 
parameter  @ 1 @ parameter  @ 1 @ 
if  @ 54 @ if  @ 55 @ 
argument_list  @ 58 @ argument_list  @ 59 @ 
name: e  @ 30 @ name: e  @ 29 @ 
block  @ 28 @ block  @ 27 @ 
decl_stmt  @ 8 @ decl_stmt  @ 8 @ 
operator: =  @ 49 @ operator: =  @ 48 @ 
name: last  @ 65 @ name: last  @ 66 @ 
operator: =  @ 40 @ operator: =  @ 39 @ 
call  @ 20 @ call  @ 19 @ 
name: field  @ 33 @ name: field  @ 32 @ 
expr_stmt  @ 10 @ expr_stmt  @ 10 @ 
name: gf_bifs_dec_qp_set  @ 53 @ name: gf_bifs_dec_qp_set  @ 54 @ 
operator: =  @ 16 @ operator: =  @ 15 @ 
type  @ 1 @ type  @ 1 @ 
name: gf_bifs_dec_qp14_set_length  @ 25 @ name: gf_bifs_dec_qp14_set_length  @ 24 @ 
expr_stmt  @ 51 @ expr_stmt  @ 52 @ 
name  @ 70 @ name  @ 71 @ 
decl_stmt  @ 41 @ decl_stmt  @ 40 @ 
argument  @ 53 @ argument  @ 54 @ 
literal: 2  @ 56 @ literal: 2  @ 57 @ 
name: new_node  @ 42 @ name: new_node  @ 41 @ 
block_content  @ 39 @ block_content  @ 38 @ 
name: e  @ 65 @ name: e  @ 66 @ 
condition  @ 73 @ condition  @ 74 @ 
operator: ->  @ 11 @ operator: ->  @ 11 @ 
operator: &  @ 10 @ operator: &  @ 10 @ 
then  @ 76 @ then  @ 77 @ 
expr  @ 22 @ expr  @ 21 @ 
name: e  @ 73 @ name: e  @ 74 @ 
expr  @ 81 @ expr  @ 83 @ 
block  @ 38 @ block  @ 37 @ 
decl_stmt  @ 4 @ decl_stmt  @ 4 @ 
operator: &&  @ 80 @ operator: &&  @ 82 @ 
type  @ 41 @ type  @ 40 @ 
if_stmt  @ 22 @ if_stmt  @ 21 @ 
else  @ 60 @ else  @ 61 @ 
comment: /*finally delete the QP if any (local or not) as we get out of this node*/  @ 90 @ comment: /*finally delete the QP if any (local or not) as we get out of this node*/  @ 92 @ 
name: qp_on  @ 16 @ name: qp_on  @ 15 @ 
operator: )  @ 49 @ operator: )  @ 48 @ 
operator: =  @ 13 @ operator: =  @ 13 @ 
operator: (  @ 49 @ operator: (  @ 48 @ 
expr  @ 19 @ expr  @ 18 @ 
expr_stmt  @ 23 @ expr_stmt  @ 22 @ 
operator: *  @ 49 @ operator: *  @ 48 @ 
return  @ 76 @ return  @ 77 @ 
block_content  @ 61 @ block_content  @ 62 @ 
type  @ 7 @ type  @ 7 @ 
block_content  @ 51 @ block_content  @ 52 @ 
argument  @ 33 @ argument  @ 32 @ 
condition  @ 91 @ condition  @ 93 @ 
operator: (  @ 72 @ operator: (  @ 73 @ 
name: NDTtype  @ 41 @ name: NDTtype  @ 40 @ 
expr  @ 10 @ expr  @ 10 @ 
name  @ 11 @ name  @ 11 @ 
name: e  @ 36 @ name: e  @ 35 @ 
ternary  @ 43 @ ternary  @ 42 @ 
type  @ 6 @ type  @ 6 @ 
operator: =  @ 11 @ operator: =  @ 11 @ 
if  @ 30 @ if  @ 29 @ 
expr  @ 34 @ expr  @ 33 @ 
name: NULL  @ 39 @ name: NULL  @ 38 @ 
comment: /*TO DO: what happens if this is a QP node on the interface ?*/  @ 71 @ comment: /*TO DO: what happens if this is a QP node on the interface ?*/  @ 72 @ 
expr  @ 54 @ expr  @ 55 @ 
name: NbBits  @ 20 @ name: NbBits  @ 19 @ 
expr  @ 12 @ expr  @ 12 @ 
decl  @ 4 @ decl  @ 4 @ 
expr_stmt  @ 35 @ expr_stmt  @ 34 @ 
name: LastError  @ 76 @ name: LastError  @ 77 @ 
expr  @ 72 @ expr  @ 73 @ 
name: TAG_MPEG4_QuantizationParameter  @ 48 @ name: TAG_MPEG4_QuantizationParameter  @ 47 @ 
block_content  @ 54 @ block_content  @ 55 @ 
name: new_node  @ 48 @ name: new_node  @ 47 @ 
name  @ 57 @ name  @ 58 @ 
name: qp_local  @ 16 @ name: qp_local  @ 15 @ 
name: gf_sg_vrml_get_sf_type  @ 12 @ name: gf_sg_vrml_get_sf_type  @ 12 @ 
block_content  @ 3 @ block_content  @ 3 @ 
call  @ 53 @ call  @ 54 @ 
name: new_node  @ 61 @ name: new_node  @ 62 @ 
argument  @ 51 @ argument  @ 52 @ 
name: bs  @ 35 @ name: bs  @ 34 @ 
operator: ++  @ 40 @ operator: ++  @ 39 @ 
name  @ 22 @ name  @ 21 @ 
name: GF_FieldInfo  @ 1 @ name: GF_FieldInfo  @ 1 @ 
if  @ 81 @ if  @ 83 @ 
type  @ 4 @ type  @ 4 @ 
name: fieldType  @ 33 @ name: fieldType  @ 32 @ 
block  @ 64 @ block  @ 65 @ 
block_content  @ 44 @ block_content  @ 43 @ 
argument  @ 35 @ argument  @ 34 @ 
name: nbFields  @ 20 @ name: nbFields  @ 19 @ 
operator: =  @ 43 @ operator: =  @ 42 @ 
literal: 0  @ 10 @ literal: 0  @ 10 @ 
expr  @ 19 @ expr  @ 18 @ 
expr_stmt  @ 91 @ expr_stmt  @ 93 @ 
expr  @ 35 @ expr  @ 34 @ 
operator: .  @ 11 @ operator: .  @ 11 @ 
name  @ 33 @ name  @ 32 @ 
name: codec  @ 53 @ name: codec  @ 54 @ 
call  @ 65 @ call  @ 66 @ 
expr  @ 34 @ expr  @ 33 @ 
operator: =  @ 12 @ operator: =  @ 12 @ 
condition  @ 81 @ condition  @ 83 @ 
return  @ 54 @ return  @ 55 @ 
argument  @ 33 @ argument  @ 32 @ 
name: GF_ChildNodeItem  @ 72 @ name: GF_ChildNodeItem  @ 73 @ 
operator: .  @ 12 @ operator: .  @ 12 @ 
name: nbFields  @ 40 @ name: nbFields  @ 39 @ 
literal: 2  @ 81 @ literal: 2  @ 83 @ 
name: e  @ 66 @ name: e  @ 67 @ 
expr  @ 30 @ expr  @ 29 @ 
name: i  @ 40 @ name: i  @ 39 @ 
name: field  @ 29 @ name: field  @ 28 @ 
name: sffield  @ 10 @ name: sffield  @ 10 @ 
expr  @ 58 @ expr  @ 59 @ 
expr_stmt  @ 13 @ expr_stmt  @ 13 @ 
name: last  @ 39 @ name: last  @ 38 @ 
comment: /*this is for QP 14*/  @ 24 @ comment: /*this is for QP 14*/  @ 23 @ 
block  @ 59 @ block  @ 60 @ 
if  @ 80 @ if  @ 82 @ 
return  @ 30 @ return  @ 29 @ 
name: GF_FALSE  @ 51 @ name: GF_FALSE  @ 52 @ 
argument  @ 41 @ argument  @ 40 @ 
expr  @ 10 @ expr  @ 10 @ 
operator: =  @ 56 @ operator: =  @ 57 @ 
name: e  @ 54 @ name: e  @ 55 @ 
name: qp_on  @ 55 @ name: qp_on  @ 56 @ 
argument  @ 41 @ argument  @ 40 @ 
expr  @ 62 @ expr  @ 63 @ 
name: e  @ 33 @ name: e  @ 32 @ 
name: far_ptr  @ 33 @ name: far_ptr  @ 32 @ 
block_content  @ 76 @ block_content  @ 77 @ 
argument_list  @ 53 @ argument_list  @ 54 @ 
name: LastError  @ 76 @ name: LastError  @ 77 @ 
name: i  @ 33 @ name: i  @ 32 @ 
unit  @ 1 @ unit  @ 1 @ 
expr  @ 65 @ expr  @ 66 @ 
name: gf_bs_read_int  @ 19 @ name: gf_bs_read_int  @ 18 @ 
expr_stmt  @ 55 @ expr_stmt  @ 56 @ 
name: GF_FieldInfo  @ 8 @ name: GF_FieldInfo  @ 8 @ 
name: codec  @ 76 @ name: codec  @ 77 @ 
name  @ 76 @ name  @ 77 @ 
argument  @ 62 @ argument  @ 63 @ 
if  @ 57 @ if  @ 58 @ 
operator: ->  @ 76 @ operator: ->  @ 77 @ 
type  @ 1 @ type  @ 1 @ 
argument_list  @ 19 @ argument_list  @ 18 @ 
type  @ 7 @ type  @ 7 @ 
argument  @ 51 @ argument  @ 52 @ 
expr  @ 32 @ expr  @ 31 @ 
operator: *  @ 72 @ operator: *  @ 73 @ 
call  @ 25 @ call  @ 24 @ 
name: sffield  @ 12 @ name: sffield  @ 12 @ 
call  @ 48 @ call  @ 47 @ 
name: codec  @ 51 @ name: codec  @ 52 @ 
operator: ->  @ 22 @ operator: ->  @ 21 @ 
expr_stmt  @ 53 @ expr_stmt  @ 54 @ 
name: last  @ 72 @ name: last  @ 73 @ 
name: GF_BitStream  @ 1 @ name: GF_BitStream  @ 1 @ 
argument  @ 61 @ argument  @ 62 @ 
incr  @ 32 @ incr  @ 31 @ 
name: e  @ 44 @ name: e  @ 43 @ 
name: codec  @ 76 @ name: codec  @ 77 @ 
name: new_node  @ 62 @ name: new_node  @ 63 @ 
call  @ 33 @ call  @ 32 @ 
name: GF_BifsDecoder  @ 1 @ name: GF_BifsDecoder  @ 1 @ 
name: GF_FALSE  @ 35 @ name: GF_FALSE  @ 34 @ 
expr  @ 65 @ expr  @ 66 @ 
else  @ 75 @ else  @ 76 @ 
if  @ 46 @ if  @ 45 @ 
decl  @ 7 @ decl  @ 7 @ 
expr_stmt  @ 39 @ expr_stmt  @ 38 @ 
call  @ 62 @ call  @ 63 @ 
expr  @ 10 @ expr  @ 10 @ 
argument  @ 72 @ argument  @ 73 @ 
argument_list  @ 12 @ argument_list  @ 12 @ 
condition  @ 42 @ condition  @ 41 @ 
operator: ->  @ 33 @ operator: ->  @ 32 @ 
expr  @ 70 @ expr  @ 71 @ 
operator: =  @ 33 @ operator: =  @ 32 @ 
name: gf_node_list_add_child_last  @ 72 @ name: gf_node_list_add_child_last  @ 73 @ 
argument_list  @ 43 @ argument_list  @ 42 @ 
block_content  @ 85 @ block_content  @ 87 @ 
name: gf_bifs_dec_qp_remove  @ 51 @ name: gf_bifs_dec_qp_remove  @ 52 @ 
expr  @ 35 @ expr  @ 34 @ 
type  @ 1 @ type  @ 1 @ 
operator: =  @ 29 @ operator: =  @ 28 @ 
type  @ 8 @ type  @ 8 @ 
expr  @ 32 @ expr  @ 31 @ 
name: i  @ 40 @ name: i  @ 39 @ 
name  @ 33 @ name  @ 32 @ 
expr_stmt  @ 11 @ expr_stmt  @ 11 @ 
then  @ 43 @ then  @ 42 @ 
expr  @ 51 @ expr  @ 52 @ 
expr  @ 62 @ expr  @ 63 @ 
block  @ 70 @ block  @ 71 @ 
expr_stmt  @ 25 @ expr_stmt  @ 24 @ 
comment: /*special case for QP, register as the current QP*/  @ 47 @ comment: /*special case for QP, register as the current QP*/  @ 46 @ 
name: codec  @ 25 @ name: codec  @ 24 @ 
name: e  @ 66 @ name: e  @ 67 @ 
function  @ 1 @ function  @ 1 @ 
argument  @ 10 @ argument  @ 10 @ 
name: far_ptr  @ 65 @ name: far_ptr  @ 66 @ 
name: isLocal  @ 49 @ name: isLocal  @ 48 @ 
name: qp_on  @ 91 @ name: qp_on  @ 93 @ 
decl  @ 41 @ decl  @ 40 @ 
literal: 5  @ 19 @ literal: 5  @ 18 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
expr  @ 65 @ expr  @ 66 @ 
if_stmt  @ 73 @ if_stmt  @ 74 @ 
name: qp_local  @ 81 @ name: qp_local  @ 83 @ 
condition  @ 36 @ condition  @ 35 @ 
literal: 0  @ 40 @ literal: 0  @ 39 @ 
name: fieldType  @ 12 @ name: fieldType  @ 12 @ 
name: e  @ 59 @ name: e  @ 60 @ 
name: node  @ 1 @ name: node  @ 1 @ 
else  @ 64 @ else  @ 65 @ 
expr  @ 36 @ expr  @ 35 @ 
name  @ 11 @ name  @ 11 @ 
expr  @ 36 @ expr  @ 35 @ 
expr_stmt  @ 72 @ expr_stmt  @ 73 @ 
expr  @ 72 @ expr  @ 73 @ 
name: node  @ 43 @ name: node  @ 42 @ 
expr  @ 16 @ expr  @ 15 @ 
name: field  @ 13 @ name: field  @ 13 @ 
argument  @ 20 @ argument  @ 19 @ 
name: e  @ 58 @ name: e  @ 59 @ 
operator: &  @ 33 @ operator: &  @ 32 @ 
decl  @ 1 @ decl  @ 1 @ 
parameter  @ 1 @ parameter  @ 1 @ 
if  @ 66 @ if  @ 67 @ 
expr  @ 25 @ expr  @ 24 @ 
if_stmt  @ 30 @ if_stmt  @ 29 @ 
if_stmt  @ 54 @ if_stmt  @ 55 @ 
argument  @ 25 @ argument  @ 24 @ 
expr  @ 41 @ expr  @ 40 @ 
argument  @ 43 @ argument  @ 42 @ 
else  @ 76 @ else  @ 77 @ 
operator: =  @ 16 @ operator: =  @ 15 @ 
expr  @ 49 @ expr  @ 48 @ 
name: sffield  @ 8 @ name: sffield  @ 8 @ 
block_content  @ 59 @ block_content  @ 60 @ 
block  @ 54 @ block  @ 55 @ 
name: GF_NON_COMPLIANT_BITSTREAM  @ 76 @ name: GF_NON_COMPLIANT_BITSTREAM  @ 77 @ 
argument  @ 35 @ argument  @ 34 @ 
call  @ 10 @ call  @ 10 @ 
if_stmt  @ 81 @ if_stmt  @ 83 @ 
expr  @ 35 @ expr  @ 34 @ 
expr  @ 91 @ expr  @ 93 @ 

