if  @ 243 @ if  @ 216 @ 
name: id  @ 183 @ name: mesgno  @ 209 @ 
expr_stmt  @ 140 @ expr_stmt  @ 158 @ 
name  @ 269 @ name  @ 248 @ 
operator: >=  @ 128 @ operator: >=  @ 146 @ 
name: chunk  @ 41 @ name: chunk  @ 45 @ 
operator: ||  @ 148 @ operator: ||  @ 164 @ 
expr_stmt  @ 278 @ expr_stmt  @ 317 @ 
name  @ 133 @ name  @ 69 @ 
argument  @ 59 @ argument  @ 64 @ 
operator: =  @ 49 @ operator: =  @ 54 @ 
operator: =  @ 66 @ operator: =  @ 74 @ 
parameter_list  @ 2 @ parameter_list  @ 2 @ 
if_stmt  @ 58 @ if_stmt  @ 63 @ 
operator: (  @ 233 @ operator: (  @ 293 @ 
expr  @ 20 @ expr  @ 21 @ 
operator: >  @ 56 @ operator: >  @ 61 @ 
operator: =  @ 140 @ operator: =  @ 158 @ 
operator: =  @ 85 @ operator: =  @ 100 @ 
expr_stmt  @ 41 @ expr_stmt  @ 45 @ 
name: H5F_ACC_RDWR  @ 233 @ name: H5F_ACC_RDWR  @ 293 @ 
name: unknown  @ 159 @ name: unknown  @ 175 @ 
name: id  @ 113 @ name: id  @ 133 @ 
operator: &  @ 165 @ operator: &  @ 181 @ 
expr  @ 25 @ expr  @ 26 @ 
modifier: *  @ 26 @ modifier: *  @ 27 @ 
decl  @ 72 @ decl  @ 81 @ 
specifier: static  @ 1 @ specifier: static  @ 1 @ 
name: size_t  @ 39 @ name: size_t  @ 41 @ 
expr  @ 28 @ expr  @ 29 @ 
operator: ->  @ 217 @ operator: ->  @ 289 @ 
name: uint8_t  @ 2 @ name: uint8_t  @ 2 @ 
operator: ->  @ 174 @ operator: ->  @ 199 @ 
comment: /* Decode message prefix info */  @ 74 @ comment: /* Decode message prefix info */  @ 83 @ 
name: nmesgs  @ 118 @ name: nmesgs  @ 138 @ 
expr  @ 28 @ expr  @ 29 @ 
expr  @ 167 @ expr  @ 184 @ 
expr_stmt  @ 133 @ expr_stmt  @ 69 @ 
name: chunkno  @ 64 @ name: chunkno  @ 72 @ 
name: oh  @ 245 @ name: oh  @ 218 @ 
name: chunk_image  @ 85 @ name: p  @ 100 @ 
index  @ 269 @ index  @ 248 @ 
operator: =  @ 184 @ operator: =  @ 209 @ 
expr  @ 54 @ expr  @ 59 @ 
argument  @ 203 @ argument  @ 267 @ 
macro  @ 78 @ macro  @ 87 @ 
argument  @ 78 @ argument  @ 87 @ 
name: udata  @ 21 @ name: udata  @ 22 @ 
expr_stmt  @ 245 @ expr_stmt  @ 218 @ 
block_content  @ 129 @ block_content  @ 147 @ 
name: unknown  @ 156 @ name: unknown  @ 172 @ 
argument  @ 21 @ argument  @ 22 @ 
name: oh  @ 46 @ name: oh  @ 51 @ 
argument  @ 104 @ argument  @ 123 @ 
expr  @ 119 @ expr  @ 139 @ 
name: image  @ 46 @ name: image  @ 51 @ 
block  @ 41 @ block  @ 43 @ 
expr  @ 46 @ expr  @ 51 @ 
operator: .  @ 36 @ operator: .  @ 44 @ 
name: oh  @ 113 @ name: oh  @ 135 @ 
index  @ 64 @ index  @ 72 @ 
operator: ->  @ 34 @ operator: ->  @ 36 @ 
name: udata  @ 20 @ name: udata  @ 21 @ 
endif  @ 110 @ endif  @ 129 @ 
literal: "unknown message with 'fail if unknown' flag found"  @ 166 @ literal: "unknown message with 'fail if unknown' flag found"  @ 182 @ 
name: crt_idx  @ 138 @ name: crt_idx  @ 156 @ 
expr_stmt  @ 83 @ expr_stmt  @ 96 @ 
name: H5O_MSG_FLAG_SHARED  @ 88 @ name: H5O_MSG_FLAG_SHARED  @ 103 @ 
argument_list  @ 155 @ argument_list  @ 168 @ 
name: H5O_MSG_FLAG_DONTSHARE  @ 88 @ name: H5O_MSG_FLAG_DONTSHARE  @ 103 @ 
index  @ 184 @ index  @ 209 @ 
expr  @ 54 @ expr  @ 59 @ 
call  @ 129 @ call  @ 147 @ 
literal: 0  @ 6 @ literal: 0  @ 8 @ 
operator: +=  @ 254 @ operator: +=  @ 227 @ 
operator: &&  @ 113 @ operator: &&  @ 134 @ 
name: mesg  @ 137 @ name: oh  @ 155 @ 
name: H5O_msg_class_g  @ 150 @ name: H5O_msg_class_g  @ 164 @ 
operator: )  @ 92 @ operator: )  @ 107 @ 
name: x  @ 30 @ name: x  @ 32 @ 
operator: ->  @ 128 @ operator: ->  @ 146 @ 
name: flags  @ 86 @ name: flags  @ 101 @ 
operator: ->  @ 224 @ operator: ->  @ 302 @ 
operator: *  @ 278 @ operator: *  @ 317 @ 
operator: (  @ 90 @ operator: (  @ 105 @ 
name: chunkno  @ 113 @ name: chunkno  @ 135 @ 
block  @ 59 @ block  @ 64 @ 
name: oh  @ 118 @ name: oh  @ 138 @ 
name: id  @ 108 @ name: id  @ 127 @ 
condition  @ 88 @ condition  @ 103 @ 
name  @ 56 @ name  @ 61 @ 
decl_stmt  @ 69 @ decl_stmt  @ 78 @ 
expr  @ 19 @ expr  @ 20 @ 
block_content  @ 59 @ block_content  @ 64 @ 
name: size_t  @ 2 @ name: size_t  @ 2 @ 
name: mesg  @ 142 @ name: oh  @ 160 @ 
argument  @ 104 @ argument  @ 123 @ 
name: oh  @ 224 @ name: oh  @ 302 @ 
call  @ 19 @ call  @ 20 @ 
call  @ 155 @ call  @ 168 @ 
expr  @ 24 @ expr  @ 25 @ 
argument  @ 156 @ argument  @ 169 @ 
literal: 0  @ 202 @ literal: 0  @ 266 @ 
name: oh  @ 113 @ name: oh  @ 133 @ 
expr  @ 64 @ expr  @ 72 @ 
operator: ++  @ 85 @ operator: ++  @ 100 @ 
name: flags  @ 92 @ name: flags  @ 107 @ 
operator: !=  @ 84 @ operator: ==  @ 97 @ 
if_stmt  @ 92 @ if_stmt  @ 107 @ 
name: raw  @ 140 @ name: raw  @ 158 @ 
argument  @ 78 @ argument  @ 87 @ 
name: mesg  @ 159 @ name: oh  @ 175 @ 
name: decode  @ 211 @ name: decode  @ 283 @ 
name: dirty  @ 2 @ name: dirty  @ 3 @ 
argument  @ 83 @ argument  @ 96 @ 
operator: ++  @ 80 @ operator: ++  @ 89 @ 
macro  @ 87 @ macro  @ 102 @ 
name  @ 113 @ name  @ 134 @ 
name: udata  @ 169 @ name: udata  @ 186 @ 
literal: 0  @ 243 @ literal: 0  @ 216 @ 
argument  @ 84 @ argument  @ 97 @ 
operator: ==  @ 37 @ operator: ==  @ 38 @ 
name: herr_t  @ 1 @ name: herr_t  @ 1 @ 
index  @ 120 @ index  @ 140 @ 
argument  @ 59 @ argument  @ 64 @ 
block  @ 129 @ block  @ 147 @ 
name  @ 77 @ name  @ 86 @ 
expr_stmt  @ 85 @ expr_stmt  @ 100 @ 
operator: &&  @ 113 @ operator: &&  @ 133 @ 
name: udata  @ 195 @ name: udata  @ 259 @ 
block_content  @ 98 @ block_content  @ 115 @ 
decl_stmt  @ 26 @ decl_stmt  @ 27 @ 
name: image  @ 64 @ name: image  @ 72 @ 
block  @ 222 @ block  @ 300 @ 
operator: )  @ 169 @ operator: )  @ 186 @ 
operator: .  @ 64 @ operator: .  @ 72 @ 
name: HDassert  @ 269 @ name: HDassert  @ 248 @ 
block  @ 93 @ block  @ 108 @ 
operator: ->  @ 24 @ operator: ->  @ 25 @ 
decl_stmt  @ 25 @ decl_stmt  @ 26 @ 
operator: (  @ 140 @ operator: (  @ 158 @ 
operator: *  @ 140 @ operator: *  @ 158 @ 
expr  @ 202 @ expr  @ 266 @ 
name  @ 64 @ name  @ 72 @ 
name: flags  @ 88 @ name: flags  @ 103 @ 
operator: >=  @ 146 @ operator: >=  @ 164 @ 
name: eom_ptr  @ 64 @ name: eom_ptr  @ 72 @ 
type  @ 260 @ type  @ 233 @ 
name: unsigned  @ 125 @ name: unsigned  @ 256 @ 
block  @ 95 @ block  @ 112 @ 
operator: =  @ 118 @ operator: =  @ 138 @ 
if_stmt  @ 155 @ if_stmt  @ 168 @ 
macro  @ 93 @ macro  @ 108 @ 
expr_stmt  @ 269 @ expr_stmt  @ 248 @ 
name: chunkno  @ 42 @ name: chunkno  @ 47 @ 
name: version  @ 56 @ name: version  @ 61 @ 
operator: .  @ 269 @ operator: .  @ 248 @ 
name: version  @ 259 @ name: version  @ 232 @ 
block  @ 130 @ block  @ 148 @ 
expr  @ 66 @ expr  @ 74 @ 
operator: =  @ 177 @ operator: =  @ 202 @ 
name: mesg_size  @ 83 @ name: mesg_size  @ 96 @ 
call  @ 28 @ call  @ 29 @ 
argument  @ 28 @ argument  @ 29 @ 
operator: ->  @ 64 @ operator: ->  @ 72 @ 
call  @ 248 @ call  @ 221 @ 
operator: ->  @ 113 @ operator: ->  @ 134 @ 
expr  @ 174 @ expr  @ 199 @ 
argument  @ 25 @ argument  @ 26 @ 
expr  @ 240 @ expr  @ 213 @ 
name: chunk_image  @ 60 @ name: p  @ 65 @ 
expr  @ 113 @ expr  @ 134 @ 
name: chunkno  @ 269 @ name: chunkno  @ 248 @ 
name  @ 254 @ name  @ 227 @ 
else  @ 79 @ else  @ 88 @ 
operator: >  @ 259 @ operator: >  @ 232 @ 
name  @ 130 @ name  @ 151 @ 
condition  @ 77 @ condition  @ 86 @ 
if  @ 52 @ if  @ 57 @ 
name: size_t  @ 25 @ name: size_t  @ 26 @ 
operator: ->  @ 64 @ operator: ->  @ 72 @ 
name: H5O_MSG_CONT  @ 195 @ name: H5O_MSG_CONT  @ 259 @ 
name: HGOTO_ERROR  @ 156 @ name: HGOTO_ERROR  @ 169 @ 
name: na  @ 28 @ name: na  @ 29 @ 
expr  @ 35 @ expr  @ 37 @ 
operator: =  @ 43 @ operator: -  @ 240 @ 
block  @ 227 @ block  @ 305 @ 
operator: &&  @ 113 @ operator: &&  @ 132 @ 
name: mesg  @ 139 @ name: oh  @ 157 @ 
expr  @ 43 @ expr  @ 240 @ 
name: oh  @ 133 @ name: oh  @ 69 @ 
name: refcount  @ 219 @ name: refcount  @ 290 @ 
operator: ->  @ 128 @ operator: ->  @ 146 @ 
name: NDEBUG  @ 106 @ name: NDEBUG  @ 125 @ 
expr_stmt  @ 49 @ expr_stmt  @ 54 @ 
expr  @ 137 @ expr  @ 155 @ 
condition  @ 52 @ condition  @ 57 @ 
type  @ 4 @ type  @ 5 @ 
argument  @ 58 @ argument  @ 63 @ 
name: oh  @ 2 @ name: oh  @ 2 @ 
block_content  @ 229 @ block_content  @ 307 @ 
name: oh  @ 254 @ name: oh  @ 227 @ 
name  @ 39 @ name  @ 41 @ 
name: HGOTO_ERROR  @ 130 @ name: HGOTO_ERROR  @ 148 @ 
operator: ==  @ 28 @ operator: ==  @ 29 @ 
argument_list  @ 93 @ argument_list  @ 108 @ 
expr  @ 83 @ expr  @ 96 @ 
name: H5O_NULL_ID  @ 113 @ name: H5O_NULL_ID  @ 134 @ 
name: merged_null_msgs  @ 6 @ name: merged_null_msgs  @ 8 @ 
operator: ->  @ 24 @ operator: ->  @ 25 @ 
operator: ->  @ 28 @ operator: ->  @ 29 @ 
condition  @ 155 @ condition  @ 168 @ 
operator: =  @ 162 @ operator: =  @ 178 @ 
name: mesg  @ 174 @ name: oh  @ 199 @ 
operator: &&  @ 183 @ operator: .  @ 209 @ 
directive: ifndef  @ 65 @ directive: ifndef  @ 73 @ 
expr_stmt  @ 277 @ expr_stmt  @ 142 @ 
if  @ 165 @ if  @ 181 @ 
name: haddr_t  @ 2 @ name: haddr_t  @ 2 @ 
expr  @ 36 @ expr  @ 44 @ 
if  @ 146 @ if  @ 164 @ 
expr  @ 265 @ expr  @ 237 @ 
operator: .  @ 254 @ operator: .  @ 227 @ 
call  @ 20 @ call  @ 21 @ 
argument  @ 89 @ argument  @ 104 @ 
type  @ 9 @ type  @ 11 @ 
if_stmt  @ 24 @ if_stmt  @ 25 @ 
argument  @ 203 @ argument  @ 267 @ 
name: chunk_image  @ 83 @ name: p  @ 96 @ 
operator: (  @ 58 @ operator: (  @ 63 @ 
name: type  @ 162 @ name: type  @ 178 @ 
name: nmesgs  @ 133 @ name: nmesgs  @ 69 @ 
name: H5O_refcount_t  @ 207 @ name: H5O_refcount_t  @ 278 @ 
literal: "bad flag combination for message"  @ 93 @ literal: "bad flag combination for message"  @ 108 @ 
comment: /* end else */  @ 100 @ comment: /* end else */  @ 117 @ 
operator: (  @ 90 @ operator: (  @ 105 @ 
operator: &  @ 183 @ operator: ->  @ 209 @ 
operator: ->  @ 141 @ operator: ->  @ 159 @ 
name: H5_SIZEOF_MAGIC  @ 58 @ name: H5_SIZEOF_MAGIC  @ 63 @ 
name: image  @ 19 @ name: image  @ 20 @ 
argument  @ 91 @ argument  @ 106 @ 
expr  @ 80 @ expr  @ 89 @ 
name: id  @ 80 @ name: id  @ 89 @ 
type  @ 70 @ type  @ 79 @ 
if_stmt  @ 94 @ if_stmt  @ 111 @ 
operator: )  @ 88 @ operator: )  @ 103 @ 
decl_stmt  @ 7 @ decl_stmt  @ 9 @ 
operator: ++  @ 109 @ operator: ++  @ 128 @ 
name: HDmemcmp  @ 58 @ name: HDmemcmp  @ 63 @ 
block_content  @ 80 @ block_content  @ 89 @ 
block  @ 123 @ block  @ 144 @ 
argument  @ 269 @ argument  @ 248 @ 
expr_stmt  @ 139 @ expr_stmt  @ 157 @ 
type  @ 2 @ type  @ 2 @ 
operator: ->  @ 202 @ operator: ->  @ 266 @ 
name: H5FL_BLK_MALLOC  @ 42 @ name: H5FL_BLK_MALLOC  @ 47 @ 
name: size_t  @ 54 @ name: size_t  @ 59 @ 
comment: /* Pointer to "unknown" message info */  @ 152 @ comment: /* Pointer to "unknown" message info */  @ 165 @ 
operator: =  @ 139 @ operator: =  @ 157 @ 
expr  @ 183 @ expr  @ 209 @ 
operator: )  @ 129 @ operator: )  @ 147 @ 
name: oh  @ 77 @ name: oh  @ 86 @ 
if_stmt  @ 165 @ if_stmt  @ 181 @ 
name: chunkno  @ 142 @ name: chunkno  @ 160 @ 
expr  @ 254 @ expr  @ 227 @ 
name: native  @ 139 @ name: native  @ 157 @ 
block_content  @ 183 @ block_content  @ 209 @ 
expr  @ 245 @ expr  @ 218 @ 
name: chunkno  @ 269 @ name: chunkno  @ 248 @ 
if_stmt  @ 98 @ if_stmt  @ 115 @ 
name: UINT16DECODE  @ 78 @ name: UINT16DECODE  @ 87 @ 
comment: /* Increment count of null messages */  @ 107 @ comment: /* Increment count of null messages */  @ 126 @ 
expr_stmt  @ 217 @ expr_stmt  @ 289 @ 
name: HGOTO_ERROR  @ 203 @ name: HGOTO_ERROR  @ 267 @ 
if  @ 92 @ if  @ 107 @ 
expr  @ 162 @ expr  @ 178 @ 
name  @ 49 @ name  @ 54 @ 
expr  @ 165 @ expr  @ 181 @ 
argument  @ 25 @ argument  @ 26 @ 
argument  @ 28 @ argument  @ 29 @ 
endif  @ 10 @ endif  @ 12 @ 
name  @ 202 @ name  @ 266 @ 
name: chunk_image  @ 54 @ name: p  @ 59 @ 
operator: ->  @ 196 @ operator: ->  @ 260 @ 
block  @ 24 @ block  @ 25 @ 
name: addr  @ 2 @ name: addr  @ 2 @ 
operator: ->  @ 46 @ operator: ->  @ 51 @ 
block_content  @ 25 @ block_content  @ 26 @ 
name: HGOTO_ERROR  @ 166 @ name: HGOTO_ERROR  @ 182 @ 
name: chunk  @ 36 @ name: chunk  @ 44 @ 
argument  @ 104 @ argument  @ 123 @ 
operator: .  @ 64 @ operator: .  @ 72 @ 
expr_stmt  @ 240 @ expr_stmt  @ 213 @ 
macro  @ 286 @ macro  @ 321 @ 
name: addr  @ 18 @ name: addr  @ 19 @ 
block  @ 99 @ block  @ 116 @ 
name: oh  @ 269 @ name: oh  @ 248 @ 
name: HGOTO_ERROR  @ 93 @ name: HGOTO_ERROR  @ 108 @ 
name: size_t  @ 251 @ name: size_t  @ 224 @ 
expr  @ 18 @ expr  @ 19 @ 
block  @ 87 @ block  @ 102 @ 
name: mesg_size  @ 84 @ name: mesg_size  @ 97 @ 
if_stmt  @ 52 @ if_stmt  @ 57 @ 
decl  @ 2 @ decl  @ 2 @ 
operator: =  @ 136 @ operator: =  @ 154 @ 
name: uint8_t  @ 140 @ name: uint8_t  @ 158 @ 
operator: (  @ 251 @ operator: (  @ 224 @ 
name: unsigned  @ 70 @ name: unsigned  @ 79 @ 
name: HDassert  @ 21 @ name: HDassert  @ 22 @ 
name: dirty  @ 120 @ name: dirty  @ 140 @ 
operator: ->  @ 269 @ operator: ->  @ 248 @ 
name  @ 113 @ name  @ 134 @ 
argument_list  @ 78 @ argument_list  @ 87 @ 
name: HDassert  @ 248 @ name: HDassert  @ 221 @ 
argument  @ 93 @ argument  @ 108 @ 
parameter  @ 2 @ parameter  @ 2 @ 
type  @ 2 @ type  @ 2 @ 
name: HGOTO_ERROR  @ 89 @ name: HGOTO_ERROR  @ 104 @ 
name: has_refcount_msg  @ 217 @ name: has_refcount_msg  @ 289 @ 
decl  @ 2 @ decl  @ 3 @ 
operator: +  @ 64 @ operator: +  @ 72 @ 
operator: &&  @ 90 @ operator: &&  @ 105 @ 
expr  @ 140 @ expr  @ 158 @ 
name: H5O__add_cont_msg  @ 202 @ name: H5O_add_cont_msg  @ 266 @ 
block_content  @ 166 @ block_content  @ 182 @ 
argument  @ 166 @ argument  @ 182 @ 
operator: &  @ 86 @ operator: &  @ 101 @ 
type  @ 6 @ type  @ 8 @ 
argument  @ 42 @ argument  @ 47 @ 
condition  @ 24 @ condition  @ 25 @ 
type  @ 2 @ type  @ 3 @ 
name: mesgno  @ 119 @ name: mesgno  @ 139 @ 
name: NDEBUG  @ 65 @ name: NDEBUG  @ 73 @ 
operator: ==  @ 77 @ operator: ==  @ 86 @ 
expr  @ 120 @ expr  @ 140 @ 
operator: ==  @ 248 @ operator: ==  @ 221 @ 
name  @ 195 @ name  @ 259 @ 
name: chunkno  @ 35 @ name: chunkno  @ 37 @ 
name: chunk_proxy  @ 43 @ name: size  @ 240 @ 
if_stmt  @ 88 @ if_stmt  @ 103 @ 
block_content  @ 91 @ block_content  @ 106 @ 
argument  @ 19 @ argument  @ 20 @ 
comment: /* Combine adjacent null messages */  @ 117 @ comment: /* Combine adjacent null messages */  @ 137 @ 
expr  @ 125 @ expr  @ 256 @ 
name: id  @ 113 @ name: id  @ 134 @ 
call  @ 245 @ call  @ 218 @ 
operator: =  @ 130 @ operator: =  @ 151 @ 
expr  @ 109 @ expr  @ 128 @ 
modifier: *  @ 192 @ modifier: *  @ 255 @ 
name  @ 251 @ name  @ 224 @ 
argument  @ 202 @ argument  @ 266 @ 
decl  @ 26 @ decl  @ 27 @ 
name  @ 245 @ name  @ 218 @ 
name: id  @ 156 @ name: id  @ 172 @ 
if_stmt  @ 146 @ if_stmt  @ 164 @ 
argument_list  @ 245 @ argument_list  @ 218 @ 
name: id  @ 70 @ name: id  @ 79 @ 
operator: <  @ 243 @ operator: <  @ 216 @ 
macro  @ 130 @ macro  @ 148 @ 
expr  @ 265 @ expr  @ 237 @ 
operator: ->  @ 130 @ operator: ->  @ 151 @ 
block  @ 43 @ block  @ 48 @ 
block  @ 109 @ block  @ 128 @ 
if  @ 28 @ if  @ 29 @ 
expr  @ 46 @ expr  @ 51 @ 
call  @ 54 @ call  @ 59 @ 
operator: >  @ 245 @ operator: >  @ 218 @ 
operator: =  @ 155 @ operator: =  @ 168 @ 
name: H5O_SIZEOF_HDR  @ 39 @ name: H5O_SIZEOF_HDR  @ 41 @ 
name: chunk_image  @ 68 @ name: p  @ 76 @ 
block  @ 89 @ block  @ 104 @ 
name: chunk  @ 269 @ name: chunk  @ 248 @ 
if_stmt  @ 28 @ if_stmt  @ 29 @ 
expr  @ 103 @ expr  @ 122 @ 
comment: /* Increment the count of link messages */  @ 223 @ comment: /* Increment the count of link messages */  @ 301 @ 
comment: /* Skip over [already decoded] prefix */  @ 53 @ comment: /* Skip over [already decoded] prefix */  @ 58 @ 
name: chunk_image  @ 269 @ name: p  @ 248 @ 
operator: (  @ 167 @ operator: (  @ 184 @ 
name: f  @ 195 @ name: f  @ 259 @ 
condition  @ 92 @ condition  @ 107 @ 
name: addr  @ 36 @ name: addr  @ 44 @ 
name: len  @ 2 @ name: len  @ 2 @ 
name: addr  @ 36 @ name: addr  @ 44 @ 
operator: *  @ 219 @ operator: *  @ 290 @ 
operator: =  @ 217 @ operator: =  @ 289 @ 
argument  @ 89 @ argument  @ 104 @ 
argument_list  @ 83 @ argument_list  @ 96 @ 
decl  @ 6 @ decl  @ 8 @ 
decl  @ 70 @ decl  @ 79 @ 
call  @ 18 @ call  @ 19 @ 
expr  @ 233 @ expr  @ 293 @ 
block  @ 29 @ block  @ 30 @ 
decl  @ 7 @ decl  @ 9 @ 
condition  @ 233 @ condition  @ 293 @ 
name: alloc_nchunks  @ 29 @ name: alloc_nchunks  @ 31 @ 
expr  @ 269 @ expr  @ 248 @ 
expr  @ 129 @ expr  @ 147 @ 
name: flags  @ 92 @ name: flags  @ 107 @ 
operator: )  @ 28 @ operator: )  @ 29 @ 
operator: ->  @ 118 @ operator: ->  @ 138 @ 
operator: (  @ 243 @ operator: (  @ 216 @ 
name: mesg_size  @ 240 @ name: mesg_size  @ 213 @ 
condition  @ 113 @ condition  @ 132 @ 
operator: ++  @ 121 @ operator: ++  @ 141 @ 
operator: ==  @ 150 @ operator: ==  @ 164 @ 
condition  @ 202 @ condition  @ 266 @ 
operator: +=  @ 240 @ operator: +=  @ 213 @ 
name: oh  @ 128 @ name: oh  @ 146 @ 
expr  @ 142 @ expr  @ 160 @ 
parameter  @ 2 @ parameter  @ 3 @ 
directive: ifndef  @ 106 @ directive: ifndef  @ 125 @ 
expr  @ 269 @ expr  @ 248 @ 
name: chunkno  @ 46 @ name: chunkno  @ 51 @ 
name: H5O_t  @ 2 @ name: H5O_t  @ 2 @ 
name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 92 @ name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 107 @ 
operator: -  @ 251 @ operator: -  @ 224 @ 
expr  @ 90 @ expr  @ 105 @ 
index  @ 36 @ index  @ 44 @ 
argument  @ 119 @ argument  @ 139 @ 
name: chunkno  @ 43 @ name: chunkno  @ 240 @ 
name  @ 24 @ name  @ 25 @ 
name: file_intent  @ 233 @ name: file_intent  @ 293 @ 
operator: ->  @ 254 @ operator: ->  @ 227 @ 
decl_stmt  @ 72 @ decl_stmt  @ 81 @ 
if  @ 155 @ if  @ 168 @ 
name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 90 @ name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 105 @ 
argument_list  @ 39 @ argument_list  @ 41 @ 
name: type  @ 113 @ name: type  @ 134 @ 
call  @ 54 @ call  @ 59 @ 
expr  @ 99 @ expr  @ 116 @ 
name: done  @ 281 @ name: done  @ 320 @ 
operator: ~  @ 86 @ operator: ~  @ 101 @ 
literal: "unknown flag for message"  @ 87 @ literal: "unknown flag for message"  @ 102 @ 
expr_stmt  @ 66 @ expr_stmt  @ 74 @ 
expr  @ 277 @ expr  @ 142 @ 
name: H5O_msg_class_g  @ 184 @ name: H5O_msg_class_g  @ 209 @ 
argument  @ 18 @ argument  @ 19 @ 
argument  @ 18 @ argument  @ 19 @ 
name: oh  @ 17 @ name: oh  @ 18 @ 
operator: )  @ 88 @ operator: )  @ 103 @ 
if_stmt  @ 90 @ if_stmt  @ 105 @ 
operator: )  @ 155 @ operator: )  @ 168 @ 
comment: /* ID (type) of current message */  @ 70 @ comment: /* ID (type) of current message */  @ 79 @ 
operator: .  @ 43 @ operator: .  @ 240 @ 
argument  @ 39 @ argument  @ 41 @ 
expr  @ 95 @ expr  @ 112 @ 
expr_stmt  @ 219 @ expr_stmt  @ 290 @ 
argument  @ 91 @ argument  @ 106 @ 
expr  @ 72 @ expr  @ 81 @ 
name: chunkno  @ 46 @ name: chunkno  @ 51 @ 
name: flags  @ 88 @ name: flags  @ 103 @ 
name: type  @ 184 @ name: type  @ 209 @ 
argument  @ 29 @ argument  @ 30 @ 
expr  @ 98 @ expr  @ 115 @ 
index  @ 39 @ index  @ 41 @ 
expr_stmt  @ 229 @ expr_stmt  @ 307 @ 
expr_stmt  @ 196 @ expr_stmt  @ 260 @ 
argument_list  @ 265 @ argument_list  @ 237 @ 
operator: ->  @ 29 @ operator: ->  @ 31 @ 
operator: ->  @ 94 @ operator: ->  @ 111 @ 
name: mesg_size  @ 84 @ name: mesg_size  @ 97 @ 
argument  @ 46 @ argument  @ 51 @ 
comment: /* Check for "mark if unknown" message flag, etc. */  @ 166 @ comment: /* Check for "mark if unknown" message flag, etc. */  @ 183 @ 
name: H5O_common_cache_ud_t  @ 2 @ name: H5O_common_cache_ud_t  @ 3 @ 
expr  @ 52 @ expr  @ 57 @ 
expr  @ 119 @ expr  @ 139 @ 
name: TRUE  @ 278 @ name: TRUE  @ 317 @ 
operator: ->  @ 113 @ operator: ->  @ 134 @ 
index  @ 150 @ index  @ 164 @ 
argument  @ 166 @ argument  @ 182 @ 
operator: ->  @ 140 @ operator: ->  @ 158 @ 
comment: /* Increment the count of attribute messages */  @ 228 @ comment: /* Increment the count of attribute messages */  @ 306 @ 
name: herr_t  @ 12 @ name: herr_t  @ 13 @ 
name: oh  @ 29 @ name: oh  @ 31 @ 
argument  @ 243 @ argument  @ 216 @ 
operator: <  @ 202 @ operator: <  @ 266 @ 
name: oh  @ 229 @ name: oh  @ 307 @ 
if_stmt  @ 77 @ if_stmt  @ 86 @ 
expr  @ 156 @ expr  @ 169 @ 
operator: ->  @ 49 @ operator: ->  @ 54 @ 
operator: =  @ 159 @ operator: =  @ 175 @ 
block  @ 56 @ block  @ 61 @ 
expr_stmt  @ 39 @ expr_stmt  @ 41 @ 
name: chunk  @ 64 @ name: chunk  @ 72 @ 
operator: &&  @ 233 @ operator: &&  @ 293 @ 
argument_list  @ 59 @ argument_list  @ 64 @ 
name: oh  @ 64 @ name: oh  @ 72 @ 
name: chunk  @ 39 @ name: chunk  @ 41 @ 
operator: ==  @ 52 @ operator: ==  @ 57 @ 
name  @ 20 @ name  @ 21 @ 
name: chunkno  @ 251 @ name: chunkno  @ 224 @ 
comment: /* Message flags */  @ 85 @ comment: /* Message flags */  @ 99 @ 
expr  @ 46 @ expr  @ 51 @ 
name: size  @ 269 @ name: size  @ 248 @ 
index  @ 42 @ index  @ 47 @ 
expr  @ 84 @ expr  @ 97 @ 
block_content  @ 224 @ block_content  @ 302 @ 
condition  @ 58 @ condition  @ 63 @ 
name  @ 128 @ name  @ 146 @ 
modifier: *  @ 5 @ modifier: *  @ 6 @ 
operator: )  @ 58 @ operator: )  @ 63 @ 
operator: *  @ 156 @ operator: *  @ 172 @ 
name: dirty  @ 278 @ name: dirty  @ 317 @ 
name: mesg_size  @ 69 @ name: mesg_size  @ 78 @ 
name  @ 184 @ name  @ 209 @ 
operator: (  @ 168 @ operator: (  @ 185 @ 
argument  @ 43 @ argument  @ 48 @ 
expr  @ 36 @ expr  @ 44 @ 
name: gap  @ 254 @ name: gap  @ 227 @ 
parameter  @ 2 @ parameter  @ 3 @ 
operator: ->  @ 35 @ operator: ->  @ 37 @ 
name: MAX  @ 25 @ name: MAX  @ 26 @ 
condition  @ 167 @ condition  @ 184 @ 
comment: /* Flags for current message */  @ 71 @ comment: /* Flags for current message */  @ 80 @ 
name: oh  @ 54 @ name: oh  @ 59 @ 
name  @ 35 @ name  @ 37 @ 
else  @ 96 @ else  @ 113 @ 
expr  @ 259 @ expr  @ 232 @ 
condition  @ 90 @ condition  @ 105 @ 
argument  @ 43 @ argument  @ 48 @ 
argument  @ 156 @ argument  @ 169 @ 
name: crt_idx  @ 99 @ name: crt_idx  @ 116 @ 
argument  @ 28 @ argument  @ 29 @ 
name  @ 277 @ name  @ 142 @ 
block_content  @ 78 @ block_content  @ 87 @ 
parameter  @ 2 @ parameter  @ 2 @ 
name: flags  @ 165 @ name: flags  @ 181 @ 
expr  @ 42 @ expr  @ 47 @ 
operator: ->  @ 259 @ operator: ->  @ 232 @ 
name: oh  @ 94 @ name: oh  @ 111 @ 
operator: >  @ 103 @ operator: >  @ 122 @ 
name: udata  @ 277 @ name: udata  @ 142 @ 
name: H5E_CANTALLOC  @ 156 @ name: H5E_CANTALLOC  @ 169 @ 
block_content  @ 69 @ block_content  @ 77 @ 
argument  @ 46 @ argument  @ 51 @ 
operator: ->  @ 139 @ operator: ->  @ 157 @ 
operator: .  @ 46 @ operator: .  @ 51 @ 
expr_stmt  @ 35 @ expr_stmt  @ 37 @ 
name: nmesgs  @ 130 @ name: nmesgs  @ 151 @ 
name: TRUE  @ 217 @ name: TRUE  @ 289 @ 
condition  @ 165 @ condition  @ 181 @ 
name: mesg  @ 136 @ name: mesgno  @ 154 @ 
name: unsigned  @ 7 @ name: unsigned  @ 9 @ 
operator: ->  @ 251 @ operator: ->  @ 224 @ 
expr  @ 121 @ expr  @ 141 @ 
name: mesg_size  @ 119 @ name: mesg_size  @ 139 @ 
argument_list  @ 248 @ argument_list  @ 221 @ 
literal: "can't add continuation message"  @ 203 @ literal: "can't add continuation message"  @ 267 @ 
name: oh  @ 35 @ name: oh  @ 37 @ 
operator: =  @ 80 @ operator: =  @ 89 @ 
condition  @ 243 @ condition  @ 216 @ 
macro  @ 43 @ macro  @ 48 @ 
index  @ 183 @ index  @ 209 @ 
expr_stmt  @ 141 @ expr_stmt  @ 159 @ 
call  @ 265 @ call  @ 237 @ 
index  @ 64 @ index  @ 72 @ 
name: oh  @ 119 @ name: oh  @ 139 @ 
expr_stmt  @ 36 @ expr_stmt  @ 44 @ 
name: oh  @ 42 @ name: oh  @ 47 @ 
name  @ 42 @ name  @ 47 @ 
operator: ->  @ 39 @ operator: ->  @ 41 @ 
argument  @ 166 @ argument  @ 182 @ 
name: H5O_MSG_FLAG_BITS  @ 86 @ name: H5O_MSG_FLAG_BITS  @ 101 @ 
name  @ 29 @ name  @ 31 @ 
condition  @ 108 @ condition  @ 127 @ 
argument_list  @ 18 @ argument_list  @ 19 @ 
expr  @ 219 @ expr  @ 290 @ 
operator: )  @ 233 @ operator: )  @ 293 @ 
operator: =  @ 28 @ operator: =  @ 29 @ 
operator: ->  @ 211 @ operator: ->  @ 283 @ 
name: cont  @ 192 @ name: cont  @ 255 @ 
macro  @ 29 @ macro  @ 30 @ 
name: chunk_image  @ 80 @ name: p  @ 89 @ 
name: H5O_HDR_ATTR_CRT_ORDER_TRACKED  @ 98 @ name: H5O_HDR_ATTR_CRT_ORDER_TRACKED  @ 115 @ 
index  @ 43 @ index  @ 240 @ 
expr_stmt  @ 248 @ expr_stmt  @ 221 @ 
name: H5O_NULL_ID  @ 108 @ name: H5O_NULL_ID  @ 127 @ 
endif  @ 67 @ endif  @ 75 @ 
block  @ 39 @ block  @ 38 @ 
name: chunkno  @ 142 @ name: mesgno  @ 160 @ 
name: flags  @ 71 @ name: flags  @ 80 @ 
operator: )  @ 90 @ operator: )  @ 105 @ 
name: dirty  @ 177 @ name: dirty  @ 202 @ 
if_stmt  @ 129 @ if_stmt  @ 147 @ 
name: H5O_MSG_FLAG_MARK_IF_UNKNOWN  @ 92 @ name: H5O_MSG_FLAG_MARK_IF_UNKNOWN  @ 107 @ 
operator: (  @ 129 @ operator: (  @ 147 @ 
name: attr_msgs_seen  @ 229 @ name: attr_msgs_seen  @ 307 @ 
argument_list  @ 156 @ argument_list  @ 169 @ 
operator: =  @ 278 @ operator: =  @ 317 @ 
name  @ 113 @ name  @ 135 @ 
operator: )  @ 90 @ operator: )  @ 105 @ 
expr  @ 19 @ expr  @ 20 @ 
operator: )  @ 92 @ operator: )  @ 107 @ 
name: nmesgs  @ 113 @ name: nmesgs  @ 133 @ 
modifier: *  @ 2 @ modifier: *  @ 2 @ 
expr_stmt  @ 130 @ expr_stmt  @ 151 @ 
name: crt_idx  @ 72 @ name: crt_idx  @ 81 @ 
operator: &&  @ 243 @ operator: &&  @ 216 @ 
operator: ->  @ 219 @ operator: ->  @ 290 @ 
expr_stmt  @ 138 @ expr_stmt  @ 156 @ 
operator: &  @ 233 @ operator: &  @ 293 @ 
name: size  @ 46 @ name: size  @ 51 @ 
name: H5O__alloc_msgs  @ 129 @ name: H5O_alloc_msgs  @ 147 @ 
expr  @ 42 @ expr  @ 47 @ 
argument_list  @ 54 @ argument_list  @ 59 @ 
name: file_intent  @ 113 @ name: file_intent  @ 132 @ 
expr  @ 156 @ expr  @ 169 @ 
name: raw_size  @ 141 @ name: raw_size  @ 159 @ 
name: mesg  @ 113 @ name: mesg  @ 135 @ 
condition  @ 42 @ condition  @ 47 @ 
operator: -  @ 118 @ operator: -  @ 138 @ 
expr  @ 269 @ expr  @ 248 @ 
operator: (  @ 113 @ operator: (  @ 132 @ 
operator: *  @ 273 @ operator: *  @ 296 @ 
operator: +  @ 119 @ operator: +  @ 139 @ 
name: HDmemcpy  @ 46 @ name: HDmemcpy  @ 51 @ 
name: oh  @ 259 @ name: oh  @ 232 @ 
type  @ 14 @ type  @ 15 @ 
ifndef  @ 65 @ ifndef  @ 73 @ 
operator: ->  @ 113 @ operator: ->  @ 132 @ 
name: NULL  @ 42 @ name: NULL  @ 47 @ 
argument  @ 29 @ argument  @ 30 @ 
argument  @ 89 @ argument  @ 104 @ 
comment: /* Get pointer to message to set up */  @ 130 @ comment: /* Get index for message */  @ 150 @ 
type  @ 5 @ type  @ 6 @ 
name: flags  @ 137 @ name: flags  @ 155 @ 
decl_stmt  @ 6 @ decl_stmt  @ 8 @ 
else  @ 123 @ else  @ 144 @ 
name: H5O_VERSION_1  @ 77 @ name: H5O_VERSION_1  @ 86 @ 
name: cont  @ 202 @ name: cont  @ 266 @ 
name: chunkno  @ 7 @ name: chunkno  @ 9 @ 
name: mesg  @ 140 @ name: oh  @ 158 @ 
operator: ->  @ 119 @ operator: ->  @ 139 @ 
name  @ 36 @ name  @ 44 @ 
name: H5O_ENABLE_BOGUS  @ 147 @ name: NELMTS  @ 164 @ 
argument_list  @ 64 @ argument_list  @ 72 @ 
literal: 0  @ 52 @ literal: 0  @ 57 @ 
operator: +=  @ 277 @ operator: ++  @ 142 @ 
operator: .  @ 39 @ operator: .  @ 41 @ 
decl  @ 5 @ decl  @ 6 @ 
name: oh  @ 269 @ name: oh  @ 248 @ 
name: chunkno  @ 56 @ name: chunkno  @ 61 @ 
operator: ->  @ 136 @ operator: .  @ 154 @ 
name  @ 21 @ name  @ 22 @ 
operator: ->  @ 113 @ operator: ->  @ 135 @ 
operator: &  @ 90 @ operator: &  @ 105 @ 
decl  @ 152 @ decl  @ 165 @ 
macro  @ 89 @ macro  @ 104 @ 
argument  @ 203 @ argument  @ 267 @ 
argument  @ 29 @ argument  @ 30 @ 
unit  @ 1 @ unit  @ 1 @ 
decl  @ 25 @ decl  @ 26 @ 
name: chunkno  @ 52 @ name: chunkno  @ 57 @ 
name: oh  @ 119 @ name: oh  @ 139 @ 
operator: )  @ 54 @ operator: )  @ 59 @ 
expr  @ 42 @ expr  @ 47 @ 
index  @ 41 @ index  @ 45 @ 
name: chunk  @ 42 @ name: chunk  @ 47 @ 
expr  @ 28 @ expr  @ 29 @ 
argument  @ 155 @ argument  @ 168 @ 
argument  @ 87 @ argument  @ 102 @ 
operator: ->  @ 162 @ operator: ->  @ 178 @ 
expr  @ 46 @ expr  @ 51 @ 
argument_list  @ 104 @ argument_list  @ 123 @ 
block_content  @ 41 @ block_content  @ 44 @ 
comment: /* Also, it's possible that this functionality may not * get invoked if the object header is brought into * the metadata cache in some other "weird" way, like * using H5Ocopy() - QAK */  @ 173 @ comment: /* Also, it's possible that this functionality may not
                     * get invoked if the object header is brought into* the metadata cache in some other "weird" way, like
                     * using H5Ocopy() - QAK*/  @ 194 @ 
expr  @ 25 @ expr  @ 26 @ 
argument_list  @ 17 @ argument_list  @ 18 @ 
name: mesg  @ 138 @ name: oh  @ 156 @ 
operator: .  @ 119 @ operator: .  @ 139 @ 
name  @ 142 @ name  @ 160 @ 
name: oh  @ 30 @ name: oh  @ 32 @ 
name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 168 @ name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 185 @ 
name: mesg  @ 177 @ name: oh  @ 202 @ 
decl  @ 2 @ decl  @ 3 @ 
operator: ->  @ 77 @ operator: ->  @ 86 @ 
block  @ 166 @ block  @ 182 @ 
expr  @ 248 @ expr  @ 221 @ 
if  @ 56 @ if  @ 61 @ 
expr  @ 133 @ expr  @ 69 @ 
argument_list  @ 243 @ argument_list  @ 216 @ 
comment: /* Check for message of unshareable class marked as "shareable" */  @ 182 @ comment: /* Set message class for "known" messages */  @ 208 @ 
operator: &&  @ 113 @ operator: &&  @ 133 @ 
operator: ->  @ 269 @ operator: ->  @ 248 @ 
literal: "memory allocation failed"  @ 43 @ literal: "memory allocation failed"  @ 48 @ 
operator: !  @ 168 @ operator: !  @ 185 @ 
expr  @ 224 @ expr  @ 302 @ 
modifier: *  @ 2 @ modifier: *  @ 3 @ 
comment: /* NDEBUG */  @ 110 @ comment: /* NDEBUG */  @ 129 @ 
if  @ 90 @ if  @ 105 @ 
argument  @ 46 @ argument  @ 51 @ 
if_stmt  @ 79 @ if_stmt  @ 88 @ 
operator: ->  @ 195 @ operator: ->  @ 259 @ 
name: FUNC_LEAVE_NOAPI  @ 286 @ name: FUNC_LEAVE_NOAPI  @ 321 @ 
name: nmesgs  @ 128 @ name: nmesgs  @ 146 @ 
name: nullcnt  @ 66 @ name: nullcnt  @ 74 @ 
name: oh  @ 54 @ name: oh  @ 59 @ 
name: chunk_image  @ 251 @ name: p  @ 224 @ 
block  @ 156 @ block  @ 169 @ 
expr  @ 58 @ expr  @ 63 @ 
name: mesg_size  @ 103 @ name: mesg_size  @ 122 @ 
argument_list  @ 46 @ argument_list  @ 51 @ 
operator: -  @ 113 @ operator: -  @ 135 @ 
operator: &  @ 88 @ operator: &  @ 103 @ 
name: chunk_image  @ 140 @ name: p  @ 158 @ 
name: H5O_SIZEOF_CHKSUM_OH  @ 64 @ name: H5O_SIZEOF_CHKSUM_OH  @ 72 @ 
macro  @ 203 @ macro  @ 267 @ 
name: cont_msg_info  @ 196 @ name: cont_msg_info  @ 260 @ 
if_stmt  @ 167 @ if_stmt  @ 184 @ 
argument  @ 265 @ argument  @ 237 @ 
argument_list  @ 28 @ argument_list  @ 29 @ 
name: mesg_size  @ 141 @ name: mesg_size  @ 159 @ 
name: oh  @ 36 @ name: oh  @ 44 @ 
name: nmsgs  @ 196 @ name: nmsgs  @ 260 @ 
condition  @ 94 @ condition  @ 111 @ 
block_content  @ 156 @ block_content  @ 169 @ 
type  @ 7 @ type  @ 9 @ 
expr  @ 39 @ expr  @ 41 @ 
argument  @ 93 @ argument  @ 108 @ 
argument  @ 91 @ argument  @ 106 @ 
argument_list  @ 119 @ argument_list  @ 139 @ 
expr  @ 138 @ expr  @ 156 @ 
operator: (  @ 251 @ operator: (  @ 224 @ 
type  @ 1 @ type  @ 1 @ 
ifndef  @ 8 @ ifndef  @ 10 @ 
literal: 0  @ 37 @ literal: 0  @ 38 @ 
function  @ 1 @ function  @ 1 @ 
call  @ 99 @ call  @ 116 @ 
operator: =  @ 64 @ operator: =  @ 72 @ 
name: nchunks  @ 34 @ name: nchunks  @ 36 @ 
name: ioflags  @ 125 @ name: ioflags  @ 256 @ 
operator: .  @ 49 @ operator: .  @ 54 @ 
name  @ 46 @ name  @ 51 @ 
decl_stmt  @ 260 @ decl_stmt  @ 233 @ 
expr  @ 254 @ expr  @ 227 @ 
decl  @ 260 @ decl  @ 233 @ 
expr  @ 155 @ expr  @ 168 @ 
name: HDassert  @ 18 @ name: HDassert  @ 19 @ 
operator: ->  @ 137 @ operator: ->  @ 155 @ 
init  @ 125 @ init  @ 256 @ 
name: chunkno  @ 196 @ name: chunkno  @ 260 @ 
expr  @ 83 @ expr  @ 96 @ 
operator: =  @ 137 @ operator: =  @ 155 @ 
name: H5O_SIZEOF_HDR  @ 54 @ name: H5O_SIZEOF_HDR  @ 59 @ 
name: udata  @ 196 @ name: udata  @ 260 @ 
expr  @ 178 @ expr  @ 203 @ 
operator: &  @ 90 @ operator: &  @ 105 @ 
name: H5O_CHK_MAGIC  @ 58 @ name: H5O_CHK_MAGIC  @ 63 @ 
name: oh  @ 129 @ name: oh  @ 147 @ 
expr_stmt  @ 254 @ expr_stmt  @ 227 @ 
name: cont  @ 196 @ name: cont  @ 260 @ 
if  @ 129 @ if  @ 147 @ 
name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 174 @ name: H5O_MSG_FLAG_WAS_UNKNOWN  @ 199 @ 
argument  @ 104 @ argument  @ 123 @ 
name  @ 46 @ name  @ 51 @ 
type  @ 69 @ type  @ 78 @ 
operator: ==  @ 94 @ operator: ==  @ 111 @ 
operator: (  @ 88 @ operator: (  @ 103 @ 
name: HGOTO_ERROR  @ 43 @ name: HGOTO_ERROR  @ 48 @ 
name: flags  @ 168 @ name: flags  @ 185 @ 
name: unknown  @ 155 @ name: unknown  @ 168 @ 
condition  @ 259 @ condition  @ 232 @ 
name: TRUE  @ 120 @ name: TRUE  @ 140 @ 
call  @ 46 @ call  @ 51 @ 
argument_list  @ 129 @ argument_list  @ 147 @ 
operator: ->  @ 42 @ operator: ->  @ 47 @ 
operator: >  @ 243 @ operator: >  @ 216 @ 
name: nmesgs  @ 113 @ name: nmesgs  @ 134 @ 
name: udata  @ 202 @ name: udata  @ 266 @ 
decl_stmt  @ 207 @ decl_stmt  @ 278 @ 
if  @ 128 @ if  @ 146 @ 
expr  @ 92 @ expr  @ 107 @ 
name: oh  @ 84 @ name: oh  @ 97 @ 
operator: ->  @ 195 @ operator: ->  @ 259 @ 
name: nullcnt  @ 109 @ name: nullcnt  @ 128 @ 
name: chunk  @ 269 @ name: chunk  @ 248 @ 
name: chunk  @ 251 @ name: chunk  @ 224 @ 
comment: /* end else */  @ 237 @ comment: /* end else */  @ 210 @ 
name: size  @ 64 @ name: size  @ 72 @ 
expr  @ 58 @ expr  @ 63 @ 
name: oh  @ 25 @ name: oh  @ 26 @ 
type  @ 2 @ type  @ 3 @ 
name  @ 98 @ name  @ 115 @ 
argument  @ 156 @ argument  @ 169 @ 
name: chunkno  @ 36 @ name: chunkno  @ 44 @ 
expr_stmt  @ 54 @ expr_stmt  @ 59 @ 
argument  @ 87 @ argument  @ 102 @ 
index  @ 162 @ index  @ 178 @ 
operator: (  @ 92 @ operator: (  @ 107 @ 
parameter  @ 2 @ parameter  @ 2 @ 
operator: .  @ 113 @ operator: .  @ 135 @ 
expr  @ 84 @ expr  @ 97 @ 
name: uint8_t  @ 5 @ name: uint8_t  @ 6 @ 
block_content  @ 130 @ block_content  @ 148 @ 
name: oh  @ 64 @ name: oh  @ 72 @ 
literal: 1  @ 113 @ literal: 1  @ 134 @ 
argument  @ 99 @ argument  @ 116 @ 
block_content  @ 104 @ block_content  @ 123 @ 
expr  @ 108 @ expr  @ 127 @ 
operator: ->  @ 196 @ operator: ->  @ 260 @ 
name: H5E_OHDR  @ 156 @ name: H5E_OHDR  @ 169 @ 
type  @ 2 @ type  @ 2 @ 
name: oh  @ 120 @ name: oh  @ 140 @ 
literal: 0  @ 72 @ literal: 0  @ 81 @ 
comment: /* Double # of chunks allocated */  @ 25 @ comment: /* Double # of chunks allocated */  @ 26 @ 
operator: =  @ 30 @ operator: =  @ 32 @ 
expr  @ 113 @ expr  @ 132 @ 
argument  @ 245 @ argument  @ 218 @ 
else  @ 181 @ else  @ 207 @ 
expr  @ 60 @ expr  @ 65 @ 
name: FAIL  @ 156 @ name: FAIL  @ 169 @ 
call  @ 58 @ call  @ 63 @ 
expr  @ 156 @ expr  @ 169 @ 
expr  @ 177 @ expr  @ 202 @ 
type  @ 72 @ type  @ 81 @ 
name  @ 42 @ name  @ 47 @ 
operator: =  @ 29 @ operator: =  @ 31 @ 
name  @ 169 @ name  @ 186 @ 
comment: /* end if */  @ 179 @ comment: /* end if */  @ 205 @ 
name: flags  @ 137 @ name: flags  @ 155 @ 
directive: endif  @ 67 @ directive: endif  @ 75 @ 
condition  @ 28 @ condition  @ 29 @ 
name: flags  @ 167 @ name: flags  @ 184 @ 
comment: /* Creation index for current message */  @ 72 @ comment: /* Creation index for current message */  @ 81 @ 
name: oh  @ 42 @ name: oh  @ 47 @ 
expr  @ 41 @ expr  @ 45 @ 
name: chunk_image  @ 49 @ name: p  @ 54 @ 
expr  @ 184 @ expr  @ 209 @ 
call  @ 25 @ call  @ 26 @ 
name  @ 41 @ name  @ 45 @ 
argument  @ 87 @ argument  @ 102 @ 
expr  @ 58 @ expr  @ 63 @ 
argument_list  @ 29 @ argument_list  @ 30 @ 
name: dirty  @ 136 @ name: dirty  @ 154 @ 
expr  @ 251 @ expr  @ 224 @ 
operator: ->  @ 245 @ operator: ->  @ 218 @ 
if  @ 58 @ if  @ 63 @ 
name: NDEBUG  @ 8 @ name: NDEBUG  @ 10 @ 
argument_list  @ 203 @ argument_list  @ 267 @ 
literal: "can't allocate more space for messages"  @ 130 @ literal: "can't allocate more space for messages"  @ 148 @ 
comment: /* Mark the message and chunk as dirty */  @ 176 @ comment: /* Mark the message and chunk as dirty */  @ 201 @ 
comment: /* Check for 'gap' at end of chunk */  @ 242 @ comment: /* Check for 'gap' at end of chunk */  @ 215 @ 
if  @ 167 @ if  @ 184 @ 
expr  @ 6 @ expr  @ 8 @ 
if  @ 77 @ if  @ 86 @ 
literal: 1  @ 118 @ literal: 1  @ 138 @ 
expr_stmt  @ 162 @ expr_stmt  @ 178 @ 
expr_stmt  @ 95 @ expr_stmt  @ 112 @ 
block  @ 150 @ block  @ 164 @ 
modifier: *  @ 152 @ modifier: *  @ 165 @ 
name: chunk_image  @ 265 @ name: p  @ 237 @ 
block  @ 78 @ block  @ 87 @ 
name: image  @ 42 @ name: image  @ 47 @ 
operator: .  @ 46 @ operator: .  @ 51 @ 
argument  @ 64 @ argument  @ 72 @ 
expr  @ 129 @ expr  @ 147 @ 
operator: &  @ 167 @ operator: &  @ 184 @ 
expr_stmt  @ 251 @ expr_stmt  @ 224 @ 
operator: )  @ 243 @ operator: )  @ 216 @ 
expr  @ 150 @ expr  @ 164 @ 
operator: =  @ 39 @ operator: =  @ 41 @ 
decl_stmt  @ 70 @ decl_stmt  @ 79 @ 
expr  @ 278 @ expr  @ 317 @ 
operator: -  @ 54 @ operator: -  @ 59 @ 
name: len  @ 39 @ name: len  @ 41 @ 
comment: /* Point unknown messages at 'unknown' message class */  @ 144 @ comment: /* Point unknown messages at 'unknown' message class */  @ 162 @ 
comment: /* Casting away const OK - QAK */  @ 140 @ comment: /* Casting away const OK - QAK */  @ 158 @ 
operator: +  @ 196 @ operator: +  @ 260 @ 
expr_stmt  @ 20 @ expr_stmt  @ 21 @ 
argument_list  @ 269 @ argument_list  @ 248 @ 
name: chunkno  @ 113 @ name: chunkno  @ 135 @ 
operator: =  @ 219 @ operator: =  @ 290 @ 
name: HGOTO_ERROR  @ 59 @ name: HGOTO_ERROR  @ 64 @ 
expr_stmt  @ 177 @ expr_stmt  @ 202 @ 
comment: /* Version # */  @ 76 @ comment: /* Version # */  @ 85 @ 
operator: ->  @ 120 @ operator: ->  @ 140 @ 
argument  @ 286 @ argument  @ 321 @ 
operator: >  @ 113 @ operator: >  @ 133 @ 
block  @ 104 @ block  @ 123 @ 
operator: -  @ 243 @ operator: -  @ 216 @ 
comment: /* Increment location in chunk */  @ 253 @ comment: /* Increment location in chunk */  @ 226 @ 
block  @ 113 @ block  @ 135 @ 
expr_stmt  @ 30 @ expr_stmt  @ 32 @ 
operator: .  @ 269 @ operator: .  @ 248 @ 
call  @ 269 @ call  @ 248 @ 
operator: ->  @ 43 @ operator: ->  @ 240 @ 
name: chunk  @ 42 @ name: chunk  @ 47 @ 
init  @ 25 @ init  @ 26 @ 
operator: *  @ 25 @ operator: *  @ 26 @ 
name: size  @ 39 @ name: size  @ 41 @ 
name: stored_chksum  @ 265 @ name: stored_chksum  @ 237 @ 
name: ioflags  @ 233 @ name: ioflags  @ 293 @ 
expr_stmt  @ 142 @ expr_stmt  @ 160 @ 
expr  @ 229 @ expr  @ 307 @ 
operator: )  @ 54 @ operator: )  @ 59 @ 
name  @ 119 @ name  @ 139 @ 
argument  @ 130 @ argument  @ 148 @ 
name: oh  @ 217 @ name: oh  @ 289 @ 
block_content  @ 93 @ block_content  @ 108 @ 
name: chunk_image  @ 99 @ name: p  @ 116 @ 
decl  @ 207 @ decl  @ 278 @ 
operator: &  @ 233 @ operator: &  @ 293 @ 
expr  @ 28 @ expr  @ 29 @ 
name: chunkno  @ 41 @ name: chunkno  @ 45 @ 
name: chunk  @ 30 @ name: chunk  @ 32 @ 
condition  @ 103 @ condition  @ 122 @ 
name: chunk  @ 46 @ name: chunk  @ 51 @ 
name: udata  @ 2 @ name: udata  @ 3 @ 
expr_stmt  @ 18 @ expr_stmt  @ 19 @ 
operator: ->  @ 177 @ operator: ->  @ 202 @ 
argument_list  @ 20 @ argument_list  @ 21 @ 
name: chunk  @ 49 @ name: chunk  @ 54 @ 
name: HGOTO_ERROR  @ 91 @ name: HGOTO_ERROR  @ 106 @ 
operator: =  @ 138 @ operator: =  @ 156 @ 
name: H5O_MSG_FLAG_MARK_IF_UNKNOWN  @ 167 @ name: H5O_MSG_FLAG_MARK_IF_UNKNOWN  @ 184 @ 
name: oh  @ 219 @ name: oh  @ 290 @ 
name: H5O_BOGUS_VALID_ID  @ 148 @ name: H5O_msg_class_g  @ 164 @ 
name: eom_ptr  @ 243 @ name: eom_ptr  @ 216 @ 
name  @ 233 @ name  @ 293 @ 
block_content  @ 245 @ block_content  @ 218 @ 
expr  @ 243 @ expr  @ 216 @ 
operator: (  @ 54 @ operator: (  @ 59 @ 
block  @ 68 @ block  @ 76 @ 
expr_stmt  @ 19 @ expr_stmt  @ 20 @ 
name: SUCCEED  @ 12 @ name: SUCCEED  @ 13 @ 
operator: &  @ 113 @ operator: &  @ 132 @ 
decl  @ 125 @ decl  @ 256 @ 
name: H5O_unknown_t  @ 152 @ name: H5O_unknown_t  @ 165 @ 
name: oh  @ 39 @ name: oh  @ 41 @ 
name: version  @ 94 @ name: version  @ 111 @ 
name: H5O_DECODEIO_DIRTY  @ 233 @ name: H5O_DECODEIO_DIRTY  @ 293 @ 
operator: )  @ 233 @ operator: )  @ 293 @ 
name: nullcnt  @ 9 @ name: nullcnt  @ 11 @ 
argument_list  @ 130 @ argument_list  @ 148 @ 
index  @ 35 @ index  @ 37 @ 
name: H5_SIZEOF_MAGIC  @ 60 @ name: H5_SIZEOF_MAGIC  @ 65 @ 
argument_list  @ 89 @ argument_list  @ 104 @ 
expr  @ 251 @ expr  @ 224 @ 
expr  @ 99 @ expr  @ 116 @ 
literal: "bad flag combination for message"  @ 91 @ literal: "bad flag combination for message"  @ 106 @ 
operator: ->  @ 56 @ operator: ->  @ 61 @ 
name: chunk_image  @ 4 @ name: p  @ 5 @ 
modifier: *  @ 2 @ modifier: *  @ 2 @ 
operator: ==  @ 108 @ operator: ==  @ 127 @ 
expr  @ 58 @ expr  @ 63 @ 
operator: (  @ 92 @ operator: (  @ 107 @ 
operator: !  @ 92 @ operator: !  @ 107 @ 
condition  @ 146 @ condition  @ 164 @ 
if_stmt  @ 243 @ if_stmt  @ 216 @ 
operator: ==  @ 42 @ operator: ==  @ 47 @ 
name: eom_ptr  @ 68 @ name: eom_ptr  @ 76 @ 
name: cont_msg_info  @ 21 @ name: cont_msg_info  @ 22 @ 
call  @ 18 @ call  @ 19 @ 
argument_list  @ 21 @ argument_list  @ 22 @ 
name: raw_size  @ 119 @ name: raw_size  @ 139 @ 
name: oh  @ 43 @ name: oh  @ 240 @ 
operator: (  @ 88 @ operator: (  @ 103 @ 
condition  @ 37 @ condition  @ 38 @ 
name  @ 113 @ name  @ 135 @ 
expr  @ 20 @ expr  @ 21 @ 
block_content  @ 174 @ block_content  @ 199 @ 
operator: (  @ 39 @ operator: (  @ 41 @ 
name  @ 211 @ name  @ 283 @ 
name: oh  @ 46 @ name: oh  @ 51 @ 
expr  @ 202 @ expr  @ 266 @ 
name: H5O_unknown_t  @ 155 @ name: H5O_unknown_t  @ 168 @ 
comment: /* Magic number */  @ 57 @ comment: /* Magic number */  @ 62 @ 
name: mesgno  @ 120 @ name: mesgno  @ 140 @ 
name: nmesgs  @ 113 @ name: nmesgs  @ 135 @ 
expr  @ 42 @ expr  @ 47 @ 
operator: &  @ 168 @ operator: &  @ 185 @ 
name  @ 43 @ name  @ 240 @ 
operator: ==  @ 113 @ operator: ==  @ 133 @ 
operator: ->  @ 233 @ operator: ->  @ 293 @ 
name: unknown  @ 152 @ name: unknown  @ 165 @ 
name: udata  @ 211 @ name: udata  @ 283 @ 
operator: ->  @ 229 @ operator: ->  @ 307 @ 
expr  @ 88 @ expr  @ 103 @ 
name: oh  @ 113 @ name: oh  @ 134 @ 
operator: )  @ 168 @ operator: )  @ 185 @ 
name: UINT32DECODE  @ 265 @ name: UINT32DECODE  @ 237 @ 
name  @ 25 @ name  @ 26 @ 
index  @ 269 @ index  @ 248 @ 
name  @ 196 @ name  @ 260 @ 
index  @ 46 @ index  @ 51 @ 
name: uint32_t  @ 260 @ name: uint32_t  @ 233 @ 
block  @ 3 @ block  @ 4 @ 
name: oh  @ 128 @ name: oh  @ 146 @ 
operator: +=  @ 95 @ operator: +=  @ 112 @ 
decl_stmt  @ 9 @ decl_stmt  @ 11 @ 
operator: .  @ 251 @ operator: .  @ 224 @ 
name  @ 195 @ name  @ 259 @ 
name: chunkno  @ 254 @ name: chunkno  @ 227 @ 
name: NULL  @ 155 @ name: NULL  @ 168 @ 
if  @ 103 @ if  @ 122 @ 
expr_stmt  @ 174 @ expr_stmt  @ 199 @ 
expr  @ 128 @ expr  @ 146 @ 
name: udata  @ 233 @ name: udata  @ 293 @ 
decl  @ 2 @ decl  @ 2 @ 
name: H5O_SIZEOF_CHKSUM_OH  @ 54 @ name: H5O_SIZEOF_CHKSUM_OH  @ 59 @ 
name: flags  @ 183 @ name: oh  @ 209 @ 
name: NULL  @ 28 @ name: NULL  @ 29 @ 
name: H5O_ALIGN_OH  @ 84 @ name: H5O_ALIGN_OH  @ 97 @ 
block  @ 96 @ block  @ 113 @ 
comment: /* Increment # of messages */  @ 132 @ comment: /* Initialize information about message */  @ 153 @ 
operator: +  @ 269 @ operator: +  @ 248 @ 
operator: ->  @ 25 @ operator: ->  @ 26 @ 
block  @ 181 @ block  @ 209 @ 
name: chunk  @ 43 @ name: chunk  @ 240 @ 
if  @ 24 @ if  @ 25 @ 
name: TRUE  @ 178 @ name: TRUE  @ 203 @ 
name: H5O_SIZEOF_MSGHDR_OH  @ 243 @ name: H5O_SIZEOF_MSGHDR_OH  @ 216 @ 
name: gap  @ 35 @ name: gap  @ 37 @ 
block_content  @ 124 @ block_content  @ 146 @ 
expr_stmt  @ 29 @ expr_stmt  @ 31 @ 
name: H5FL_MALLOC  @ 155 @ name: H5FL_MALLOC  @ 168 @ 
comment: /* end if */  @ 180 @ comment: /* end if */  @ 206 @ 
argument_list  @ 42 @ argument_list  @ 47 @ 
name: HDassert  @ 245 @ name: HDassert  @ 218 @ 
expr  @ 46 @ expr  @ 51 @ 
name: image  @ 49 @ name: image  @ 54 @ 
operator: ->  @ 98 @ operator: ->  @ 115 @ 
argument  @ 54 @ argument  @ 59 @ 
argument  @ 93 @ argument  @ 108 @ 
name: H5O_msg_class_g  @ 162 @ name: H5O_msg_class_g  @ 178 @ 
argument  @ 58 @ argument  @ 63 @ 
if_stmt  @ 42 @ if_stmt  @ 47 @ 
argument  @ 248 @ argument  @ 221 @ 
name: oh  @ 34 @ name: oh  @ 36 @ 
operator: ->  @ 277 @ operator: ->  @ 142 @ 
name: TRUE  @ 177 @ name: TRUE  @ 202 @ 
name  @ 118 @ name  @ 138 @ 
comment: /* Only decode creation index if they are being tracked */  @ 97 @ comment: /* Only decode creation index if they are being tracked */  @ 114 @ 
name: alloc_nmesgs  @ 128 @ name: alloc_nmesgs  @ 146 @ 
name  @ 34 @ name  @ 36 @ 
decl  @ 69 @ decl  @ 78 @ 
expr_stmt  @ 118 @ expr_stmt  @ 138 @ 
name  @ 224 @ name  @ 302 @ 
argument  @ 87 @ argument  @ 102 @ 
comment: /* Save the original message type ID */  @ 156 @ comment: /* Save the original message type ID */  @ 171 @ 
name: H5O_chunk_t  @ 26 @ name: H5O_chunk_t  @ 27 @ 
operator: >  @ 56 @ operator: >  @ 61 @ 
operator: +  @ 103 @ operator: +  @ 122 @ 
argument  @ 130 @ argument  @ 148 @ 
while  @ 68 @ while  @ 76 @ 
decl  @ 71 @ decl  @ 80 @ 
name  @ 150 @ name  @ 164 @ 
decl_stmt  @ 5 @ decl_stmt  @ 6 @ 
block_content  @ 109 @ block_content  @ 128 @ 
argument  @ 93 @ argument  @ 108 @ 
name: cont_msg_info  @ 202 @ name: cont_msg_info  @ 266 @ 
expr  @ 18 @ expr  @ 19 @ 
operator: =  @ 36 @ operator: =  @ 44 @ 
name: mesg  @ 120 @ name: mesg  @ 140 @ 
expr  @ 64 @ expr  @ 72 @ 
expr  @ 64 @ expr  @ 72 @ 
expr  @ 41 @ expr  @ 45 @ 
expr  @ 42 @ expr  @ 47 @ 
literal: 2  @ 25 @ literal: 2  @ 26 @ 
modifier: *  @ 4 @ modifier: *  @ 5 @ 
name: flags  @ 98 @ name: flags  @ 115 @ 
index  @ 46 @ index  @ 51 @ 
if  @ 86 @ if  @ 101 @ 
expr  @ 139 @ expr  @ 157 @ 
name: FALSE  @ 136 @ name: FALSE  @ 154 @ 
comment: /* end if */  @ 255 @ comment: /* end if */  @ 228 @ 
block  @ 80 @ block  @ 89 @ 
argument_list  @ 99 @ argument_list  @ 116 @ 
expr  @ 118 @ expr  @ 138 @ 
expr  @ 30 @ expr  @ 32 @ 
operator: +  @ 39 @ operator: +  @ 41 @ 
name  @ 120 @ name  @ 140 @ 
operator: <  @ 68 @ operator: <  @ 76 @ 
name: size_t  @ 69 @ name: size_t  @ 78 @ 
operator: (  @ 64 @ operator: (  @ 72 @ 
operator: )  @ 39 @ operator: )  @ 41 @ 
name: uint8_t  @ 4 @ name: uint8_t  @ 5 @ 
argument  @ 29 @ argument  @ 30 @ 
expr  @ 84 @ expr  @ 97 @ 
decl  @ 9 @ decl  @ 11 @ 
expr  @ 86 @ expr  @ 101 @ 
operator: +=  @ 54 @ operator: +=  @ 59 @ 
name  @ 229 @ name  @ 307 @ 
block_content  @ 152 @ block_content  @ 165 @ 
name: merged_null_msgs  @ 277 @ name: merged_null_msgs  @ 142 @ 
index  @ 42 @ index  @ 47 @ 
literal: "wrong object header chunk signature"  @ 59 @ literal: "wrong object header chunk signature"  @ 64 @ 
name: H5O_VERSION_1  @ 259 @ name: H5O_VERSION_1  @ 232 @ 
operator: ->  @ 46 @ operator: ->  @ 51 @ 
name: id  @ 150 @ name: id  @ 164 @ 
literal: 0  @ 125 @ literal: 0  @ 256 @ 
argument  @ 99 @ argument  @ 116 @ 
name: unsigned  @ 6 @ name: unsigned  @ 8 @ 
literal: 0  @ 56 @ literal: 0  @ 61 @ 
expr_stmt  @ 109 @ expr_stmt  @ 128 @ 
operator: *  @ 85 @ operator: *  @ 100 @ 
name: oh  @ 24 @ name: oh  @ 25 @ 
expr_stmt  @ 120 @ expr_stmt  @ 140 @ 
operator: )  @ 243 @ operator: )  @ 216 @ 
operator: ->  @ 41 @ operator: ->  @ 45 @ 
index  @ 113 @ index  @ 135 @ 
operator: )  @ 64 @ operator: )  @ 72 @ 
call  @ 243 @ call  @ 216 @ 
name: gap  @ 251 @ name: gap  @ 224 @ 
argument  @ 91 @ argument  @ 106 @ 
comment: /* First chunk's 'image' includes room for the object header prefix */  @ 38 @ comment: /* First chunk's 'image' includes room for the object header prefix */  @ 39 @ 
if  @ 108 @ if  @ 127 @ 
name: HGOTO_ERROR  @ 29 @ name: HGOTO_ERROR  @ 30 @ 
name: H5O_VERSION_1  @ 56 @ name: H5O_VERSION_1  @ 61 @ 
argument_list  @ 58 @ argument_list  @ 63 @ 
expr  @ 113 @ expr  @ 135 @ 
operator: (  @ 54 @ operator: (  @ 59 @ 
name: mesg  @ 119 @ name: mesg  @ 139 @ 
call  @ 202 @ call  @ 266 @ 
name: flags  @ 90 @ name: flags  @ 105 @ 
comment: /* Check arguments */  @ 16 @ comment: /* Check arguments */  @ 17 @ 
operator: ++  @ 224 @ operator: ++  @ 302 @ 
operator: =  @ 156 @ operator: =  @ 172 @ 
name: HDassert  @ 19 @ name: HDassert  @ 20 @ 
expr  @ 265 @ expr  @ 237 @ 
name: refcount  @ 207 @ name: refcount  @ 278 @ 
literal: 0  @ 66 @ literal: 0  @ 74 @ 
name: id  @ 184 @ name: id  @ 209 @ 
expr  @ 85 @ expr  @ 100 @ 
name: na  @ 25 @ name: na  @ 26 @ 
name: size_t  @ 58 @ name: size_t  @ 63 @ 
name: chunk_image  @ 243 @ name: p  @ 216 @ 
name: len  @ 41 @ name: len  @ 45 @ 
name: mesg  @ 130 @ name: mesgno  @ 151 @ 
name: nchunks  @ 24 @ name: nchunks  @ 25 @ 
type  @ 2 @ type  @ 2 @ 
name: FUNC_ENTER_STATIC  @ 14 @ name: FUNC_ENTER_NOAPI_NOINIT  @ 15 @ 
name: eom_ptr  @ 5 @ name: eom_ptr  @ 6 @ 
name: version  @ 77 @ name: version  @ 86 @ 
operator: =  @ 273 @ operator: =  @ 296 @ 
expr  @ 159 @ expr  @ 175 @ 
argument  @ 129 @ argument  @ 147 @ 
operator: ==  @ 113 @ operator: ==  @ 134 @ 
name: chunkno  @ 37 @ name: chunkno  @ 38 @ 
expr  @ 83 @ expr  @ 96 @ 
operator: &&  @ 92 @ operator: &&  @ 107 @ 
name: mesg  @ 113 @ name: mesg  @ 134 @ 
argument_list  @ 286 @ argument_list  @ 321 @ 
name: mesg  @ 141 @ name: oh  @ 159 @ 
name: H5O_UNKNOWN_ID  @ 162 @ name: H5O_UNKNOWN_ID  @ 178 @ 
literal: "bad flag combination for message"  @ 89 @ literal: "bad flag combination for message"  @ 104 @ 
literal: 3  @ 95 @ literal: 3  @ 112 @ 
comment: /* Allocate "unknown" message info */  @ 154 @ comment: /* Allocate "unknown" message info */  @ 167 @ 
expr_stmt  @ 99 @ expr_stmt  @ 116 @ 
call  @ 84 @ call  @ 97 @ 
if_stmt  @ 128 @ if_stmt  @ 146 @ 
operator: ->  @ 142 @ operator: ->  @ 160 @ 
expr  @ 141 @ expr  @ 159 @ 
operator: &  @ 92 @ operator: &  @ 107 @ 
operator: (  @ 42 @ operator: (  @ 47 @ 
name: H5O_NULL_ID  @ 113 @ name: H5O_NULL_ID  @ 133 @ 
name  @ 162 @ name  @ 178 @ 
block_content  @ 29 @ block_content  @ 30 @ 
name: flags  @ 85 @ name: flags  @ 100 @ 
operator: &&  @ 88 @ operator: &&  @ 103 @ 
block_content  @ 89 @ block_content  @ 104 @ 
comment: /* Check if we need to extend message table to hold the new message */  @ 127 @ comment: /* Check if we need to extend message table to hold the new message */  @ 145 @ 
argument_list  @ 202 @ argument_list  @ 266 @ 
expr  @ 269 @ expr  @ 248 @ 
if_stmt  @ 113 @ if_stmt  @ 132 @ 
name: H5O_MSG_FLAG_FAIL_IF_UNKNOWN_AND_OPEN_FOR_WRITE  @ 90 @ name: H5O_MSG_FLAG_FAIL_IF_UNKNOWN  @ 105 @ 
expr  @ 156 @ expr  @ 169 @ 
expr  @ 43 @ expr  @ 240 @ 
literal: 0  @ 35 @ literal: 0  @ 37 @ 
if  @ 113 @ if  @ 132 @ 
name  @ 217 @ name  @ 289 @ 
decl  @ 2 @ decl  @ 2 @ 
block  @ 54 @ block  @ 59 @ 
macro  @ 104 @ macro  @ 123 @ 
ifndef  @ 106 @ ifndef  @ 125 @ 
comment: /* Save 'native' form of unknown message */  @ 158 @ comment: /* Save 'native' form of unknown message */  @ 174 @ 
name: H5F_ACC_RDWR  @ 169 @ name: H5F_ACC_RDWR  @ 186 @ 
expr_stmt  @ 159 @ expr_stmt  @ 175 @ 
block_content  @ 87 @ block_content  @ 102 @ 
expr_stmt  @ 80 @ expr_stmt  @ 89 @ 
label  @ 281 @ label  @ 320 @ 
name: ret_value  @ 12 @ name: ret_value  @ 13 @ 
decl  @ 192 @ decl  @ 255 @ 
comment: /* (Usually from future versions of the library) */  @ 145 @ comment: /* (Usually from future versions of the library) */  @ 163 @ 
literal: "memory allocation failed"  @ 29 @ literal: "memory allocation failed"  @ 30 @ 
operator: ->  @ 30 @ operator: ->  @ 32 @ 
name  @ 64 @ name  @ 72 @ 
parameter  @ 2 @ parameter  @ 2 @ 
operator: .  @ 41 @ operator: .  @ 45 @ 
block  @ 91 @ block  @ 106 @ 
name: H5O_msg_class_g  @ 183 @ name: mesg  @ 209 @ 
comment: /* Reserved bytes/creation index */  @ 93 @ comment: /* Reserved bytes/creation index */  @ 110 @ 
name: eom_ptr  @ 251 @ name: eom_ptr  @ 224 @ 
condition  @ 98 @ condition  @ 115 @ 
literal: "corrupt object header"  @ 104 @ literal: "corrupt object header"  @ 123 @ 
macro  @ 91 @ macro  @ 106 @ 
expr_stmt  @ 60 @ expr_stmt  @ 65 @ 
operator: -  @ 64 @ operator: -  @ 72 @ 
operator: (  @ 243 @ operator: (  @ 216 @ 
expr  @ 120 @ expr  @ 140 @ 
expr_stmt  @ 64 @ expr_stmt  @ 72 @ 
block_content  @ 95 @ block_content  @ 112 @ 
expr_stmt  @ 119 @ expr_stmt  @ 139 @ 
operator: -  @ 113 @ operator: -  @ 134 @ 
name: alloc_nchunks  @ 24 @ name: alloc_nchunks  @ 25 @ 
if  @ 88 @ if  @ 103 @ 
type  @ 152 @ type  @ 165 @ 
operator: ->  @ 113 @ operator: ->  @ 135 @ 
operator: ==  @ 155 @ operator: ==  @ 168 @ 
comment: /* Check for magic # on chunks>0 in later versions of the format */  @ 55 @ comment: /* Check for magic # on chunks>0 in later versions of the format */  @ 60 @ 
name: mesg  @ 162 @ name: oh  @ 178 @ 
if_stmt  @ 108 @ if_stmt  @ 127 @ 
expr  @ 196 @ expr  @ 260 @ 
type  @ 192 @ type  @ 255 @ 
call  @ 64 @ call  @ 72 @ 
argument_list  @ 19 @ argument_list  @ 20 @ 
expr_stmt  @ 43 @ expr_stmt  @ 240 @ 
name  @ 113 @ name  @ 134 @ 
directive: ifndef  @ 8 @ directive: ifndef  @ 10 @ 
expr_stmt  @ 265 @ expr_stmt  @ 237 @ 
name: x  @ 26 @ name: x  @ 27 @ 
operator: &&  @ 56 @ operator: &&  @ 61 @ 
operator: +=  @ 119 @ operator: +=  @ 139 @ 
argument_list  @ 25 @ argument_list  @ 26 @ 
init  @ 6 @ init  @ 8 @ 
name: chunkno  @ 64 @ name: chunkno  @ 72 @ 
operator: &&  @ 168 @ operator: &&  @ 185 @ 
expr  @ 64 @ expr  @ 72 @ 
operator: )  @ 140 @ operator: )  @ 158 @ 
name: oh  @ 64 @ name: oh  @ 72 @ 
name: H5O_MSG_FLAG_FAIL_IF_UNKNOWN_ALWAYS  @ 165 @ name: H5O_MSG_FLAG_FAIL_IF_UNKNOWN  @ 181 @ 
init  @ 72 @ init  @ 81 @ 
name: oh  @ 113 @ name: oh  @ 135 @ 
operator: (  @ 28 @ operator: (  @ 29 @ 
expr  @ 54 @ expr  @ 59 @ 
name: H5F_ACC_RDWR  @ 113 @ name: H5F_ACC_RDWR  @ 132 @ 
operator: -  @ 243 @ operator: -  @ 216 @ 
name: oh  @ 41 @ name: oh  @ 45 @ 
name: HDassert  @ 20 @ name: HDassert  @ 21 @ 
name: oh  @ 130 @ name: oh  @ 151 @ 
literal: 1  @ 113 @ literal: 1  @ 135 @ 
name: chunk_image  @ 254 @ name: p  @ 227 @ 
argument  @ 265 @ argument  @ 237 @ 
name  @ 259 @ name  @ 232 @ 
block_content  @ 43 @ block_content  @ 48 @ 
operator: ->  @ 113 @ operator: ->  @ 134 @ 
name: image  @ 269 @ name: image  @ 248 @ 
block_content  @ 115 @ block_content  @ 138 @ 
name: unsigned  @ 9 @ name: unsigned  @ 11 @ 
literal: 0  @ 129 @ literal: 0  @ 147 @ 
name: mesgno  @ 118 @ name: mesgno  @ 138 @ 
expr  @ 99 @ expr  @ 116 @ 
name: oh  @ 49 @ name: oh  @ 54 @ 
expr  @ 35 @ expr  @ 37 @ 
expr_stmt  @ 21 @ expr_stmt  @ 22 @ 
operator: &  @ 169 @ operator: &  @ 186 @ 
if_stmt  @ 37 @ if_stmt  @ 38 @ 
expr  @ 21 @ expr  @ 22 @ 
name: oh  @ 28 @ name: oh  @ 29 @ 
expr  @ 243 @ expr  @ 216 @ 
type  @ 125 @ type  @ 256 @ 
operator: ==  @ 269 @ operator: ==  @ 248 @ 
name: size_t  @ 129 @ name: size_t  @ 147 @ 
operator: =  @ 251 @ operator: =  @ 224 @ 
argument  @ 84 @ argument  @ 97 @ 
name: H5O_SIZEOF_MSGHDR_OH  @ 119 @ name: H5O_SIZEOF_MSGHDR_OH  @ 139 @ 
literal: 0  @ 248 @ literal: 0  @ 221 @ 
index  @ 254 @ index  @ 227 @ 
name  @ 219 @ name  @ 290 @ 
expr  @ 18 @ expr  @ 19 @ 
argument_list  @ 84 @ argument_list  @ 97 @ 
operator: (  @ 169 @ operator: (  @ 186 @ 
operator: =  @ 141 @ operator: =  @ 159 @ 
name: oh  @ 113 @ name: oh  @ 134 @ 
name: TRUE  @ 273 @ name: TRUE  @ 296 @ 
expr  @ 119 @ expr  @ 139 @ 
argument_list  @ 54 @ argument_list  @ 59 @ 
name: file_intent  @ 169 @ name: file_intent  @ 186 @ 
expr  @ 39 @ expr  @ 41 @ 
modifier: *  @ 207 @ modifier: *  @ 278 @ 
name: dirty  @ 273 @ name: dirty  @ 296 @ 
argument  @ 203 @ argument  @ 267 @ 
literal: 0  @ 113 @ literal: 0  @ 133 @ 
argument  @ 166 @ argument  @ 182 @ 
expr  @ 245 @ expr  @ 218 @ 
name: oh  @ 243 @ name: oh  @ 216 @ 
if_stmt  @ 86 @ if_stmt  @ 101 @ 
argument  @ 59 @ argument  @ 64 @ 
name: oh  @ 56 @ name: oh  @ 61 @ 
literal: "memory allocation failed"  @ 156 @ literal: "memory allocation failed"  @ 169 @ 
argument  @ 43 @ argument  @ 48 @ 
index  @ 113 @ index  @ 134 @ 
expr  @ 17 @ expr  @ 18 @ 
operator: +=  @ 60 @ operator: +=  @ 65 @ 
operator: .  @ 120 @ operator: .  @ 140 @ 
name: version  @ 245 @ name: version  @ 218 @ 
name: flags  @ 90 @ name: flags  @ 105 @ 
comment: /* end if */  @ 122 @ comment: /* end if */  @ 143 @ 
operator: &  @ 98 @ operator: &  @ 115 @ 
argument  @ 20 @ argument  @ 21 @ 
comment: /* Set message to "unknown" class */  @ 161 @ comment: /* Set message to "unknown" class */  @ 177 @ 
expr  @ 130 @ expr  @ 151 @ 
name: hbool_t  @ 2 @ name: hbool_t  @ 3 @ 
decl  @ 2 @ decl  @ 2 @ 
name: oh  @ 24 @ name: oh  @ 25 @ 
name: chunk_image  @ 58 @ name: p  @ 63 @ 
operator: ->  @ 196 @ operator: ->  @ 260 @ 
expr  @ 12 @ expr  @ 13 @ 
comment: /* Check for "fail if unknown" message flags */  @ 164 @ comment: /* Check for "fail if unknown" message flag */  @ 180 @ 
argument  @ 59 @ argument  @ 64 @ 
name  @ 269 @ name  @ 248 @ 
literal: 0  @ 39 @ literal: 0  @ 41 @ 
comment: /* Size of message read in */  @ 69 @ comment: /* Size of message read in */  @ 78 @ 
argument  @ 54 @ argument  @ 59 @ 
type  @ 207 @ type  @ 278 @ 
expr  @ 273 @ expr  @ 296 @ 
name: HGOTO_ERROR  @ 104 @ name: HGOTO_ERROR  @ 123 @ 
name: image  @ 46 @ name: image  @ 51 @ 
operator: >=  @ 24 @ operator: >=  @ 25 @ 
operator: =  @ 41 @ operator: =  @ 45 @ 
type  @ 26 @ type  @ 27 @ 
name: nullcnt  @ 248 @ name: nullcnt  @ 221 @ 
comment: /* Set gap information for chunk */  @ 250 @ comment: /* Set gap information for chunk */  @ 223 @ 
if  @ 98 @ if  @ 115 @ 
name: chunk  @ 254 @ name: chunk  @ 227 @ 
decl_stmt  @ 192 @ decl_stmt  @ 255 @ 
call  @ 42 @ call  @ 47 @ 
name: x  @ 28 @ name: x  @ 29 @ 
name: link_msgs_seen  @ 224 @ name: link_msgs_seen  @ 302 @ 
else  @ 40 @ else  @ 43 @ 
comment: /* This is a bit aggressive, since the application may * never change anything about the object (metadata or * raw data), but we can sort out the finer details * when/if we start using the flag - QAK */  @ 172 @ comment: /* This is a bit aggressive, since the application may
                     * never change anything about the object (metadata or* raw data), but we can sort out the finer details
                     * when/if we start using the flag - QAK*/  @ 189 @ 
name: chunk  @ 64 @ name: chunk  @ 72 @ 
expr  @ 77 @ expr  @ 86 @ 
name: H5O_VERSION_1  @ 94 @ name: H5O_VERSION_1  @ 111 @ 
block_content  @ 4 @ block_content  @ 5 @ 
name: H5FL_SEQ_REALLOC  @ 28 @ name: H5FL_SEQ_REALLOC  @ 29 @ 
name: chunk  @ 28 @ name: chunk  @ 29 @ 
block_content  @ 54 @ block_content  @ 59 @ 
operator: &&  @ 167 @ operator: &&  @ 184 @ 
block  @ 169 @ block  @ 186 @ 
modifier: *  @ 2 @ modifier: *  @ 3 @ 
name: merged_null_msgs  @ 121 @ name: merged_null_msgs  @ 141 @ 
name  @ 24 @ name  @ 25 @ 
block  @ 243 @ block  @ 216 @ 
decl  @ 14 @ decl  @ 15 @ 
type  @ 25 @ type  @ 26 @ 
operator: )  @ 167 @ operator: )  @ 184 @ 
argument_list  @ 43 @ argument_list  @ 48 @ 
specifier: const  @ 2 @ specifier: const  @ 2 @ 
expr  @ 25 @ expr  @ 26 @ 
expr_stmt  @ 224 @ expr_stmt  @ 302 @ 
expr  @ 21 @ expr  @ 22 @ 
name: chunkno  @ 49 @ name: chunkno  @ 54 @ 
operator: ==  @ 113 @ operator: ==  @ 135 @ 
expr_stmt  @ 156 @ expr_stmt  @ 169 @ 
expr  @ 217 @ expr  @ 289 @ 
operator: &  @ 92 @ operator: &  @ 107 @ 
name: H5O_chunk_t  @ 28 @ name: H5O_chunk_t  @ 29 @ 
operator: )  @ 251 @ operator: )  @ 224 @ 
expr_stmt  @ 121 @ expr_stmt  @ 141 @ 
argument  @ 129 @ argument  @ 147 @ 
index  @ 49 @ index  @ 54 @ 
call  @ 83 @ call  @ 96 @ 
name: H5O_cont_t  @ 192 @ name: H5O_cont_t  @ 255 @ 
name  @ 30 @ name  @ 32 @ 
init  @ 12 @ init  @ 13 @ 
name: crt_idx  @ 138 @ name: crt_idx  @ 156 @ 
name: na  @ 29 @ name: na  @ 31 @ 
expr  @ 202 @ expr  @ 266 @ 
operator: =  @ 142 @ operator: =  @ 160 @ 
name: image  @ 2 @ name: image  @ 2 @ 
argument  @ 130 @ argument  @ 148 @ 
name: uint8_t  @ 71 @ name: uint8_t  @ 80 @ 
operator: *  @ 80 @ operator: *  @ 89 @ 
block_content  @ 99 @ block_content  @ 116 @ 
name: chunk_image  @ 103 @ name: p  @ 122 @ 
expr  @ 162 @ expr  @ 178 @ 
specifier: const  @ 4 @ specifier: const  @ 5 @ 
if  @ 42 @ if  @ 47 @ 
operator: =  @ 35 @ operator: =  @ 37 @ 
expr  @ 46 @ expr  @ 51 @ 
expr_stmt  @ 273 @ expr_stmt  @ 296 @ 
expr  @ 29 @ expr  @ 31 @ 
name: oh  @ 98 @ name: oh  @ 115 @ 
operator: ->  @ 21 @ operator: ->  @ 22 @ 
name  @ 113 @ name  @ 133 @ 
operator: .  @ 113 @ operator: .  @ 134 @ 
comment: /* Mark the message as "unknown" */  @ 171 @ comment: /* Mark the message as "unknown" */  @ 188 @ 
name: chunk_image  @ 243 @ name: p  @ 216 @ 
name: alloc_nchunks  @ 25 @ name: alloc_nchunks  @ 26 @ 
expr  @ 37 @ expr  @ 38 @ 
argument  @ 83 @ argument  @ 96 @ 
if  @ 37 @ if  @ 38 @ 
expr  @ 129 @ expr  @ 147 @ 
comment: /* Gaps can only occur in later versions of the format */  @ 244 @ comment: /* Gaps can only occur in later versions of the format */  @ 217 @ 
name: H5O_MSG_REFCOUNT  @ 211 @ name: H5O_MSG_REFCOUNT  @ 283 @ 
name: f  @ 211 @ name: f  @ 283 @ 
operator: )  @ 251 @ operator: )  @ 224 @ 
name: udata  @ 113 @ name: udata  @ 132 @ 
expr  @ 155 @ expr  @ 168 @ 
call  @ 156 @ call  @ 169 @ 
expr  @ 248 @ expr  @ 221 @ 
operator: ->  @ 20 @ operator: ->  @ 21 @ 
operator: ->  @ 138 @ operator: ->  @ 156 @ 
argument  @ 156 @ argument  @ 169 @ 
name: NULL  @ 43 @ name: H5O_SIZEOF_CHKSUM  @ 240 @ 
operator: )  @ 113 @ operator: )  @ 132 @ 
name: H5O_NCHUNKS  @ 25 @ name: H5O_NCHUNKS  @ 26 @ 
name: NULL  @ 139 @ name: NULL  @ 157 @ 
operator: )  @ 42 @ operator: )  @ 47 @ 
name: nlink  @ 219 @ name: nlink  @ 290 @ 
name  @ 128 @ name  @ 146 @ 
operator: =  @ 120 @ operator: =  @ 140 @ 
operator: =  @ 178 @ operator: =  @ 203 @ 
directive: endif  @ 10 @ directive: endif  @ 12 @ 
expr_stmt  @ 46 @ expr_stmt  @ 51 @ 
operator: ->  @ 169 @ operator: ->  @ 186 @ 
macro  @ 59 @ macro  @ 64 @ 
decl_stmt  @ 71 @ decl_stmt  @ 80 @ 
condition  @ 128 @ condition  @ 146 @ 
expr  @ 146 @ expr  @ 164 @ 
block_content  @ 39 @ block_content  @ 40 @ 
decl_stmt  @ 152 @ decl_stmt  @ 165 @ 
name: HGOTO_ERROR  @ 87 @ name: HGOTO_ERROR  @ 102 @ 
name: stored_chksum  @ 260 @ name: stored_chksum  @ 233 @ 
argument_list  @ 91 @ argument_list  @ 106 @ 
decl_stmt  @ 125 @ decl_stmt  @ 256 @ 
macro  @ 166 @ macro  @ 182 @ 
comment: /* Check for combining two adjacent 'null' messages */  @ 112 @ comment: /* Check for combining two adjacent 'null' messages */  @ 131 @ 
condition  @ 68 @ condition  @ 76 @ 
operator: (  @ 233 @ operator: (  @ 293 @ 
decl_stmt  @ 14 @ decl_stmt  @ 15 @ 
name: chunk  @ 46 @ name: chunk  @ 51 @ 
comment: /* Try to detect invalidly formatted object header message that *extends past end of chunk. */  @ 102 @ comment: /* Try to detect invalidly formatted object header message that
         *  extends past end of chunk.*/  @ 119 @ 
name: chunk_image  @ 240 @ name: p  @ 213 @ 
name: UINT16DECODE  @ 99 @ name: UINT16DECODE  @ 116 @ 
argument_list  @ 87 @ argument_list  @ 102 @ 
operator: (  @ 155 @ operator: (  @ 168 @ 
name: H5F_addr_defined  @ 18 @ name: H5F_addr_defined  @ 19 @ 
expr  @ 56 @ expr  @ 61 @ 
condition  @ 56 @ condition  @ 61 @ 
argument  @ 42 @ argument  @ 47 @ 
name: H5O_msg_crt_idx_t  @ 72 @ name: H5O_msg_crt_idx_t  @ 81 @ 
literal: 1  @ 196 @ literal: 1  @ 260 @ 
name: chunk_image  @ 95 @ name: p  @ 112 @ 
expr  @ 68 @ expr  @ 76 @ 
operator: |=  @ 174 @ operator: |=  @ 199 @ 
name: eom_ptr  @ 243 @ name: eom_ptr  @ 216 @ 
operator: ->  @ 133 @ operator: ->  @ 69 @ 
name  @ 113 @ name  @ 132 @ 
operator: <  @ 129 @ operator: <  @ 147 @ 
name: NULL  @ 150 @ name: NULL  @ 164 @ 
operator: ++  @ 229 @ operator: ++  @ 307 @ 
name: chunkno  @ 42 @ name: chunkno  @ 47 @ 
name  @ 196 @ name  @ 260 @ 
call  @ 21 @ call  @ 22 @ 
name: id  @ 146 @ name: id  @ 164 @ 
type  @ 71 @ type  @ 80 @ 
index  @ 251 @ index  @ 224 @ 
block_content  @ 58 @ block_content  @ 63 @ 
expr  @ 49 @ expr  @ 54 @ 
condition  @ 129 @ condition  @ 147 @ 
type  @ 12 @ type  @ 13 @ 
operator: .  @ 35 @ operator: .  @ 37 @ 
if_stmt  @ 103 @ if_stmt  @ 122 @ 
name: native  @ 159 @ name: native  @ 175 @ 
comment: /* Advance decode pointer past message */  @ 239 @ comment: /* Advance decode pointer past message */  @ 212 @ 
argument  @ 17 @ argument  @ 18 @ 
operator: ->  @ 211 @ operator: ->  @ 283 @ 
name: chunk_image  @ 42 @ name: chunk_image  @ 47 @ 
name  @ 94 @ name  @ 111 @ 
operator: ->  @ 159 @ operator: ->  @ 175 @ 
name: size  @ 41 @ name: size  @ 45 @ 
name  @ 28 @ name  @ 29 @ 
decl_stmt  @ 12 @ decl_stmt  @ 13 @ 
operator: =  @ 42 @ operator: =  @ 47 @ 
name  @ 211 @ name  @ 283 @ 
name: chunk  @ 35 @ name: chunk  @ 37 @ 
call  @ 119 @ call  @ 139 @ 
decl_stmt  @ 4 @ decl_stmt  @ 5 @ 
name: mesgs_modified  @ 178 @ name: mesgs_modified  @ 203 @ 
name: HDassert  @ 17 @ name: HDassert  @ 18 @ 
if  @ 94 @ if  @ 111 @ 
expr  @ 156 @ expr  @ 169 @ 
condition  @ 86 @ condition  @ 101 @ 
comment: /* Message size */  @ 82 @ comment: /* Message size */  @ 95 @ 
expr  @ 94 @ expr  @ 111 @ 
operator: ->  @ 113 @ operator: ->  @ 133 @ 
expr  @ 49 @ expr  @ 54 @ 
name: decode  @ 195 @ name: decode  @ 259 @ 
comment: /* Gaps should only occur in chunks with no null messages */  @ 247 @ comment: /* Gaps should only occur in chunks with no null messages */  @ 220 @ 
name: flags  @ 174 @ name: flags  @ 199 @ 
name: size  @ 42 @ name: size  @ 47 @ 
name: oh  @ 39 @ name: oh  @ 41 @ 
name: eom_ptr  @ 103 @ name: eom_ptr  @ 122 @ 
operator: ->  @ 42 @ operator: ->  @ 47 @ 
argument_list  @ 18 @ argument_list  @ 19 @ 
expr  @ 39 @ expr  @ 41 @ 
decl  @ 4 @ decl  @ 5 @ 
name: f  @ 20 @ name: f  @ 21 @ 
operator: &  @ 88 @ operator: &  @ 103 @ 
index  @ 119 @ index  @ 139 @ 
argument_list  @ 166 @ argument_list  @ 182 @ 
argument  @ 89 @ argument  @ 104 @ 
comment: /*reserved*/  @ 95 @ comment: /*reserved*/  @ 112 @ 
call  @ 39 @ call  @ 41 @ 
argument  @ 43 @ argument  @ 48 @ 
directive: endif  @ 110 @ directive: endif  @ 129 @ 
expr_stmt  @ 137 @ expr_stmt  @ 155 @ 
argument  @ 202 @ argument  @ 266 @ 
operator: .  @ 42 @ operator: .  @ 47 @ 
name: oh  @ 251 @ name: oh  @ 224 @ 
name: UINT16DECODE  @ 83 @ name: UINT16DECODE  @ 96 @ 
operator: .  @ 42 @ operator: .  @ 47 @ 
decl  @ 12 @ decl  @ 13 @ 
name: H5O_VERSION_1  @ 245 @ name: H5O_VERSION_1  @ 218 @ 
expr_stmt  @ 178 @ expr_stmt  @ 203 @ 
argument  @ 130 @ argument  @ 148 @ 
operator: ->  @ 36 @ operator: ->  @ 44 @ 
literal: 1  @ 129 @ literal: 1  @ 147 @ 
argument  @ 58 @ argument  @ 63 @ 

