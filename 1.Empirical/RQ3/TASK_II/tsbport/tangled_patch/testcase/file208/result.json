{
    "testcase": {
        "file208": {
            "match_message": {
                "Same: dot24_print_page -> dot24_print_page": {
                    "Seg_0": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 30 -> 54",
                        "L2": "3: Unique Matched by Source code 42 -> 66"
                    },
                    "Seg_1": {
                        "Edit": "add",
                        "L1": "3: Unique Matched by Source code 43 -> 67",
                        "L2": "6: Matched by Text Context Similarity from Source Code 44->68"
                    }
                }
            },
            "verify_message": {},
            "prepare_info": [
                [
                    "Seg_0",
                    {
                        "Edit": "change",
                        "add_location": 54,
                        "add_hunk": [
                            "  int xres;\n",
                            "  int yres;\n",
                            "  int x_high;\n",
                            "  int y_high;\n",
                            "  int bits_per_column;\n",
                            "  uint line_size;\n",
                            "  uint in_size;\n",
                            "  byte *in;\n",
                            "  uint out_size;\n",
                            "  byte *out;\n",
                            "  int y_passes;\n",
                            "  int dots_per_space;\n",
                            "  int bytes_per_space;\n"
                        ],
                        "delete_location": [
                            54,
                            66
                        ],
                        "delete_hunk": [
                            "  int xres = (int)pdev->x_pixels_per_inch;\n",
                            "  int yres = (int)pdev->y_pixels_per_inch;\n",
                            "  int x_high = (xres == 360);\n",
                            "  int y_high = (yres == 360);\n",
                            "  int bits_per_column = (y_high ? 48 : 24);\n",
                            "  uint line_size = gdev_prn_raster (pdev);\n",
                            "  uint in_size = line_size * bits_per_column;\n",
                            "  byte *in = (byte *) gs_malloc (pdev->memory, in_size, 1, \"dot24_print_page (in)\");\n",
                            "  uint out_size = ((pdev->width + 7) & -8) * 3;\n",
                            "  byte *out = (byte *) gs_malloc (pdev->memory, out_size, 1, \"dot24_print_page (out)\");\n",
                            "  int y_passes = (y_high ? 2 : 1);\n",
                            "  int dots_per_space = xres / 10;\t/* pica space = 1/10\" */\n",
                            "  int bytes_per_space = dots_per_space * 3;\n"
                        ]
                    }
                ],
                [
                    "Seg_1",
                    {
                        "Edit": "add",
                        "add_location": 67,
                        "add_hunk": [
                            "  xres = (int)pdev->x_pixels_per_inch;\n",
                            "  yres = (int)pdev->y_pixels_per_inch;\n",
                            "  x_high = (xres == 360);\n",
                            "  y_high = (yres == 360);\n",
                            "  dots_per_space = xres / 10;       /* pica space = 1/10\" */\n",
                            "  bytes_per_space = dots_per_space * 3;\n",
                            "  if (bytes_per_space == 0) {\n",
                            "    return_error(gs_error_rangecheck);\n",
                            "  }\n",
                            "  bits_per_column = (y_high ? 48 : 24);\n",
                            "  line_size = gdev_prn_raster (pdev);\n",
                            "  in_size = line_size * bits_per_column;\n",
                            "  in = (byte *) gs_malloc (pdev->memory, in_size, 1, \"dot24_print_page (in)\");\n",
                            "  out_size = ((pdev->width + 7) & -8) * 3;\n",
                            "  out = (byte *) gs_malloc (pdev->memory, out_size, 1, \"dot24_print_page (out)\");\n",
                            "  y_passes = (y_high ? 2 : 1);\n"
                        ]
                    }
                ]
            ],
            "semanic_check": {
                "Same: dot24_print_page -> dot24_print_page": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                }
            },
            "verify_patch": null,
            "patch_types": [
                "DEF",
                "USE"
            ]
        }
    }
}