expr_stmt  @ 63 @ expr_stmt  @ 104 @ 
expr_stmt  @ 75 @ expr_stmt  @ 124 @ 
operator: ==  @ 101 @ operator: ==  @ 165 @ 
expr  @ 101 @ expr  @ 165 @ 
expr_stmt  @ 55 @ expr_stmt  @ 95 @ 
name: tag  @ 93 @ name: tag  @ 143 @ 
literal: "bytes_left: %ld\n"  @ 98 @ literal: "bytes_left:               %ld\n"  @ 162 @ 
name: decomp  @ 52 @ name: decomp  @ 92 @ 
name: i  @ 68 @ name: i  @ 111 @ 
name: LOG_TRACE  @ 36 @ name: LOG_TRACE  @ 38 @ 
operator: =  @ 103 @ operator: =  @ 168 @ 
name: section_info  @ 17 @ name: section_info  @ 17 @ 
expr  @ 98 @ expr  @ 162 @ 
name: LOG_INFO  @ 95 @ name: LOG_INFO  @ 145 @ 
expr_stmt  @ 62 @ expr_stmt  @ 103 @ 
name: unknown  @ 41 @ name: unknown  @ 47 @ 
operator: (  @ 89 @ operator: (  @ 139 @ 
else  @ 28 @ else  @ 30 @ 
operator: =  @ 62 @ operator: =  @ 103 @ 
argument  @ 36 @ argument  @ 38 @ 
argument  @ 55 @ argument  @ 86 @ 
name: dwg  @ 2 @ name: dwg  @ 2 @ 
name: address  @ 4 @ name: address  @ 110 @ 
block  @ 23 @ block  @ 23 @ 
name  @ 17 @ name  @ 17 @ 
name: max_decomp_size  @ 47 @ name: max_decomp_size  @ 75 @ 
operator: !=  @ 87 @ operator: !=  @ 136 @ 
name: SECTION_TEMPLATE  @ 24 @ name: SECTION_TEMPLATE  @ 24 @ 
name: sec_mask  @ 83 @ name: sec_mask  @ 132 @ 
literal: 4  @ 41 @ literal: 4  @ 46 @ 
name: sec_dat  @ 63 @ name: sec_dat  @ 104 @ 
name: SECTION_TEMPLATE  @ 41 @ name: SECTION_TEMPLATE  @ 46 @ 
name: es  @ 87 @ name: es  @ 136 @ 
expr  @ 52 @ expr  @ 92 @ 
name  @ 60 @ name  @ 101 @ 
block_content  @ 30 @ block_content  @ 32 @ 
expr_stmt  @ 83 @ expr_stmt  @ 132 @ 
name  @ 66 @ name  @ 108 @ 
incr  @ 82 @ incr  @ 131 @ 
argument_list  @ 98 @ argument_list  @ 160 @ 
type  @ 1 @ type  @ 1 @ 
name: info  @ 55 @ name: info  @ 86 @ 
name: is_teigha  @ 41 @ name: is_teigha  @ 46 @ 
name  @ 63 @ name  @ 104 @ 
expr  @ 47 @ expr  @ 75 @ 
block_content  @ 70 @ block_content  @ 113 @ 
operator: ->  @ 49 @ operator: ->  @ 79 @ 
name  @ 36 @ name  @ 40 @ 
parameter  @ 2 @ parameter  @ 2 @ 
parameter_list  @ 2 @ parameter_list  @ 2 @ 
expr_stmt  @ 93 @ expr_stmt  @ 143 @ 
name: BITCODE_BL  @ 10 @ name: BITCODE_BL  @ 10 @ 
name: LOG_INFO  @ 86 @ name: LOG_INFO  @ 135 @ 
literal: 0  @ 11 @ literal: 0  @ 11 @ 
operator: (  @ 93 @ operator: (  @ 143 @ 
name: header  @ 13 @ name: header  @ 13 @ 
name: int  @ 1 @ name: int  @ 1 @ 
decl_stmt  @ 6 @ decl_stmt  @ 6 @ 
name  @ 38 @ name  @ 43 @ 
operator: .  @ 13 @ operator: .  @ 13 @ 
operator: (  @ 52 @ operator: (  @ 92 @ 
expr  @ 17 @ expr  @ 17 @ 
argument  @ 49 @ argument  @ 79 @ 
name: info  @ 7 @ name: info  @ 7 @ 
decl  @ 10 @ decl  @ 10 @ 
operator: ^  @ 79 @ operator: ^  @ 128 @ 
operator: =  @ 42 @ operator: =  @ 49 @ 
name  @ 61 @ name  @ 102 @ 
name: sections  @ 68 @ name: sections  @ 111 @ 
name: info  @ 101 @ name: info  @ 165 @ 
name: read_2004_compressed_section  @ 2 @ name: read_2004_compressed_section  @ 2 @ 
expr  @ 49 @ expr  @ 79 @ 
argument  @ 103 @ argument  @ 169 @ 
operator: ,  @ 66 @ operator: ,  @ 108 @ 
call  @ 36 @ call  @ 38 @ 
comment: //? if encrypted properties: security_type&2 ??  @ 78 @ comment: //? if encrypted properties: security_type&2 ??  @ 127 @ 
expr  @ 98 @ expr  @ 162 @ 
literal: 0  @ 66 @ literal: 0  @ 108 @ 
expr  @ 36 @ expr  @ 38 @ 
argument  @ 49 @ argument  @ 77 @ 
name: fields  @ 89 @ name: fields  @ 139 @ 
if  @ 53 @ if  @ 93 @ 
expr_stmt  @ 60 @ expr_stmt  @ 101 @ 
operator: .  @ 87 @ operator: .  @ 136 @ 
argument  @ 49 @ argument  @ 79 @ 
macro  @ 95 @ macro  @ 145 @ 
name: chain  @ 64 @ name: chain  @ 105 @ 
name: tag  @ 89 @ name: tag  @ 139 @ 
operator: ->  @ 68 @ operator: ->  @ 111 @ 
macro  @ 26 @ macro  @ 27 @ 
name: int  @ 11 @ name: int  @ 11 @ 
name: i  @ 13 @ name: i  @ 13 @ 
expr  @ 53 @ expr  @ 93 @ 
operator: &&  @ 41 @ operator: &&  @ 46 @ 
operator: )  @ 101 @ operator: )  @ 166 @ 
index  @ 68 @ index  @ 111 @ 
macro  @ 98 @ macro  @ 158 @ 
if  @ 15 @ if  @ 15 @ 
type  @ 5 @ type  @ 5 @ 
name: max_decomp_size  @ 58 @ name: max_decomp_size  @ 100 @ 
type  @ 2 @ type  @ 3 @ 
operator: )  @ 93 @ operator: )  @ 143 @ 
name: max_decomp_size  @ 5 @ name: max_decomp_size  @ 5 @ 
argument  @ 36 @ argument  @ 40 @ 
expr_stmt  @ 79 @ expr_stmt  @ 128 @ 
operator: ->  @ 42 @ operator: ->  @ 48 @ 
operator: ++  @ 82 @ operator: ++  @ 131 @ 
expr  @ 52 @ expr  @ 92 @ 
argument  @ 103 @ argument  @ 169 @ 
expr  @ 68 @ expr  @ 111 @ 
operator: .  @ 87 @ operator: .  @ 136 @ 
operator: (  @ 101 @ operator: (  @ 166 @ 
name  @ 89 @ name  @ 139 @ 
if  @ 47 @ if  @ 75 @ 
argument  @ 26 @ argument  @ 27 @ 
name: sec_dat  @ 2 @ name: sec_dat  @ 3 @ 
name  @ 62 @ name  @ 103 @ 
expr  @ 74 @ expr  @ 123 @ 
type  @ 8 @ type  @ 8 @ 
name  @ 76 @ name  @ 125 @ 
parameter  @ 2 @ parameter  @ 3 @ 
decl  @ 4 @ decl  @ 110 @ 
block_content  @ 93 @ block_content  @ 143 @ 
expr_stmt  @ 36 @ expr_stmt  @ 38 @ 
name: max_decomp_size  @ 47 @ name: max_decomp_size  @ 75 @ 
argument_list  @ 95 @ argument_list  @ 145 @ 
name: fields  @ 93 @ name: fields  @ 143 @ 
name: bit_read_fixed  @ 76 @ name: bit_read_fixed  @ 125 @ 
else  @ 91 @ else  @ 141 @ 
name: dat  @ 76 @ name: dat  @ 125 @ 
name  @ 15 @ name  @ 15 @ 
operator: .  @ 15 @ operator: .  @ 15 @ 
name: max_decomp_size  @ 46 @ name: max_decomp_size  @ 74 @ 
literal: "Out of memory with %u sections"  @ 55 @ literal: "Out of memory with "  @ 95 @ 
name: LOG_ERROR  @ 55 @ name: LOG_ERROR  @ 95 @ 
init  @ 7 @ init  @ 7 @ 
operator: ->  @ 62 @ operator: ->  @ 103 @ 
argument  @ 55 @ argument  @ 95 @ 
operator: .  @ 13 @ operator: .  @ 13 @ 
block_content  @ 17 @ block_content  @ 17 @ 
name: i  @ 17 @ name: i  @ 17 @ 
operator: !  @ 13 @ operator: !  @ 13 @ 
name  @ 101 @ name  @ 165 @ 
operator: =  @ 66 @ operator: =  @ 108 @ 
argument_list  @ 70 @ argument_list  @ 113 @ 
argument_list  @ 98 @ argument_list  @ 158 @ 
type  @ 4 @ type  @ 110 @ 
name: k  @ 83 @ name: k  @ 132 @ 
name: info  @ 38 @ name: info  @ 43 @ 
name: BITCODE_RC  @ 52 @ name: BITCODE_RC  @ 92 @ 
name: unsigned  @ 93 @ name: unsigned  @ 143 @ 
name  @ 49 @ name  @ 79 @ 
name: encrypted_section_header  @ 8 @ name: encrypted_section_header  @ 8 @ 
operator: ->  @ 62 @ operator: ->  @ 103 @ 
name  @ 21 @ name  @ 21 @ 
block  @ 42 @ block  @ 48 @ 
name: dat  @ 75 @ name: dat  @ 124 @ 
expr  @ 24 @ expr  @ 24 @ 
expr  @ 44 @ expr  @ 67 @ 
argument_list  @ 55 @ argument_list  @ 95 @ 
expr  @ 49 @ expr  @ 79 @ 
operator: !=  @ 24 @ operator: !=  @ 24 @ 
operator: ->  @ 55 @ operator: ->  @ 86 @ 
operator: ==  @ 36 @ operator: ==  @ 41 @ 
expr  @ 56 @ expr  @ 98 @ 
name: j  @ 71 @ name: j  @ 120 @ 
argument  @ 36 @ argument  @ 40 @ 
name: error  @ 11 @ name: error  @ 11 @ 
name: bytes_left  @ 58 @ name: bytes_left  @ 100 @ 
for  @ 13 @ for  @ 13 @ 
operator: &  @ 17 @ operator: &  @ 17 @ 
operator: ->  @ 101 @ operator: ->  @ 166 @ 
parameter  @ 2 @ parameter  @ 2 @ 
condition  @ 38 @ condition  @ 43 @ 
expr_stmt  @ 21 @ expr_stmt  @ 21 @ 
literal: 0  @ 82 @ literal: 0  @ 131 @ 
expr  @ 21 @ expr  @ 21 @ 
expr_stmt  @ 89 @ expr_stmt  @ 138 @ 
name: type  @ 15 @ name: type  @ 15 @ 
operator: ++  @ 66 @ operator: ++  @ 108 @ 
operator: ++  @ 13 @ operator: ++  @ 13 @ 
name: info  @ 70 @ name: info  @ 113 @ 
call  @ 49 @ call  @ 77 @ 
argument_list  @ 89 @ argument_list  @ 138 @ 
name: sec_dat  @ 60 @ name: sec_dat  @ 101 @ 
block_content  @ 24 @ block_content  @ 24 @ 
decl_stmt  @ 4 @ decl_stmt  @ 110 @ 
for  @ 82 @ for  @ 131 @ 
block_content  @ 44 @ block_content  @ 67 @ 
name: Dwg_Data  @ 2 @ name: Dwg_Data  @ 2 @ 
literal: "Found no section_info[%u] with type %d\n"  @ 30 @ literal: "Found no section_info[%u] with type %d\n"  @ 32 @ 
block  @ 44 @ block  @ 67 @ 
name  @ 49 @ name  @ 79 @ 
name: i  @ 66 @ name: i  @ 108 @ 
name: info  @ 49 @ name: info  @ 79 @ 
operator: .  @ 89 @ operator: .  @ 139 @ 
literal: "max_decomp_size:%lu (0x%lx)\n"  @ 98 @ literal: "max_decomp_size:          %"  @ 160 @ 
modifier: *  @ 7 @ modifier: *  @ 7 @ 
condition  @ 53 @ condition  @ 93 @ 
name  @ 68 @ name  @ 111 @ 
operator: ->  @ 70 @ operator: ->  @ 113 @ 
type  @ 10 @ type  @ 10 @ 
expr  @ 70 @ expr  @ 113 @ 
name: info  @ 36 @ name: info  @ 40 @ 
name: decomp  @ 9 @ name: decomp  @ 9 @ 
expr_stmt  @ 58 @ expr_stmt  @ 100 @ 
name: num_sections  @ 38 @ name: num_sections  @ 43 @ 
operator: ->  @ 46 @ operator: ->  @ 74 @ 
operator: ->  @ 74 @ operator: ->  @ 123 @ 
type  @ 2 @ type  @ 3 @ 
name: uint32_t  @ 5 @ name: uint32_t  @ 5 @ 
name: section_info  @ 15 @ name: section_info  @ 15 @ 
argument_list  @ 98 @ argument_list  @ 162 @ 
argument  @ 36 @ argument  @ 40 @ 
operator: !=  @ 24 @ operator: !=  @ 25 @ 
name: bytes_left  @ 6 @ name: bytes_left  @ 6 @ 
operator: &&  @ 13 @ operator: &&  @ 13 @ 
init  @ 11 @ init  @ 11 @ 
name: sec_dat  @ 21 @ name: sec_dat  @ 21 @ 
operator: <  @ 66 @ operator: <  @ 108 @ 
argument  @ 98 @ argument  @ 160 @ 
operator: ^=  @ 83 @ operator: ^  @ 132 @ 
operator: >  @ 101 @ operator: >  @ 165 @ 
literal: "Section Tag:0x%x(should be 0x4163043b)"  @ 89 @ literal: "Section Tag:      0x%x  (should be 0x4163043b)"  @ 138 @ 
name: address  @ 75 @ name: address  @ 124 @ 
expr_stmt  @ 74 @ expr_stmt  @ 123 @ 
specifier: restrict  @ 2 @ specifier: restrict  @ 2 @ 
name: type  @ 41 @ name: type  @ 46 @ 
block_content  @ 83 @ block_content  @ 132 @ 
return  @ 44 @ return  @ 67 @ 
block  @ 48 @ block  @ 76 @ 
expr  @ 64 @ expr  @ 105 @ 
literal: "Skip empty section %u %s"  @ 70 @ literal: "Skip empty section %u %s"  @ 113 @ 
operator: .  @ 93 @ operator: .  @ 143 @ 
operator: <=  @ 101 @ operator: <=  @ 166 @ 
init  @ 82 @ init  @ 131 @ 
if_stmt  @ 101 @ if_stmt  @ 165 @ 
operator: .  @ 17 @ operator: .  @ 17 @ 
comment: // XXX: This Teigha bug is already fixed up before  @ 40 @ comment: // XXX: This Teigha bug is already fixed up before  @ 45 @ 
operator: =  @ 63 @ operator: =  @ 104 @ 
argument  @ 26 @ argument  @ 27 @ 
name: BITCODE_RC  @ 9 @ name: BITCODE_RC  @ 9 @ 
argument  @ 98 @ argument  @ 158 @ 
name: type  @ 36 @ name: type  @ 40 @ 
operator: ->  @ 21 @ operator: ->  @ 21 @ 
block  @ 3 @ block  @ 4 @ 
return  @ 56 @ return  @ 98 @ 
name: decompress_R2004_section  @ 103 @ name: decompress_R2004_section  @ 168 @ 
expr  @ 76 @ expr  @ 125 @ 
expr  @ 93 @ expr  @ 143 @ 
operator: ->  @ 101 @ operator: ->  @ 165 @ 
operator: ->  @ 74 @ operator: ->  @ 123 @ 
name: LOG_INSANE  @ 98 @ name: LOG_INSANE  @ 158 @ 
condition  @ 41 @ condition  @ 46 @ 
condition  @ 87 @ condition  @ 136 @ 
operator: ->  @ 38 @ operator: ->  @ 43 @ 
operator: ->  @ 63 @ operator: ->  @ 104 @ 
operator: &&  @ 101 @ operator: &&  @ 166 @ 
expr  @ 66 @ expr  @ 108 @ 
argument_list  @ 86 @ argument_list  @ 135 @ 
name: max_decomp_size  @ 52 @ name: max_decomp_size  @ 92 @ 
if  @ 87 @ if  @ 136 @ 
argument  @ 86 @ argument  @ 135 @ 
name: info  @ 36 @ name: info  @ 41 @ 
expr  @ 41 @ expr  @ 46 @ 
name  @ 46 @ name  @ 74 @ 
index  @ 17 @ index  @ 17 @ 
condition  @ 13 @ condition  @ 13 @ 
if_stmt  @ 47 @ if_stmt  @ 75 @ 
block_content  @ 49 @ block_content  @ 77 @ 
expr  @ 11 @ expr  @ 11 @ 
macro  @ 30 @ macro  @ 32 @ 
block_content  @ 15 @ block_content  @ 15 @ 
argument_list  @ 76 @ argument_list  @ 125 @ 
if_stmt  @ 24 @ if_stmt  @ 24 @ 
name: sec_mask  @ 4 @ name: sec_mask  @ 110 @ 
comment: // check if compressed at all  @ 100 @ comment: // check if compressed at all  @ 164 @ 
expr_stmt  @ 49 @ expr_stmt  @ 77 @ 
expr  @ 13 @ expr  @ 13 @ 
argument  @ 89 @ argument  @ 139 @ 
name: LOG_INSANE  @ 98 @ name: LOG_INSANE  @ 160 @ 
argument  @ 86 @ argument  @ 135 @ 
operator: ->  @ 36 @ operator: ->  @ 40 @ 
if  @ 38 @ if  @ 43 @ 
name  @ 63 @ name  @ 104 @ 
expr  @ 50 @ expr  @ 192 @ 
operator: ->  @ 17 @ operator: ->  @ 17 @ 
name: tag  @ 87 @ name: tag  @ 136 @ 
expr  @ 60 @ expr  @ 101 @ 
name: num_sections  @ 46 @ name: num_sections  @ 74 @ 
argument  @ 76 @ argument  @ 125 @ 
expr  @ 36 @ expr  @ 41 @ 
name: num_sections  @ 49 @ name: num_sections  @ 79 @ 
operator: =  @ 66 @ operator: =  @ 108 @ 
expr  @ 15 @ expr  @ 15 @ 
operator: ==  @ 41 @ operator: ==  @ 46 @ 
name: address  @ 74 @ name: address  @ 123 @ 
name: i  @ 15 @ name: i  @ 15 @ 
comment: // fix double-free  @ 106 @ comment: // fix double-free  @ 173 @ 
expr  @ 55 @ expr  @ 95 @ 
operator: ||  @ 47 @ operator: ||  @ 75 @ 
decl_stmt  @ 8 @ decl_stmt  @ 8 @ 
if_stmt  @ 22 @ if_stmt  @ 22 @ 
continue  @ 72 @ continue  @ 121 @ 
name  @ 62 @ name  @ 103 @ 
name: version  @ 62 @ name: version  @ 103 @ 
argument  @ 95 @ argument  @ 145 @ 
operator: ->  @ 36 @ operator: ->  @ 41 @ 
block  @ 25 @ block  @ 26 @ 
literal: "Failed to find section_info[%u] with type %d"  @ 26 @ literal: "Failed to find section_info[%u] with type %d"  @ 27 @ 
operator: *  @ 101 @ operator: *  @ 166 @ 
name: info  @ 46 @ name: info  @ 74 @ 
block  @ 35 @ block  @ 37 @ 
name: num_sections  @ 42 @ name: num_sections  @ 48 @ 
argument_list  @ 30 @ argument_list  @ 32 @ 
name: j  @ 66 @ name: j  @ 108 @ 
break  @ 18 @ break  @ 18 @ 
expr  @ 52 @ expr  @ 92 @ 
operator: ->  @ 41 @ operator: ->  @ 46 @ 
block  @ 67 @ block  @ 109 @ 
name: info  @ 101 @ name: info  @ 166 @ 
condition  @ 82 @ condition  @ 131 @ 
literal: 2  @ 36 @ literal: 2  @ 41 @ 
operator: )  @ 89 @ operator: )  @ 139 @ 
name: name  @ 70 @ name: name  @ 113 @ 
name: size  @ 41 @ name: size  @ 46 @ 
name: LOG_INFO  @ 93 @ name: LOG_INFO  @ 143 @ 
operator: ->  @ 41 @ operator: ->  @ 47 @ 
argument  @ 52 @ argument  @ 92 @ 
operator: =  @ 61 @ operator: =  @ 102 @ 
name: decomp  @ 53 @ name: decomp  @ 93 @ 
argument  @ 76 @ argument  @ 125 @ 
argument  @ 70 @ argument  @ 113 @ 
block_content  @ 89 @ block_content  @ 138 @ 
operator: ->  @ 36 @ operator: ->  @ 40 @ 
name: num_sections  @ 55 @ name: num_sections  @ 86 @ 
name: k  @ 81 @ name: k  @ 130 @ 
name: i  @ 13 @ name: i  @ 13 @ 
if_stmt  @ 15 @ if_stmt  @ 15 @ 
expr  @ 42 @ expr  @ 48 @ 
name: max_decomp_size  @ 49 @ name: max_decomp_size  @ 79 @ 
name: bytes_left  @ 101 @ name: bytes_left  @ 165 @ 
expr  @ 36 @ expr  @ 41 @ 
control  @ 82 @ control  @ 131 @ 
if_stmt  @ 68 @ if_stmt  @ 111 @ 
operator: .  @ 15 @ operator: .  @ 15 @ 
expr  @ 52 @ expr  @ 92 @ 
type  @ 10 @ type  @ 10 @ 
operator: !  @ 68 @ operator: !  @ 111 @ 
expr  @ 61 @ expr  @ 102 @ 
name  @ 101 @ name  @ 166 @ 
name: DWG_ERR_OUTOFMEM  @ 56 @ name: DWG_ERR_OUTOFMEM  @ 98 @ 
name  @ 74 @ name  @ 123 @ 
expr  @ 49 @ expr  @ 79 @ 
name: j  @ 10 @ name: j  @ 10 @ 
name  @ 75 @ name  @ 124 @ 
name: es  @ 76 @ name: es  @ 125 @ 
if  @ 68 @ if  @ 111 @ 
type  @ 7 @ type  @ 7 @ 
name: info  @ 46 @ name: info  @ 74 @ 
operator: ==  @ 47 @ operator: ==  @ 75 @ 
comment: // index for writing info->max_decomp_size chunks  @ 71 @ comment: // index for writing info->max_decomp_size chunks  @ 120 @ 
expr  @ 38 @ expr  @ 43 @ 
operator: =  @ 21 @ operator: =  @ 21 @ 
literal: "] %s type %d with %d sections (%scompressed):\n"  @ 36 @ literal: "] %s type %d with %d sections (%scompressed):\n"  @ 39 @ 
operator: .  @ 76 @ operator: .  @ 125 @ 
block  @ 16 @ block  @ 16 @ 
name: calloc  @ 52 @ name: calloc  @ 92 @ 
name: dwg  @ 15 @ name: dwg  @ 15 @ 
expr_stmt  @ 61 @ expr_stmt  @ 102 @ 
literal: 0x2f000000  @ 47 @ literal: 0x2f000000  @ 75 @ 
expr  @ 70 @ expr  @ 113 @ 
name: dat  @ 63 @ name: dat  @ 104 @ 
name: sec_dat  @ 64 @ name: sec_dat  @ 105 @ 
comment: // offsetinfo->max_decomp_size, es.fields.data_size);  @ 103 @ comment: // offset  @ 169 @ 
name  @ 41 @ name  @ 46 @ 
literal: "Invalid section %s count or max decompression size. "  @ 49 @ literal: "Invalid section %s count or max decompression size. "  @ 77 @ 
argument_list  @ 26 @ argument_list  @ 27 @ 
incr  @ 66 @ incr  @ 108 @ 
name: Dwg_Section_Type  @ 2 @ name: Dwg_Section_Type  @ 3 @ 
operator: .  @ 89 @ operator: .  @ 139 @ 
literal: "Section Type: %u\n"  @ 95 @ literal: "Section Type:     %u\n"  @ 145 @ 
comment: // 790Mb  @ 47 @ comment: // 790Mb  @ 75 @ 
decl_stmt  @ 5 @ decl_stmt  @ 5 @ 
expr  @ 79 @ expr  @ 128 @ 
name: k  @ 82 @ name: k  @ 131 @ 
expr  @ 36 @ expr  @ 40 @ 
name: i  @ 74 @ name: i  @ 123 @ 
expr  @ 46 @ expr  @ 74 @ 
block  @ 29 @ block  @ 31 @ 
name: bit  @ 60 @ name: bit  @ 101 @ 
name: NULL  @ 21 @ name: NULL  @ 21 @ 
operator: .  @ 93 @ operator: .  @ 143 @ 
name: max_decomp_size  @ 101 @ name: max_decomp_size  @ 166 @ 
operator: ->  @ 60 @ operator: ->  @ 101 @ 
literal: 32  @ 76 @ literal: 32  @ 125 @ 
argument  @ 30 @ argument  @ 32 @ 
modifier: *  @ 2 @ modifier: *  @ 2 @ 
expr  @ 75 @ expr  @ 124 @ 
name: info  @ 66 @ name: info  @ 108 @ 
name  @ 46 @ name  @ 74 @ 
operator: =  @ 60 @ operator: =  @ 101 @ 
name: num_sections  @ 36 @ name: num_sections  @ 40 @ 
decl  @ 8 @ decl  @ 8 @ 
if_stmt  @ 38 @ if_stmt  @ 43 @ 
condition  @ 68 @ condition  @ 111 @ 
expr_stmt  @ 98 @ expr_stmt  @ 162 @ 
name: LOG_INSANE  @ 98 @ name: LOG_INSANE  @ 162 @ 
block_content  @ 26 @ block_content  @ 27 @ 
argument  @ 98 @ argument  @ 159 @ 
type  @ 4 @ type  @ 110 @ 
name: info  @ 41 @ name: info  @ 47 @ 
index  @ 83 @ index  @ 132 @ 
argument  @ 70 @ argument  @ 113 @ 
comment: // fixes double-free  @ 21 @ comment: // fixes double-free  @ 21 @ 
name  @ 70 @ name  @ 113 @ 
name: LOG_WARN  @ 26 @ name: LOG_WARN  @ 27 @ 
call  @ 55 @ call  @ 95 @ 
type  @ 11 @ type  @ 11 @ 
literal: 0  @ 61 @ literal: 0  @ 102 @ 
literal: "Sections: %u, Max size: %u"  @ 49 @ literal: "Sections: "  @ 78 @ 
name: info  @ 41 @ name: info  @ 46 @ 
operator: *  @ 52 @ operator: *  @ 92 @ 
condition  @ 15 @ condition  @ 15 @ 
index  @ 74 @ index  @ 123 @ 
name: k  @ 82 @ name: k  @ 131 @ 
block  @ 14 @ block  @ 14 @ 
name: bytes_left  @ 98 @ name: bytes_left  @ 162 @ 
operator: &&  @ 101 @ operator: &&  @ 165 @ 
argument  @ 26 @ argument  @ 27 @ 
expr_stmt  @ 46 @ expr_stmt  @ 74 @ 
literal: 8  @ 82 @ literal: 8  @ 131 @ 
index  @ 15 @ index  @ 15 @ 
if_stmt  @ 53 @ if_stmt  @ 93 @ 
literal: "Some section size out of bounds"  @ 117 @ literal: "Some section size or address out of bounds"  @ 189 @ 
name: i  @ 10 @ name: i  @ 10 @ 
for  @ 66 @ for  @ 108 @ 
operator: ->  @ 49 @ operator: ->  @ 79 @ 
name: char_data  @ 76 @ name: char_data  @ 125 @ 
name: Dwg_Section_Info  @ 7 @ name: Dwg_Section_Info  @ 7 @ 
argument  @ 86 @ argument  @ 135 @ 
expr  @ 58 @ expr  @ 100 @ 
expr  @ 89 @ expr  @ 138 @ 
return  @ 32 @ return  @ 28 @ 
literal: 2  @ 101 @ literal: 2  @ 165 @ 
operator: ->  @ 61 @ operator: ->  @ 102 @ 
name: type  @ 2 @ name: type  @ 3 @ 
name: es  @ 89 @ name: es  @ 139 @ 
name: LOG_WARN  @ 70 @ name: LOG_WARN  @ 113 @ 
decl  @ 7 @ decl  @ 7 @ 
name: BITCODE_RC  @ 52 @ name: BITCODE_RC  @ 92 @ 
condition  @ 47 @ condition  @ 75 @ 
name: compressed  @ 101 @ name: compressed  @ 165 @ 
operator: >  @ 47 @ operator: >  @ 75 @ 
operator: =  @ 17 @ operator: =  @ 17 @ 
name: es  @ 93 @ name: es  @ 143 @ 
operator: ==  @ 41 @ operator: ==  @ 47 @ 
condition  @ 24 @ condition  @ 24 @ 
name: name  @ 49 @ name: name  @ 79 @ 
expr  @ 82 @ expr  @ 131 @ 
expr  @ 71 @ expr  @ 120 @ 
name  @ 55 @ name  @ 86 @ 
name: version  @ 62 @ name: version  @ 103 @ 
call  @ 70 @ call  @ 113 @ 
type  @ 6 @ type  @ 6 @ 
operator: ==  @ 38 @ operator: ==  @ 43 @ 
expr  @ 70 @ expr  @ 113 @ 
name: i  @ 36 @ name: i  @ 40 @ 
decl  @ 2 @ decl  @ 2 @ 
literal: 1  @ 42 @ literal: 1  @ 49 @ 
operator: =  @ 74 @ operator: =  @ 123 @ 
condition  @ 101 @ condition  @ 165 @ 
literal: "Section Tag:0x%x\n"  @ 93 @ literal: "Section Tag:      0x%x\n"  @ 143 @ 
operator: =  @ 58 @ operator: =  @ 100 @ 
name  @ 87 @ name  @ 136 @ 
return  @ 50 @ return  @ 80 @ 
name: dat  @ 62 @ name: dat  @ 103 @ 
name: k  @ 82 @ name: k  @ 131 @ 
decl_stmt  @ 7 @ decl_stmt  @ 7 @ 
name: address  @ 74 @ name: address  @ 123 @ 
name: es  @ 8 @ name: es  @ 8 @ 
name: num_desc  @ 13 @ name: num_desc  @ 13 @ 
name  @ 36 @ name  @ 41 @ 
sizeof  @ 52 @ sizeof  @ 92 @ 
operator: ++  @ 66 @ operator: ++  @ 108 @ 
name: error  @ 103 @ name: error  @ 168 @ 
name: type  @ 24 @ name: type  @ 25 @ 
expr  @ 93 @ expr  @ 143 @ 
control  @ 66 @ control  @ 108 @ 
argument  @ 52 @ argument  @ 92 @ 
macro  @ 86 @ macro  @ 135 @ 
literal: "un"  @ 36 @ literal: "un"  @ 41 @ 
name: es  @ 83 @ name: es  @ 132 @ 
name: long_data  @ 83 @ name: long_data  @ 132 @ 
block_content  @ 42 @ block_content  @ 48 @ 
argument  @ 52 @ argument  @ 92 @ 
name: info  @ 17 @ name: info  @ 17 @ 
expr  @ 36 @ expr  @ 40 @ 
expr  @ 82 @ expr  @ 131 @ 
block  @ 54 @ block  @ 94 @ 
expr  @ 66 @ expr  @ 108 @ 
parameter  @ 2 @ parameter  @ 3 @ 
argument  @ 93 @ argument  @ 143 @ 
specifier: static  @ 1 @ specifier: static  @ 1 @ 
name: i  @ 13 @ name: i  @ 13 @ 
name: SECTION_REVHISTORY  @ 24 @ name: SECTION_REVHISTORY  @ 24 @ 
name: i  @ 66 @ name: i  @ 108 @ 
expr  @ 76 @ expr  @ 125 @ 
else  @ 34 @ else  @ 36 @ 
decl  @ 9 @ decl  @ 9 @ 
name: i  @ 70 @ name: i  @ 113 @ 
operator: =  @ 79 @ operator: =  @ 128 @ 
operator: <  @ 13 @ operator: <  @ 13 @ 
operator: =  @ 82 @ operator: =  @ 131 @ 
expr  @ 36 @ expr  @ 41 @ 
expr  @ 36 @ expr  @ 38 @ 
decl_stmt  @ 10 @ decl_stmt  @ 10 @ 
comment: // bug in Teigha with Template, with num_sections=0  @ 42 @ comment: // bug in Teigha with Template, with num_sections=0  @ 49 @ 
comment: // this is the number of bytes that is read in decompress_R2004_section// (+ 2bytes)LOG_INFO ("Data size:0x%x/%u\n", (unsigned)es.fields.data_size,(unsigned)es.fields.data_size)LOG_INFO ("Comp data size: 0x%x\n", (unsigned)es.fields.section_size)LOG_TRACE ("StartOffset:0x%x\n", (unsigned)es.fields.address)LOG_HANDLE ("Unknown:0x%x\n", (unsigned)es.fields.unknown)LOG_HANDLE ("Checksum1:0x%x\n", (unsigned)es.fields.checksum_1)LOG_HANDLE ("Checksum2:0x%x\n", (unsigned)es.fields.checksum_2)LOG_TRACE ("Section start:%lu\n\n", dat->byte);  @ 95 @ comment: // this is the number of bytes that is read in decompress_R2004_section  @ 146 @ 
expr  @ 62 @ expr  @ 103 @ 
call  @ 93 @ call  @ 143 @ 
expr  @ 32 @ expr  @ 28 @ 
operator: ->  @ 64 @ operator: ->  @ 105 @ 
name: max_decomp_size  @ 46 @ name: max_decomp_size  @ 74 @ 
expr  @ 66 @ expr  @ 108 @ 
argument  @ 36 @ argument  @ 40 @ 
name  @ 42 @ name  @ 48 @ 
argument  @ 89 @ argument  @ 138 @ 
argument  @ 95 @ argument  @ 145 @ 
then  @ 36 @ then  @ 41 @ 
operator: &&  @ 41 @ operator: &&  @ 46 @ 
name: sec_dat  @ 62 @ name: sec_dat  @ 103 @ 
expr  @ 15 @ expr  @ 15 @ 
operator: ->  @ 49 @ operator: ->  @ 79 @ 
expr  @ 22 @ expr  @ 22 @ 
decl  @ 81 @ decl  @ 130 @ 
argument  @ 98 @ argument  @ 159 @ 
argument  @ 30 @ argument  @ 32 @ 
name: DWG_ERR_SECTIONNOTFOUND  @ 32 @ name: DWG_ERR_SECTIONNOTFOUND  @ 28 @ 
operator: ->  @ 15 @ operator: ->  @ 15 @ 
call  @ 52 @ call  @ 92 @ 
literal: 0  @ 47 @ literal: 0  @ 75 @ 
else  @ 36 @ else  @ 41 @ 
expr  @ 55 @ expr  @ 95 @ 
name: DWG_ERR_INVALIDDWG  @ 50 @ name: DWG_ERR_INVALIDDWG  @ 192 @ 
name  @ 83 @ name  @ 132 @ 
operator: ->  @ 63 @ operator: ->  @ 104 @ 
condition  @ 22 @ condition  @ 22 @ 
expr_stmt  @ 71 @ expr_stmt  @ 120 @ 
literal: 0  @ 60 @ literal: 0  @ 101 @ 
expr  @ 83 @ expr  @ 132 @ 
literal: 0  @ 13 @ literal: 0  @ 13 @ 
literal: 0  @ 38 @ literal: 0  @ 43 @ 
name: j  @ 101 @ name: j  @ 166 @ 
name: uint32_t  @ 4 @ name: uint32_t  @ 110 @ 
expr  @ 76 @ expr  @ 125 @ 
expr  @ 55 @ expr  @ 86 @ 
expr  @ 68 @ expr  @ 111 @ 
else  @ 43 @ else  @ 66 @ 
block_content  @ 4 @ block_content  @ 5 @ 
name: type  @ 24 @ name: type  @ 24 @ 
name: SECTION_OBJFREESPACE  @ 24 @ name: SECTION_OBJFREESPACE  @ 25 @ 
name: address  @ 79 @ name: address  @ 128 @ 
init  @ 66 @ init  @ 108 @ 
if_stmt  @ 41 @ if_stmt  @ 46 @ 
argument  @ 70 @ argument  @ 113 @ 
name: info  @ 36 @ name: info  @ 40 @ 
block_content  @ 36 @ block_content  @ 38 @ 
literal: 1  @ 41 @ literal: 1  @ 47 @ 
operator: =  @ 46 @ operator: =  @ 74 @ 
name: header  @ 15 @ name: header  @ 15 @ 
block  @ 83 @ block  @ 132 @ 
decl  @ 6 @ decl  @ 6 @ 
name: FORMAT_BL  @ 36 @ name: FORMAT_BL  @ 38 @ 
operator: ==  @ 15 @ operator: ==  @ 15 @ 
operator: >=  @ 41 @ operator: >=  @ 46 @ 
modifier: *  @ 2 @ modifier: *  @ 3 @ 
expr_stmt  @ 64 @ expr_stmt  @ 105 @ 
operator: &&  @ 41 @ operator: &&  @ 47 @ 
expr_stmt  @ 17 @ expr_stmt  @ 17 @ 
expr  @ 89 @ expr  @ 139 @ 
name: fields  @ 87 @ name: fields  @ 136 @ 
literal: "info[%d]->max_decomp_size: %lu (0x%lx)\n"  @ 98 @ literal: "info[%d]->max_decomp_size: %"  @ 158 @ 
operator: --  @ 71 @ operator: --  @ 120 @ 
operator: .  @ 83 @ operator: .  @ 132 @ 
name: type  @ 24 @ name: type  @ 24 @ 
name: LOG_ERROR  @ 49 @ name: LOG_ERROR  @ 77 @ 
operator: ->  @ 13 @ operator: ->  @ 13 @ 
argument  @ 36 @ argument  @ 41 @ 
name: dat  @ 2 @ name: dat  @ 2 @ 
decl  @ 10 @ decl  @ 10 @ 
decl  @ 2 @ decl  @ 2 @ 
name  @ 41 @ name  @ 47 @ 
argument_list  @ 93 @ argument_list  @ 143 @ 
literal: 0x4164536b  @ 79 @ literal: 0x4164536b  @ 128 @ 
operator: ->  @ 66 @ operator: ->  @ 108 @ 
if  @ 22 @ if  @ 22 @ 
expr  @ 83 @ expr  @ 132 @ 
expr  @ 63 @ expr  @ 104 @ 
name  @ 64 @ name  @ 105 @ 
modifier: *  @ 2 @ modifier: *  @ 2 @ 
argument  @ 30 @ argument  @ 32 @ 
name: byte  @ 61 @ name: byte  @ 102 @ 
literal: 0x4163043b  @ 87 @ literal: 0x4163043b  @ 136 @ 
block  @ 69 @ block  @ 112 @ 
literal: 0  @ 44 @ literal: 0  @ 67 @ 
expr_stmt  @ 70 @ expr_stmt  @ 113 @ 
argument_list  @ 52 @ argument_list  @ 92 @ 
name: NULL  @ 7 @ name: NULL  @ 7 @ 
block  @ 80 @ block  @ 129 @ 
literal: "\nFound section_info["  @ 36 @ literal: "\nFound section_info["  @ 38 @ 
decl  @ 2 @ decl  @ 3 @ 
expr  @ 66 @ expr  @ 108 @ 
name: LOG_TRACE  @ 30 @ name: LOG_TRACE  @ 32 @ 
expr  @ 82 @ expr  @ 131 @ 
operator: =  @ 64 @ operator: =  @ 105 @ 
expr  @ 17 @ expr  @ 17 @ 
argument_list  @ 36 @ argument_list  @ 38 @ 
name: Bit_Chain  @ 2 @ name: Bit_Chain  @ 2 @ 
argument_list  @ 49 @ argument_list  @ 77 @ 
literal: ""  @ 36 @ literal: ""  @ 41 @ 
name: i  @ 66 @ name: i  @ 108 @ 
expr  @ 36 @ expr  @ 40 @ 
type  @ 2 @ type  @ 2 @ 
name: long  @ 6 @ name: long  @ 6 @ 
name: dwg  @ 17 @ name: dwg  @ 17 @ 
expr  @ 13 @ expr  @ 13 @ 
name: unsigned  @ 89 @ name: unsigned  @ 139 @ 
argument  @ 98 @ argument  @ 158 @ 
literal: 0  @ 115 @ literal: 0  @ 185 @ 
block  @ 92 @ block  @ 142 @ 
name: from_version  @ 63 @ name: from_version  @ 104 @ 
name: sec_dat  @ 61 @ name: sec_dat  @ 102 @ 
unit  @ 1 @ unit  @ 1 @ 
name: fixedtype  @ 15 @ name: fixedtype  @ 15 @ 
name  @ 36 @ name  @ 40 @ 
name  @ 93 @ name  @ 143 @ 
name: byte  @ 75 @ name: byte  @ 124 @ 
control  @ 13 @ control  @ 13 @ 
operator: =  @ 52 @ operator: =  @ 92 @ 
name: info  @ 74 @ name: info  @ 123 @ 
name: int  @ 81 @ name: int  @ 130 @ 
operator: &&  @ 24 @ operator: &&  @ 24 @ 
expr  @ 49 @ expr  @ 77 @ 
literal: 0  @ 101 @ literal: 0  @ 165 @ 
ternary  @ 36 @ ternary  @ 41 @ 
name: header  @ 17 @ name: header  @ 17 @ 
name: chain  @ 21 @ name: chain  @ 21 @ 
expr  @ 93 @ expr  @ 143 @ 
name: from_version  @ 63 @ name: from_version  @ 104 @ 
expr_stmt  @ 42 @ expr_stmt  @ 48 @ 
name: info  @ 49 @ name: info  @ 79 @ 
name: info  @ 68 @ name: info  @ 111 @ 
name: compressed  @ 36 @ name: compressed  @ 41 @ 
block_content  @ 41 @ block_content  @ 46 @ 
decl  @ 2 @ decl  @ 3 @ 
expr  @ 36 @ expr  @ 40 @ 
name: info  @ 42 @ name: info  @ 48 @ 
name: dwg  @ 13 @ name: dwg  @ 13 @ 
argument  @ 49 @ argument  @ 79 @ 
decl  @ 4 @ decl  @ 110 @ 
block  @ 88 @ block  @ 137 @ 
if_stmt  @ 87 @ if_stmt  @ 136 @ 
decl  @ 11 @ decl  @ 11 @ 
type  @ 2 @ type  @ 2 @ 
expr  @ 70 @ expr  @ 113 @ 
argument  @ 98 @ argument  @ 161 @ 
init  @ 13 @ init  @ 13 @ 
type  @ 9 @ type  @ 9 @ 
name: sections  @ 74 @ name: sections  @ 123 @ 
condition  @ 36 @ condition  @ 41 @ 
expr  @ 87 @ expr  @ 136 @ 
name: sec_mask  @ 79 @ name: sec_mask  @ 128 @ 
if  @ 24 @ if  @ 24 @ 
operator: ->  @ 75 @ operator: ->  @ 124 @ 
decl_stmt  @ 9 @ decl_stmt  @ 9 @ 
name  @ 49 @ name  @ 79 @ 
decl_stmt  @ 11 @ decl_stmt  @ 11 @ 
expr_stmt  @ 76 @ expr_stmt  @ 125 @ 
argument  @ 98 @ argument  @ 162 @ 
operator: <  @ 24 @ operator: <  @ 24 @ 
literal: 2  @ 115 @ literal: 2  @ 185 @ 
name  @ 13 @ name  @ 13 @ 
argument  @ 98 @ argument  @ 162 @ 
operator: !  @ 53 @ operator: !  @ 93 @ 
operator: )  @ 52 @ operator: )  @ 92 @ 
operator: &&  @ 24 @ operator: &&  @ 25 @ 
argument  @ 86 @ argument  @ 135 @ 
literal: "=== Section %s (%u) @%u ===\n"  @ 86 @ literal: "=== Section %s (%u) @%u ===\n"  @ 135 @ 
modifier: *  @ 9 @ modifier: *  @ 9 @ 
operator: =  @ 13 @ operator: =  @ 13 @ 
if  @ 41 @ if  @ 46 @ 
block_content  @ 81 @ block_content  @ 130 @ 
name: name  @ 36 @ name: name  @ 40 @ 
expr_stmt  @ 52 @ expr_stmt  @ 92 @ 
function  @ 1 @ function  @ 1 @ 
name: info  @ 22 @ name: info  @ 22 @ 
expr  @ 36 @ expr  @ 41 @ 
argument  @ 93 @ argument  @ 143 @ 
expr  @ 89 @ expr  @ 138 @ 
call  @ 98 @ call  @ 162 @ 
expr  @ 7 @ expr  @ 7 @ 
call  @ 89 @ call  @ 138 @ 
argument  @ 76 @ argument  @ 125 @ 
name: LOG_WARN  @ 89 @ name: LOG_WARN  @ 138 @ 
name: num_sections  @ 66 @ name: num_sections  @ 108 @ 
name: Bit_Chain  @ 2 @ name: Bit_Chain  @ 3 @ 
call  @ 76 @ call  @ 125 @ 
name: info  @ 49 @ name: info  @ 79 @ 
expr  @ 74 @ expr  @ 123 @ 
name: j  @ 66 @ name: j  @ 108 @ 
incr  @ 13 @ incr  @ 13 @ 
name: section_infohdr  @ 13 @ name: section_infohdr  @ 13 @ 
name: max_decomp_size  @ 101 @ name: max_decomp_size  @ 166 @ 
decl_stmt  @ 81 @ decl_stmt  @ 130 @ 
condition  @ 66 @ condition  @ 108 @ 
macro  @ 98 @ macro  @ 160 @ 
name: decomp  @ 64 @ name: decomp  @ 105 @ 
expr  @ 76 @ expr  @ 125 @ 
expr  @ 98 @ expr  @ 162 @ 
block_content  @ 55 @ block_content  @ 95 @ 
expr  @ 49 @ expr  @ 77 @ 
block_content  @ 68 @ block_content  @ 110 @ 
argument  @ 98 @ argument  @ 161 @ 
operator: =  @ 75 @ operator: =  @ 124 @ 
operator: ->  @ 46 @ operator: ->  @ 74 @ 
name: info  @ 13 @ name: info  @ 13 @ 
comment: // GH #126 part 4  @ 97 @ comment: // GH #126 part 4  @ 157 @ 
decl  @ 5 @ decl  @ 5 @ 
type  @ 81 @ type  @ 130 @ 
operator: <  @ 82 @ operator: <  @ 131 @ 
expr  @ 13 @ expr  @ 13 @ 
operator: *  @ 46 @ operator: *  @ 74 @ 
block  @ 39 @ block  @ 44 @ 
argument_list  @ 52 @ argument_list  @ 92 @ 
operator: !  @ 22 @ operator: !  @ 22 @ 

