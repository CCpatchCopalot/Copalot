{
    "testcase": {
        "file45": {
            "match_message": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "Edit": "delete",
                        "L1": "203 -> 160",
                        "L2": "203 -> 160",
                        "debug": {
                            "runtime info": "True,{'state': 'success', 'type': 'src:struct', 'info': [], 'ast_patch': \"StkId stack_last;/* last free slot in the stack */StkId stack;/* stack base */UpVal *openupval;/* list of open upvalues in this stack */GCObject *gclist;struct lua_State *twups;/* list of threads with open upvalues */struct lua_longjmp *errorJmp;/* current error recover point */CallInfo base_ci;/* CallInfo for first level (C calling Lua) */volatile lua_Hook hook;ptrdiff_t errfunc;/* current error handling function (stack index) */l_uint32 nCcalls;/* number of allowed nested C calls - 'nci' */int oldpc;/* last pc traced */\"}",
                            "verify location": "-1",
                            "output location": "160",
                            "verify result": "False"
                        },
                        "type": "src:struct",
                        "raw_match_info": {
                            "state": "success",
                            "type": "src:struct",
                            "info": [],
                            "ast_patch": "StkId stack_last;/* last free slot in the stack */StkId stack;/* stack base */UpVal *openupval;/* list of open upvalues in this stack */GCObject *gclist;struct lua_State *twups;/* list of threads with open upvalues */struct lua_longjmp *errorJmp;/* current error recover point */CallInfo base_ci;/* CallInfo for first level (C calling Lua) */volatile lua_Hook hook;ptrdiff_t errfunc;/* current error handling function (stack index) */l_uint32 nCcalls;/* number of allowed nested C calls - 'nci' */int oldpc;/* last pc traced */"
                        }
                    },
                    "Seg_1": {
                        "Edit": "add",
                        "L1": "213 -> 159",
                        "L2": "214 -> 159",
                        "debug": {
                            "runtime info": "True,{'state': 'success', 'type': 'src:struct', 'info': [], 'ast_patch': \"StkId stack_last;/* last free slot in the stack */StkId stack;/* stack base */UpVal *openupval;/* list of open upvalues in this stack */GCObject *gclist;struct lua_State *twups;/* list of threads with open upvalues */struct lua_longjmp *errorJmp;/* current error recover point */CallInfo base_ci;/* CallInfo for first level (C calling Lua) */volatile lua_Hook hook;ptrdiff_t errfunc;/* current error handling function (stack index) */l_uint32 nCcalls;/* number of allowed nested C calls - 'nci' */int oldpc;/* last pc traced */\"}",
                            "verify location": "-1",
                            "output location": "159",
                            "verify result": "False"
                        },
                        "type": "src:struct",
                        "raw_match_info": {
                            "state": "success",
                            "type": "src:struct",
                            "info": [],
                            "ast_patch": "StkId stack_last;/* last free slot in the stack */StkId stack;/* stack base */UpVal *openupval;/* list of open upvalues in this stack */GCObject *gclist;struct lua_State *twups;/* list of threads with open upvalues */struct lua_longjmp *errorJmp;/* current error recover point */CallInfo base_ci;/* CallInfo for first level (C calling Lua) */volatile lua_Hook hook;ptrdiff_t errfunc;/* current error handling function (stack index) */l_uint32 nCcalls;/* number of allowed nested C calls - 'nci' */int oldpc;/* last pc traced */"
                        }
                    }
                }
            },
            "verify_message": {},
            "prepare_info": [
                [
                    "Seg_1",
                    {
                        "Edit": "add",
                        "add_location": 159,
                        "add_hunk": [
                            "  int oldpc;  /* last pc traced */\n"
                        ]
                    }
                ],
                [
                    "Seg_0",
                    {
                        "Edit": "delete",
                        "delete_location": [
                            160,
                            160
                        ],
                        "delete_hunk": [
                            "  const Instruction *oldpc;  /* last pc traced */\n"
                        ]
                    }
                ]
            ],
            "semanic_check": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "type": "out func",
                        "state": "fail",
                        "info": "local variable 'pa_add_hunk' referenced before assignment"
                    },
                    "Seg_1": {
                        "type": "out func",
                        "state": "success",
                        "info": "src:struct"
                    }
                }
            },
            "verify_patch": null,
            "patch_types": [
                "change_type"
            ]
        }
    }
}