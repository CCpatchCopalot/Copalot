condition  @ 93 @ condition  @ 99 @ 
block_content  @ 45 @ block_content  @ 46 @ 
name  @ 19 @ name  @ 20 @ 
operator: &  @ 39 @ operator: &  @ 40 @ 
name: u  @ 103 @ name: u  @ 106 @ 
operator: ==  @ 38 @ operator: ==  @ 39 @ 
name: compact  @ 98 @ name: compact  @ 102 @ 
decl_stmt  @ 5 @ decl_stmt  @ 6 @ 
operator: ->  @ 74 @ operator: ->  @ 80 @ 
argument  @ 71 @ argument  @ 77 @ 
macro  @ 16 @ macro  @ 17 @ 
name: H5D_CHUNKED  @ 64 @ name: H5D_CHUNKED  @ 65 @ 
name: mesg  @ 15 @ name: mesg  @ 16 @ 
name: u  @ 80 @ name: u  @ 86 @ 
operator: (  @ 81 @ operator: (  @ 87 @ 
name: u  @ 83 @ name: u  @ 89 @ 
name: HDassert  @ 11 @ name: HDassert  @ 12 @ 
name: ndims  @ 69 @ name: ndims  @ 75 @ 
function  @ 1 @ function  @ 1 @ 
name: mesg  @ 81 @ name: mesg  @ 87 @ 
argument  @ 39 @ argument  @ 40 @ 
name: mesg  @ 148 @ name: mesg  @ 141 @ 
argument  @ 101 @ argument  @ 104 @ 
operator: ->  @ 44 @ operator: ->  @ 45 @ 
name: compact  @ 81 @ name: compact  @ 87 @ 
name: u  @ 75 @ name: u  @ 81 @ 
name  @ 102 @ name  @ 105 @ 
condition  @ 64 @ condition  @ 65 @ 
name: dim  @ 75 @ name: dim  @ 81 @ 
expr  @ 70 @ expr  @ 76 @ 
incr  @ 70 @ incr  @ 76 @ 
expr  @ 74 @ expr  @ 80 @ 
block  @ 28 @ block  @ 29 @ 
condition  @ 142 @ condition  @ 135 @ 
for  @ 74 @ for  @ 80 @ 
expr  @ 118 @ expr  @ 118 @ 
operator: <  @ 74 @ operator: <  @ 80 @ 
name: mesg  @ 48 @ name: mesg  @ 49 @ 
name: contig  @ 112 @ name: contig  @ 114 @ 
operator: .  @ 112 @ operator: .  @ 114 @ 
name: mesg  @ 100 @ name: mesg  @ 103 @ 
comment: /* Interpret the rest of the message according to the layout class */  @ 92 @ comment: /* Interpret the rest of the message according to the layout class */  @ 98 @ 
argument  @ 57 @ argument  @ 58 @ 
condition  @ 98 @ condition  @ 102 @ 
name: buf  @ 102 @ name: buf  @ 105 @ 
call  @ 96 @ call  @ 101 @ 
operator: .  @ 74 @ operator: .  @ 80 @ 
name: storage  @ 53 @ name: storage  @ 54 @ 
operator: >  @ 27 @ operator: >  @ 28 @ 
operator: ->  @ 96 @ operator: ->  @ 101 @ 
call  @ 134 @ call  @ 132 @ 
name: ops  @ 42 @ name: ops  @ 43 @ 
incr  @ 133 @ incr  @ 131 @ 
comment: /* (Only "btree" indexing type supported with v3 of message format) */  @ 146 @ comment: /* (Only "btree" indexing type supported with v3 of message format) */  @ 139 @ 
modifier: *  @ 1 @ modifier: *  @ 2 @ 
name: ndims  @ 142 @ name: ndims  @ 135 @ 
name: mesg  @ 84 @ name: mesg  @ 90 @ 
name: H5D_layout_t  @ 90 @ name: H5D_layout_t  @ 96 @ 
name: chunk  @ 52 @ name: chunk  @ 53 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
operator: (  @ 100 @ operator: (  @ 103 @ 
name: H5D_CHUNK_IDX_BTREE  @ 52 @ name: H5D_CHUNK_BTREE  @ 53 @ 
expr_stmt  @ 96 @ expr_stmt  @ 101 @ 
name: compact  @ 83 @ name: compact  @ 89 @ 
name: mesg  @ 39 @ name: mesg  @ 40 @ 
comment: /* Set the chunk operations */  @ 145 @ comment: /* Set the chunk operations */  @ 138 @ 
name: mesg  @ 127 @ name: mesg  @ 123 @ 
if_stmt  @ 98 @ if_stmt  @ 102 @ 
argument_list  @ 100 @ argument_list  @ 103 @ 
name  @ 44 @ name  @ 45 @ 
name: chunk  @ 75 @ name: chunk  @ 81 @ 
argument  @ 71 @ argument  @ 77 @ 
init  @ 142 @ init  @ 135 @ 
case  @ 110 @ case  @ 113 @ 
name: H5FL_CALLOC  @ 15 @ name: H5FL_CALLOC  @ 16 @ 
operator: .  @ 130 @ operator: .  @ 128 @ 
incr  @ 74 @ incr  @ 80 @ 
name: H5O_LAYOUT_VERSION_1  @ 19 @ name: H5O_LAYOUT_VERSION_1  @ 20 @ 
operator: .  @ 133 @ operator: .  @ 131 @ 
expr  @ 79 @ expr  @ 85 @ 
operator: ,  @ 142 @ operator: ,  @ 135 @ 
name: mesg  @ 19 @ name: mesg  @ 20 @ 
expr  @ 115 @ expr  @ 115 @ 
argument  @ 102 @ argument  @ 105 @ 
name: chunk  @ 134 @ name: chunk  @ 132 @ 
if_stmt  @ 64 @ if_stmt  @ 65 @ 
name: ndims  @ 70 @ name: ndims  @ 76 @ 
operator: ->  @ 127 @ operator: ->  @ 123 @ 
comment: /* (Only "btree" indexing type currently supported in this version) */  @ 51 @ comment: /* (Only "btree" indexing type currently supported in this version) */  @ 52 @ 
name  @ 103 @ name  @ 106 @ 
name: size  @ 115 @ name: size  @ 115 @ 
literal: "dimensionality is too large"  @ 159 @ literal: "dimensionality is too large"  @ 29 @ 
name: p  @ 66 @ name: p  @ 72 @ 
name: type  @ 38 @ name: type  @ 39 @ 
name  @ 28 @ name  @ 32 @ 
operator: ==  @ 29 @ operator: ==  @ 33 @ 
operator: ||  @ 29 @ operator: ||  @ 33 @ 
expr  @ 121 @ expr  @ 121 @ 
operator: =  @ 48 @ operator: =  @ 49 @ 
operator: *  @ 28 @ operator: *  @ 32 @ 
block_content  @ 134 @ block_content  @ 132 @ 
argument  @ 134 @ argument  @ 132 @ 
condition  @ 81 @ condition  @ 87 @ 
parameter  @ 1 @ parameter  @ 3 @ 
operator: ->  @ 102 @ operator: ->  @ 105 @ 
argument  @ 12 @ argument  @ 13 @ 
name  @ 93 @ name  @ 99 @ 
operator: ->  @ 93 @ operator: ->  @ 99 @ 
name: p  @ 102 @ name: p  @ 105 @ 
expr  @ 29 @ expr  @ 33 @ 
type  @ 1 @ type  @ 1 @ 
expr  @ 79 @ expr  @ 85 @ 
operator: .  @ 79 @ operator: .  @ 85 @ 
operator: *  @ 26 @ operator: *  @ 27 @ 
name: u  @ 102 @ name: u  @ 105 @ 
name  @ 143 @ name  @ 136 @ 
name: idx_type  @ 52 @ name: idx_type  @ 53 @ 
name: mesg  @ 42 @ name: mesg  @ 43 @ 
expr_stmt  @ 148 @ expr_stmt  @ 141 @ 
name: unsigned  @ 23 @ name: unsigned  @ 24 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
name: size  @ 96 @ name: size  @ 101 @ 
name: H5D_COMPACT  @ 78 @ name: H5D_COMPACT  @ 84 @ 
name: mesg  @ 71 @ name: mesg  @ 77 @ 
operator: ==  @ 15 @ operator: ==  @ 16 @ 
if_stmt  @ 38 @ if_stmt  @ 39 @ 
name: u  @ 98 @ name: u  @ 102 @ 
name: chunk  @ 133 @ name: chunk  @ 131 @ 
call  @ 45 @ call  @ 46 @ 
operator: ,  @ 74 @ operator: ,  @ 80 @ 
operator: =  @ 81 @ operator: =  @ 87 @ 
comment: /* Address */  @ 37 @ comment: /* Address */  @ 38 @ 
name: mesg  @ 142 @ name: mesg  @ 135 @ 
name  @ 81 @ name  @ 87 @ 
name: compact  @ 102 @ name: compact  @ 105 @ 
argument_list  @ 129 @ argument_list  @ 125 @ 
name: NULL  @ 100 @ name: NULL  @ 103 @ 
name  @ 52 @ name  @ 53 @ 
operator: .  @ 80 @ operator: .  @ 86 @ 
index  @ 143 @ index  @ 136 @ 
name: mesg  @ 115 @ name: mesg  @ 115 @ 
if  @ 80 @ if  @ 86 @ 
name: HDmemcpy  @ 102 @ name: HDmemcpy  @ 105 @ 
name: HDassert  @ 57 @ name: HDassert  @ 58 @ 
operator: .  @ 147 @ operator: .  @ 140 @ 
block_content  @ 3 @ block_content  @ 5 @ 
name: compact  @ 84 @ name: compact  @ 90 @ 
expr  @ 27 @ expr  @ 28 @ 
name: storage  @ 148 @ name: storage  @ 141 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
name: u  @ 142 @ name: u  @ 135 @ 
argument_list  @ 11 @ argument_list  @ 12 @ 
operator: ->  @ 64 @ operator: ->  @ 65 @ 
expr_stmt  @ 35 @ expr_stmt  @ 36 @ 
expr_stmt  @ 57 @ expr_stmt  @ 58 @ 
argument  @ 112 @ argument  @ 114 @ 
argument  @ 39 @ argument  @ 40 @ 
block_content  @ 75 @ block_content  @ 81 @ 
comment: /* Set the layout operations */  @ 47 @ comment: /* Set the layout operations */  @ 48 @ 
expr_stmt  @ 60 @ expr_stmt  @ 61 @ 
name  @ 18 @ name  @ 19 @ 
operator: (  @ 130 @ operator: (  @ 128 @ 
expr  @ 130 @ expr  @ 128 @ 
name: idx_addr  @ 45 @ name: idx_addr  @ 46 @ 
operator: ->  @ 128 @ operator: ->  @ 124 @ 
block  @ 68 @ block  @ 74 @ 
decl_stmt  @ 8 @ decl_stmt  @ 9 @ 
comment: /* Reserved bytes */  @ 34 @ comment: /* Reserved bytes */  @ 35 @ 
macro  @ 239 @ macro  @ 148 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
operator: +=  @ 35 @ operator: +=  @ 36 @ 
name: f  @ 115 @ name: f  @ 115 @ 
name: mesg  @ 83 @ name: mesg  @ 89 @ 
operator: .  @ 79 @ operator: .  @ 85 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
comment: /* Chunk dimensions */  @ 132 @ comment: /* Chunk dimensions */  @ 130 @ 
name: H5D_LOPS_CHUNK  @ 233 @ name: H5D_LOPS_CHUNK  @ 144 @ 
name: storage  @ 130 @ name: storage  @ 128 @ 
for  @ 133 @ for  @ 131 @ 
name: size  @ 74 @ name: size  @ 80 @ 
operator: .  @ 84 @ operator: .  @ 90 @ 
operator: .  @ 75 @ operator: .  @ 81 @ 
condition  @ 128 @ condition  @ 124 @ 
operator: ->  @ 29 @ operator: ->  @ 33 @ 
name: H5O_LAYOUT_VERSION_4  @ 19 @ name: H5O_LAYOUT_VERSION_3  @ 20 @ 
name: chunk  @ 71 @ name: chunk  @ 77 @ 
block_content  @ 124 @ block_content  @ 100 @ 
argument  @ 11 @ argument  @ 12 @ 
name: f  @ 1 @ name: f  @ 2 @ 
expr  @ 147 @ expr  @ 140 @ 
operator: ->  @ 75 @ operator: ->  @ 81 @ 
block_content  @ 57 @ block_content  @ 58 @ 
type  @ 8 @ type  @ 9 @ 
operator: ->  @ 130 @ operator: ->  @ 128 @ 
expr  @ 26 @ expr  @ 27 @ 
specifier: static  @ 1 @ specifier: static  @ 1 @ 
name: chunk  @ 53 @ name: chunk  @ 54 @ 
expr  @ 15 @ expr  @ 16 @ 
expr_stmt  @ 45 @ expr_stmt  @ 46 @ 
for  @ 142 @ for  @ 135 @ 
if  @ 15 @ if  @ 16 @ 
name: u  @ 70 @ name: u  @ 76 @ 
expr_stmt  @ 75 @ expr_stmt  @ 81 @ 
name: u  @ 142 @ name: u  @ 135 @ 
name: u  @ 75 @ name: u  @ 81 @ 
operator: ->  @ 57 @ operator: ->  @ 58 @ 
else  @ 68 @ else  @ 74 @ 
name: u  @ 52 @ name: u  @ 53 @ 
name: compact  @ 80 @ name: compact  @ 86 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
comment: /* Layout&storage class */  @ 89 @ comment: /* Layout class */  @ 95 @ 
name: size  @ 100 @ name: size  @ 103 @ 
name: buf  @ 83 @ name: buf  @ 89 @ 
operator: .  @ 79 @ operator: .  @ 85 @ 
operator: .  @ 130 @ operator: .  @ 128 @ 
operator: &  @ 112 @ operator: &  @ 114 @ 
expr  @ 142 @ expr  @ 135 @ 
operator: ++  @ 18 @ operator: ++  @ 19 @ 
name: compact  @ 79 @ name: compact  @ 85 @ 
expr  @ 96 @ expr  @ 101 @ 
expr  @ 74 @ expr  @ 80 @ 
name: mesg  @ 102 @ name: mesg  @ 105 @ 
name: H5O_LAYOUT_NDIMS  @ 27 @ name: H5O_LAYOUT_NDIMS  @ 28 @ 
macro  @ 129 @ macro  @ 125 @ 
operator: .  @ 148 @ operator: .  @ 141 @ 
name: UINT32DECODE  @ 134 @ name: UINT32DECODE  @ 132 @ 
name: HGOTO_ERROR  @ 101 @ name: HGOTO_ERROR  @ 104 @ 
operator: .  @ 71 @ operator: .  @ 77 @ 
name: u  @ 71 @ name: u  @ 77 @ 
operator: ->  @ 115 @ operator: ->  @ 115 @ 
operator: <  @ 70 @ operator: <  @ 76 @ 
argument  @ 129 @ argument  @ 125 @ 
name  @ 130 @ name  @ 128 @ 
expr  @ 127 @ expr  @ 123 @ 
argument_list  @ 101 @ argument_list  @ 104 @ 
expr  @ 39 @ expr  @ 40 @ 
block  @ 44 @ block  @ 45 @ 
name: HGOTO_ERROR  @ 16 @ name: HGOTO_ERROR  @ 17 @ 
name: storage  @ 102 @ name: storage  @ 105 @ 
operator: ->  @ 29 @ operator: ->  @ 33 @ 
type  @ 5 @ type  @ 6 @ 
argument_list  @ 96 @ argument_list  @ 101 @ 
expr  @ 96 @ expr  @ 101 @ 
name: mesg  @ 147 @ name: mesg  @ 140 @ 
expr  @ 83 @ expr  @ 89 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
comment: /* Set the layout operations */  @ 106 @ comment: /* Set the layout operations */  @ 109 @ 
argument  @ 79 @ argument  @ 85 @ 
expr  @ 103 @ expr  @ 106 @ 
operator: .  @ 45 @ operator: .  @ 46 @ 
comment: /* B-tree address */  @ 129 @ comment: /* B-tree address */  @ 127 @ 
operator: =  @ 28 @ operator: =  @ 32 @ 
operator: *=  @ 143 @ operator: *=  @ 136 @ 
if_stmt  @ 78 @ if_stmt  @ 84 @ 
operator: ->  @ 19 @ operator: ->  @ 20 @ 
comment: /* end if */  @ 86 @ comment: /* end if */  @ 92 @ 
block  @ 22 @ block  @ 23 @ 
comment: /* Set the layout operations */  @ 59 @ comment: /* Set the layout operations */  @ 60 @ 
operator: ==  @ 100 @ operator: ==  @ 103 @ 
name  @ 75 @ name  @ 81 @ 
block  @ 64 @ block  @ 65 @ 
name: compact  @ 100 @ name: compact  @ 103 @ 
expr  @ 81 @ expr  @ 87 @ 
name  @ 142 @ name  @ 135 @ 
block  @ 98 @ block  @ 102 @ 
operator: ->  @ 90 @ operator: ->  @ 96 @ 
name: dim  @ 71 @ name: dim  @ 77 @ 
operator: .  @ 75 @ operator: .  @ 81 @ 
operator: ->  @ 81 @ operator: ->  @ 87 @ 
name: ops  @ 118 @ name: ops  @ 118 @ 
operator: ->  @ 133 @ operator: ->  @ 131 @ 
operator: .  @ 134 @ operator: .  @ 132 @ 
operator: ==  @ 29 @ operator: ==  @ 33 @ 
init  @ 70 @ init  @ 76 @ 
init  @ 133 @ init  @ 131 @ 
block_content  @ 23 @ block_content  @ 24 @ 
if  @ 98 @ if  @ 102 @ 
name: mesg  @ 81 @ name: mesg  @ 87 @ 
name: p  @ 12 @ name: p  @ 13 @ 
if_stmt  @ 19 @ if_stmt  @ 20 @ 
expr  @ 107 @ expr  @ 110 @ 
comment: /* Set the chunk operations */  @ 50 @ comment: /* Set the chunk operations */  @ 51 @ 
name: idx_addr  @ 130 @ name: idx_addr  @ 128 @ 
operator: &  @ 45 @ operator: &  @ 46 @ 
argument_list  @ 112 @ argument_list  @ 114 @ 
name: f  @ 39 @ name: f  @ 40 @ 
argument  @ 83 @ argument  @ 89 @ 
operator: .  @ 71 @ operator: .  @ 77 @ 
name: idx_type  @ 147 @ name: idx_type  @ 140 @ 
name: p  @ 35 @ name: p  @ 36 @ 
operator: )  @ 81 @ operator: )  @ 87 @ 
name: size  @ 98 @ name: size  @ 102 @ 
argument_list  @ 83 @ argument_list  @ 89 @ 
name: size  @ 81 @ name: size  @ 87 @ 
name: mesg  @ 44 @ name: mesg  @ 45 @ 
name: type  @ 29 @ name: type  @ 33 @ 
block_content  @ 28 @ block_content  @ 29 @ 
name: H5D_layout_t  @ 28 @ name: H5D_layout_t  @ 32 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
expr  @ 29 @ expr  @ 33 @ 
if_stmt  @ 27 @ if_stmt  @ 28 @ 
expr_stmt  @ 115 @ expr_stmt  @ 115 @ 
name: p  @ 39 @ name: p  @ 40 @ 
literal: "memory allocation failed for compact data buffer"  @ 101 @ literal: "memory allocation failed for compact data buffer"  @ 104 @ 
block  @ 75 @ block  @ 81 @ 
operator: *  @ 127 @ operator: *  @ 123 @ 
operator: =  @ 118 @ operator: =  @ 118 @ 
expr  @ 130 @ expr  @ 128 @ 
operator: .  @ 147 @ operator: .  @ 140 @ 
call  @ 15 @ call  @ 16 @ 
name: chunk  @ 45 @ name: chunk  @ 46 @ 
name: p  @ 79 @ name: p  @ 85 @ 
name: p  @ 127 @ name: p  @ 123 @ 
expr  @ 70 @ expr  @ 76 @ 
expr  @ 100 @ expr  @ 103 @ 
literal: "invalid layout version with virtual layout"  @ 239 @ literal: "Invalid layout class"  @ 148 @ 
name: UINT32DECODE  @ 79 @ name: UINT32DECODE  @ 85 @ 
expr  @ 148 @ expr  @ 141 @ 
name: storage  @ 147 @ name: storage  @ 140 @ 
name: chunk  @ 74 @ name: chunk  @ 80 @ 
argument  @ 239 @ argument  @ 148 @ 
expr  @ 52 @ expr  @ 53 @ 
name: H5D_COMPACT  @ 29 @ name: H5D_COMPACT  @ 33 @ 
operator: ->  @ 148 @ operator: ->  @ 141 @ 
operator: )  @ 39 @ operator: )  @ 40 @ 
operator: =  @ 42 @ operator: =  @ 43 @ 
if  @ 38 @ if  @ 39 @ 
name  @ 233 @ name  @ 144 @ 
name  @ 29 @ name  @ 33 @ 
name: u  @ 70 @ name: u  @ 76 @ 
expr_stmt  @ 84 @ expr_stmt  @ 90 @ 
operator: ->  @ 112 @ operator: ->  @ 114 @ 
type  @ 1 @ type  @ 2 @ 
argument  @ 82 @ argument  @ 88 @ 
comment: /* end if */  @ 85 @ comment: /* end if */  @ 91 @ 
name  @ 69 @ name  @ 75 @ 
name: H5F_addr_decode  @ 130 @ name: H5F_addr_decode  @ 128 @ 
name: HDmemcpy  @ 83 @ name: HDmemcpy  @ 89 @ 
operator: ->  @ 52 @ operator: ->  @ 53 @ 
expr  @ 22 @ expr  @ 23 @ 
operator: .  @ 112 @ operator: .  @ 114 @ 
operator: ++  @ 127 @ operator: ++  @ 123 @ 
argument  @ 16 @ argument  @ 17 @ 
argument  @ 115 @ argument  @ 115 @ 
argument  @ 96 @ argument  @ 101 @ 
call  @ 130 @ call  @ 128 @ 
call  @ 83 @ call  @ 89 @ 
expr  @ 130 @ expr  @ 128 @ 
argument  @ 239 @ argument  @ 148 @ 
expr_stmt  @ 12 @ expr_stmt  @ 13 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
argument  @ 239 @ argument  @ 148 @ 
decl_stmt  @ 6 @ decl_stmt  @ 7 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
name  @ 38 @ name  @ 39 @ 
name: u  @ 102 @ name: u  @ 105 @ 
expr  @ 69 @ expr  @ 75 @ 
name: u  @ 74 @ name: u  @ 80 @ 
name: mesg  @ 142 @ name: mesg  @ 135 @ 
comment: /* end if */  @ 76 @ comment: /* end if */  @ 82 @ 
name: p  @ 112 @ name: p  @ 114 @ 
expr_stmt  @ 103 @ expr_stmt  @ 106 @ 
name: type  @ 78 @ name: type  @ 84 @ 
operator: +=  @ 66 @ operator: +=  @ 72 @ 
expr  @ 12 @ expr  @ 13 @ 
operator: (  @ 39 @ operator: (  @ 40 @ 
expr  @ 71 @ expr  @ 77 @ 
operator: =  @ 90 @ operator: =  @ 96 @ 
expr  @ 142 @ expr  @ 135 @ 
operator: .  @ 96 @ operator: .  @ 101 @ 
name: void  @ 6 @ name: void  @ 7 @ 
operator: =  @ 53 @ operator: =  @ 54 @ 
argument  @ 16 @ argument  @ 17 @ 
name  @ 143 @ name  @ 136 @ 
if  @ 64 @ if  @ 65 @ 
operator: ->  @ 80 @ operator: ->  @ 86 @ 
name: chunk  @ 127 @ name: chunk  @ 123 @ 
operator: ->  @ 84 @ operator: ->  @ 90 @ 
name: u  @ 142 @ name: u  @ 135 @ 
block  @ 143 @ block  @ 136 @ 
control  @ 142 @ control  @ 135 @ 
call  @ 79 @ call  @ 85 @ 
argument_list  @ 81 @ argument_list  @ 87 @ 
expr  @ 93 @ expr  @ 99 @ 
name: type  @ 29 @ name: type  @ 33 @ 
name: H5D_LOPS_COMPACT  @ 60 @ name: H5D_LOPS_COMPACT  @ 61 @ 
condition  @ 70 @ condition  @ 76 @ 
name: chunk  @ 148 @ name: chunk  @ 141 @ 
operator: &  @ 130 @ operator: &  @ 128 @ 
expr  @ 94 @ expr  @ 100 @ 
name: HGOTO_ERROR  @ 239 @ name: HGOTO_ERROR  @ 148 @ 
name: H5O_LAYOUT_NDIMS  @ 128 @ name: H5O_LAYOUT_NDIMS  @ 124 @ 
operator: .  @ 127 @ operator: .  @ 123 @ 
argument  @ 239 @ argument  @ 148 @ 
expr  @ 134 @ expr  @ 132 @ 
name: u  @ 133 @ name: u  @ 131 @ 
operator: ->  @ 142 @ operator: ->  @ 135 @ 
expr  @ 18 @ expr  @ 19 @ 
operator: &  @ 112 @ operator: &  @ 114 @ 
name: mesg  @ 28 @ name: mesg  @ 32 @ 
name: H5D_LOPS_CONTIG  @ 118 @ name: H5D_LOPS_CONTIG  @ 118 @ 
argument  @ 39 @ argument  @ 40 @ 
literal: 1  @ 142 @ literal: 1  @ 135 @ 
name: HDassert  @ 29 @ name: assert  @ 33 @ 
literal: 0  @ 98 @ literal: 0  @ 102 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
expr  @ 128 @ expr  @ 124 @ 
if  @ 22 @ if  @ 23 @ 
argument  @ 129 @ argument  @ 125 @ 
expr  @ 75 @ expr  @ 81 @ 
expr_stmt  @ 143 @ expr_stmt  @ 136 @ 
argument  @ 102 @ argument  @ 105 @ 
expr_stmt  @ 53 @ expr_stmt  @ 54 @ 
modifier: *  @ 1 @ modifier: *  @ 3 @ 
name: uint8_t  @ 1 @ name: uint8_t  @ 3 @ 
expr_stmt  @ 69 @ expr_stmt  @ 75 @ 
name  @ 96 @ name  @ 101 @ 
name: u  @ 147 @ name: u  @ 140 @ 
expr  @ 83 @ expr  @ 89 @ 
name: mesg  @ 75 @ name: mesg  @ 81 @ 
operator: ->  @ 18 @ operator: ->  @ 19 @ 
name: u  @ 133 @ name: u  @ 131 @ 
name  @ 148 @ name  @ 141 @ 
name: compact  @ 102 @ name: compact  @ 105 @ 
name: buf  @ 81 @ name: buf  @ 87 @ 
expr  @ 143 @ expr  @ 136 @ 
name: ret_value  @ 6 @ name: ret_value  @ 7 @ 
block_content  @ 82 @ block_content  @ 88 @ 
operator: .  @ 98 @ operator: .  @ 102 @ 
expr  @ 90 @ expr  @ 96 @ 
name: u  @ 75 @ name: u  @ 81 @ 
name: H5D_COMPACT  @ 57 @ name: H5D_COMPACT  @ 58 @ 
if  @ 27 @ if  @ 28 @ 
expr  @ 39 @ expr  @ 40 @ 
block_content  @ 143 @ block_content  @ 136 @ 
expr  @ 45 @ expr  @ 46 @ 
argument  @ 130 @ argument  @ 128 @ 
decl  @ 5 @ decl  @ 6 @ 
operator: ++  @ 28 @ operator: ++  @ 32 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
name: H5F_DECODE_LENGTH  @ 115 @ name: H5F_DECODE_LENGTH  @ 115 @ 
argument  @ 101 @ argument  @ 104 @ 
macro  @ 20 @ macro  @ 21 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
expr  @ 112 @ expr  @ 114 @ 
condition  @ 38 @ condition  @ 39 @ 
name: u  @ 143 @ name: u  @ 136 @ 
condition  @ 78 @ condition  @ 84 @ 
name: H5O_LAYOUT_VERSION_3  @ 22 @ name: H5O_LAYOUT_VERSION_3  @ 23 @ 
name  @ 142 @ name  @ 135 @ 
call  @ 29 @ call  @ 33 @ 
name: storage  @ 100 @ name: storage  @ 103 @ 
name: type  @ 44 @ name: type  @ 45 @ 
name: mesg  @ 22 @ name: mesg  @ 23 @ 
name: type  @ 28 @ name: type  @ 32 @ 
unit  @ 1 @ unit  @ 1 @ 
argument  @ 112 @ argument  @ 114 @ 
expr  @ 53 @ expr  @ 54 @ 
operator: <  @ 22 @ operator: <  @ 23 @ 
decl  @ 1 @ decl  @ 3 @ 
argument  @ 82 @ argument  @ 88 @ 
block_content  @ 71 @ block_content  @ 77 @ 
expr  @ 133 @ expr  @ 131 @ 
name: p  @ 26 @ name: p  @ 27 @ 
decl  @ 23 @ decl  @ 24 @ 
operator: .  @ 147 @ operator: .  @ 140 @ 
operator: ->  @ 102 @ operator: ->  @ 105 @ 
name: u  @ 69 @ name: u  @ 75 @ 
block  @ 71 @ block  @ 77 @ 
argument_list  @ 71 @ argument_list  @ 77 @ 
comment: /* end if */  @ 67 @ comment: /* end if */  @ 73 @ 
init  @ 74 @ init  @ 80 @ 
comment: /* Compute chunk size */  @ 141 @ comment: /* Compute chunk size */  @ 134 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
operator: ->  @ 147 @ operator: ->  @ 140 @ 
name: storage  @ 39 @ name: storage  @ 40 @ 
name: storage  @ 52 @ name: storage  @ 53 @ 
name: chunk  @ 75 @ name: chunk  @ 81 @ 
name: mesg  @ 133 @ name: mesg  @ 131 @ 
argument_list  @ 82 @ argument_list  @ 88 @ 
name: size  @ 79 @ name: size  @ 85 @ 
name: H5O_layout_t  @ 3 @ name: H5O_layout_t  @ 5 @ 
operator: .  @ 103 @ operator: .  @ 106 @ 
name: mesg  @ 233 @ name: mesg  @ 144 @ 
decl  @ 3 @ decl  @ 5 @ 
argument  @ 81 @ argument  @ 87 @ 
name: u  @ 133 @ name: u  @ 131 @ 
name: u  @ 74 @ name: u  @ 80 @ 
name: mesg  @ 112 @ name: mesg  @ 114 @ 
name: u  @ 74 @ name: u  @ 80 @ 
operator: .  @ 80 @ operator: .  @ 86 @ 
name  @ 48 @ name  @ 49 @ 
name: storage  @ 83 @ name: storage  @ 89 @ 
type  @ 6 @ type  @ 7 @ 
argument_list  @ 159 @ argument_list  @ 29 @ 
decl  @ 8 @ decl  @ 9 @ 
literal: "memory allocation failed"  @ 16 @ literal: "memory allocation failed"  @ 17 @ 
name: HGOTO_ERROR  @ 129 @ name: HGOTO_ERROR  @ 125 @ 
expr  @ 45 @ expr  @ 46 @ 
expr  @ 115 @ expr  @ 115 @ 
comment: /* end if */  @ 104 @ comment: /* end if */  @ 107 @ 
name: H5D_LOPS_COMPACT  @ 107 @ name: H5D_LOPS_COMPACT  @ 110 @ 
if  @ 128 @ if  @ 124 @ 
operator: +=  @ 103 @ operator: +=  @ 106 @ 
name: u  @ 112 @ name: u  @ 114 @ 
comment: /* Set the layout operations */  @ 117 @ comment: /* Set the layout operations */  @ 117 @ 
operator: >  @ 19 @ operator: >  @ 20 @ 
operator: .  @ 84 @ operator: .  @ 90 @ 
expr  @ 70 @ expr  @ 76 @ 
expr  @ 39 @ expr  @ 40 @ 
operator: .  @ 98 @ operator: .  @ 102 @ 
literal: 0  @ 142 @ literal: 0  @ 135 @ 
expr  @ 11 @ expr  @ 12 @ 
expr  @ 112 @ expr  @ 114 @ 
operator: =  @ 100 @ operator: =  @ 103 @ 
operator: ->  @ 42 @ operator: ->  @ 43 @ 
expr_stmt  @ 48 @ expr_stmt  @ 49 @ 
name: mesg  @ 102 @ name: mesg  @ 105 @ 
argument  @ 83 @ argument  @ 89 @ 
decl  @ 6 @ decl  @ 7 @ 
name: H5MM_malloc  @ 81 @ name: H5MM_malloc  @ 87 @ 
name: p  @ 83 @ name: p  @ 89 @ 
operator: >  @ 98 @ operator: >  @ 102 @ 
name: mesg  @ 69 @ name: mesg  @ 75 @ 
name  @ 57 @ name  @ 58 @ 
name: mesg  @ 57 @ name: mesg  @ 58 @ 
name: ndims  @ 23 @ name: ndims  @ 24 @ 
name: UINT16DECODE  @ 96 @ name: UINT16DECODE  @ 101 @ 
argument  @ 112 @ argument  @ 114 @ 
operator: .  @ 128 @ operator: .  @ 124 @ 
operator: ->  @ 142 @ operator: ->  @ 135 @ 
name: H5D_CHUNK_IDX_BTREE  @ 147 @ name: H5D_CHUNK_BTREE  @ 140 @ 
if  @ 19 @ if  @ 20 @ 
expr  @ 74 @ expr  @ 80 @ 
name: mesg  @ 29 @ name: mesg  @ 33 @ 
name: p  @ 84 @ name: p  @ 90 @ 
argument  @ 29 @ argument  @ 33 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
name: ndims  @ 127 @ name: ndims  @ 123 @ 
expr  @ 35 @ expr  @ 36 @ 
name: p  @ 28 @ name: p  @ 32 @ 
expr_stmt  @ 42 @ expr_stmt  @ 43 @ 
argument_list  @ 57 @ argument_list  @ 58 @ 
condition  @ 44 @ condition  @ 45 @ 
condition  @ 19 @ condition  @ 20 @ 
expr  @ 19 @ expr  @ 20 @ 
name: dim  @ 74 @ name: dim  @ 80 @ 
name: ndims  @ 74 @ name: ndims  @ 80 @ 
operator: )  @ 112 @ operator: )  @ 114 @ 
operator: .  @ 96 @ operator: .  @ 101 @ 
decl  @ 1 @ decl  @ 2 @ 
modifier: *  @ 6 @ modifier: *  @ 7 @ 
name  @ 133 @ name  @ 131 @ 
name: f  @ 112 @ name: f  @ 114 @ 
name: p  @ 1 @ name: p  @ 3 @ 
name: u  @ 115 @ name: u  @ 115 @ 
operator: )  @ 100 @ operator: )  @ 103 @ 
name: ndims  @ 133 @ name: ndims  @ 131 @ 
block_content  @ 100 @ block_content  @ 103 @ 
name: ndims  @ 66 @ name: ndims  @ 72 @ 
name: H5D_LOPS_CHUNK  @ 48 @ name: H5D_LOPS_CHUNK  @ 49 @ 
expr_stmt  @ 18 @ expr_stmt  @ 19 @ 
name: mesg  @ 75 @ name: mesg  @ 81 @ 
argument  @ 102 @ argument  @ 105 @ 
operator: =  @ 60 @ operator: =  @ 61 @ 
argument  @ 134 @ argument  @ 132 @ 
operator: >  @ 80 @ operator: >  @ 86 @ 
operator: )  @ 45 @ operator: )  @ 46 @ 
argument_list  @ 16 @ argument_list  @ 17 @ 
name  @ 134 @ name  @ 132 @ 
expr  @ 98 @ expr  @ 102 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
name: mesg  @ 93 @ name: mesg  @ 99 @ 
name: mesg  @ 74 @ name: mesg  @ 80 @ 
name: mesg  @ 100 @ name: mesg  @ 103 @ 
expr  @ 28 @ expr  @ 32 @ 
name: u  @ 130 @ name: u  @ 128 @ 
name: H5MM_malloc  @ 100 @ name: H5MM_malloc  @ 103 @ 
literal: 4  @ 66 @ literal: 4  @ 72 @ 
expr_stmt  @ 71 @ expr_stmt  @ 77 @ 
name: size  @ 142 @ name: size  @ 135 @ 
name: ops  @ 148 @ name: ops  @ 141 @ 
call  @ 102 @ call  @ 105 @ 
name: contig  @ 115 @ name: contig  @ 115 @ 
comment: /* Don't compute size of contiguous storage here, due to possible * truncation of the dimension sizes when they were stored in this * version of the layout message.Compute the contiguous storage * size in the dataset code, where we've got the dataspace * information available also.- QAK 5/26/04 */  @ 65 @ comment: /* Don't compute size of contiguous storage here, due to possible
             * truncation of the dimension sizes when they were stored in this* version of the layout message.  Compute the contiguous storage
             * size in the dataset code, where we've got the dataspace* information available also.  - QAK 5/26/04
             */  @ 66 @ 
literal: 0  @ 74 @ literal: 0  @ 80 @ 
operator: ->  @ 75 @ operator: ->  @ 81 @ 
index  @ 74 @ index  @ 80 @ 
operator: ->  @ 233 @ operator: ->  @ 144 @ 
operator: =  @ 142 @ operator: =  @ 135 @ 
name: chunk  @ 130 @ name: chunk  @ 128 @ 
expr  @ 84 @ expr  @ 90 @ 
if  @ 81 @ if  @ 87 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
name: u  @ 134 @ name: u  @ 132 @ 
name  @ 22 @ name  @ 23 @ 
name: storage  @ 45 @ name: storage  @ 46 @ 
name: H5O_layout_t  @ 15 @ name: H5O_layout_t  @ 16 @ 
operator: =  @ 142 @ operator: =  @ 135 @ 
expr  @ 142 @ expr  @ 135 @ 
name: ops  @ 233 @ name: ops  @ 144 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
expr  @ 78 @ expr  @ 84 @ 
argument  @ 83 @ argument  @ 89 @ 
argument  @ 159 @ argument  @ 29 @ 
name: f  @ 45 @ name: f  @ 46 @ 
name: p  @ 18 @ name: p  @ 19 @ 
name: version  @ 19 @ name: version  @ 20 @ 
name: storage  @ 81 @ name: storage  @ 87 @ 
name  @ 107 @ name  @ 110 @ 
name: chunk  @ 142 @ name: chunk  @ 135 @ 
name  @ 78 @ name  @ 84 @ 
name: u  @ 127 @ name: u  @ 123 @ 
operator: *  @ 18 @ operator: *  @ 19 @ 
name: compact  @ 103 @ name: compact  @ 106 @ 
name: mesg  @ 80 @ name: mesg  @ 86 @ 
parameter  @ 1 @ parameter  @ 2 @ 
operator: ->  @ 103 @ operator: ->  @ 106 @ 
operator: .  @ 74 @ operator: .  @ 80 @ 
name: HGOTO_ERROR  @ 82 @ name: HGOTO_ERROR  @ 88 @ 
name: mesg  @ 60 @ name: mesg  @ 61 @ 
operator: ->  @ 28 @ operator: ->  @ 32 @ 
operator: .  @ 75 @ operator: .  @ 81 @ 
expr  @ 57 @ expr  @ 58 @ 
name: p  @ 134 @ name: p  @ 132 @ 
operator: ||  @ 29 @ operator: ||  @ 33 @ 
name: mesg  @ 134 @ name: mesg  @ 132 @ 
name: storage  @ 83 @ name: storage  @ 89 @ 
operator: ==  @ 44 @ operator: ==  @ 45 @ 
macro  @ 159 @ macro  @ 29 @ 
name  @ 60 @ name  @ 61 @ 
operator: .  @ 39 @ operator: .  @ 40 @ 
init  @ 3 @ init  @ 5 @ 
name: storage  @ 112 @ name: storage  @ 114 @ 
name: storage  @ 102 @ name: storage  @ 105 @ 
operator: ->  @ 60 @ operator: ->  @ 61 @ 
argument_list  @ 29 @ argument_list  @ 33 @ 
name: mesg  @ 107 @ name: mesg  @ 110 @ 
expr_stmt  @ 134 @ expr_stmt  @ 132 @ 
name: chunk  @ 69 @ name: chunk  @ 75 @ 
name: H5D_COPS_BTREE  @ 53 @ name: H5D_COPS_BTREE  @ 54 @ 
operator: ->  @ 142 @ operator: ->  @ 135 @ 
operator: .  @ 69 @ operator: .  @ 75 @ 
operator: )  @ 28 @ operator: )  @ 32 @ 
name: u  @ 53 @ name: u  @ 54 @ 
name: ops  @ 60 @ name: ops  @ 61 @ 
block  @ 16 @ block  @ 17 @ 
expr  @ 100 @ expr  @ 103 @ 
name: H5F_addr_decode  @ 112 @ name: H5F_addr_decode  @ 114 @ 
expr  @ 38 @ expr  @ 39 @ 
else  @ 88 @ else  @ 94 @ 
operator: ++  @ 70 @ operator: ++  @ 76 @ 
argument_list  @ 115 @ argument_list  @ 115 @ 
operator: (  @ 28 @ operator: (  @ 32 @ 
operator: )  @ 90 @ operator: )  @ 96 @ 
operator: .  @ 52 @ operator: .  @ 53 @ 
name: mesg  @ 29 @ name: mesg  @ 33 @ 
name  @ 83 @ name  @ 89 @ 
expr_stmt  @ 52 @ expr_stmt  @ 53 @ 
name: ops  @ 53 @ name: ops  @ 54 @ 
operator: ->  @ 78 @ operator: ->  @ 84 @ 
expr  @ 80 @ expr  @ 86 @ 
block_content  @ 81 @ block_content  @ 87 @ 
operator: .  @ 69 @ operator: .  @ 75 @ 
expr  @ 142 @ expr  @ 135 @ 
name: mesg  @ 143 @ name: mesg  @ 136 @ 
name: ops  @ 48 @ name: ops  @ 49 @ 
argument_list  @ 130 @ argument_list  @ 128 @ 
name: u  @ 143 @ name: u  @ 136 @ 
argument_list  @ 39 @ argument_list  @ 40 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
operator: .  @ 103 @ operator: .  @ 106 @ 
name: u  @ 83 @ name: u  @ 89 @ 
block  @ 2 @ block  @ 4 @ 
name: mesg  @ 118 @ name: mesg  @ 118 @ 
argument  @ 16 @ argument  @ 17 @ 
name  @ 74 @ name  @ 80 @ 
literal: 0  @ 133 @ literal: 0  @ 131 @ 
comment: /* Set the chunk operations */  @ 188 @ comment: /* Set the layout operations */  @ 143 @ 
operator: ->  @ 107 @ operator: ->  @ 110 @ 
name: size  @ 102 @ name: size  @ 105 @ 
index  @ 134 @ index  @ 132 @ 
argument_list  @ 15 @ argument_list  @ 16 @ 
operator: .  @ 143 @ operator: .  @ 136 @ 
block_content  @ 16 @ block_content  @ 17 @ 
expr  @ 64 @ expr  @ 65 @ 
expr_stmt  @ 107 @ expr_stmt  @ 110 @ 
name: u  @ 39 @ name: u  @ 40 @ 
block_content  @ 69 @ block_content  @ 75 @ 
operator: .  @ 84 @ operator: .  @ 90 @ 
name: mesg  @ 90 @ name: mesg  @ 96 @ 
operator: .  @ 143 @ operator: .  @ 136 @ 
expr  @ 79 @ expr  @ 85 @ 
name  @ 71 @ name  @ 77 @ 
operator: &  @ 130 @ operator: &  @ 128 @ 
operator: .  @ 75 @ operator: .  @ 81 @ 
comment: /* Set the layout operations */  @ 41 @ comment: /* Set the layout operations */  @ 42 @ 
else  @ 55 @ else  @ 56 @ 
type  @ 1 @ type  @ 3 @ 
operator: =  @ 74 @ operator: =  @ 80 @ 
operator: .  @ 148 @ operator: .  @ 141 @ 
comment: /* Compute chunk size */  @ 73 @ comment: /* Compute chunk size */  @ 79 @ 
name: ndims  @ 27 @ name: ndims  @ 28 @ 
name  @ 42 @ name  @ 43 @ 
name: p  @ 90 @ name: p  @ 96 @ 
name  @ 100 @ name  @ 103 @ 
operator: .  @ 74 @ operator: .  @ 80 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
name: NULL  @ 15 @ name: NULL  @ 16 @ 
operator: =  @ 69 @ operator: =  @ 75 @ 
expr  @ 112 @ expr  @ 114 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
control  @ 133 @ control  @ 131 @ 
argument  @ 45 @ argument  @ 46 @ 
expr_stmt  @ 90 @ expr_stmt  @ 96 @ 
name: u  @ 5 @ name: u  @ 6 @ 
name: buf  @ 100 @ name: buf  @ 103 @ 
operator: ==  @ 78 @ operator: ==  @ 84 @ 
argument  @ 15 @ argument  @ 16 @ 
name: HGOTO_ERROR  @ 159 @ name: HGOTO_ERROR  @ 29 @ 
expr_stmt  @ 26 @ expr_stmt  @ 27 @ 
block_content  @ 20 @ block_content  @ 21 @ 
block  @ 20 @ block  @ 21 @ 
comment: /* end if */  @ 43 @ comment: /* end if */  @ 44 @ 
operator: !=  @ 64 @ operator: !=  @ 65 @ 
name: contig  @ 39 @ name: contig  @ 40 @ 
name: f  @ 130 @ name: f  @ 128 @ 
expr  @ 42 @ expr  @ 43 @ 
name: p  @ 115 @ name: p  @ 115 @ 
argument  @ 159 @ argument  @ 29 @ 
comment: /* Dimensionality */  @ 25 @ comment: /* Dimensionality */  @ 26 @ 
name: size  @ 80 @ name: size  @ 86 @ 
name: H5D_CONTIGUOUS  @ 110 @ name: H5D_CONTIGUOUS  @ 113 @ 
operator: ->  @ 118 @ operator: ->  @ 118 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
name  @ 39 @ name  @ 40 @ 
operator: ->  @ 143 @ operator: ->  @ 136 @ 
operator: =  @ 133 @ operator: =  @ 131 @ 
expr  @ 39 @ expr  @ 40 @ 
name: mesg  @ 130 @ name: mesg  @ 128 @ 
expr_stmt  @ 118 @ expr_stmt  @ 118 @ 
name: u  @ 81 @ name: u  @ 87 @ 
expr  @ 57 @ expr  @ 58 @ 
literal: "bad version number for layout message"  @ 20 @ literal: "bad version number for layout message"  @ 21 @ 
if_stmt  @ 100 @ if_stmt  @ 103 @ 
operator: ==  @ 57 @ operator: ==  @ 58 @ 
block_content  @ 129 @ block_content  @ 125 @ 
operator: .  @ 45 @ operator: .  @ 46 @ 
literal: 0  @ 80 @ literal: 0  @ 86 @ 
if  @ 44 @ if  @ 45 @ 
expr_stmt  @ 147 @ expr_stmt  @ 140 @ 
default  @ 224 @ default  @ 147 @ 
argument_list  @ 79 @ argument_list  @ 85 @ 
expr  @ 45 @ expr  @ 46 @ 
name: H5D_CONTIGUOUS  @ 29 @ name: H5D_CONTIGUOUS  @ 33 @ 
operator: ++  @ 133 @ operator: ++  @ 131 @ 
name: u  @ 143 @ name: u  @ 136 @ 
block  @ 122 @ block  @ 99 @ 
literal: "memory allocation failed for compact data buffer"  @ 82 @ literal: "memory allocation failed for compact data buffer"  @ 88 @ 
operator: .  @ 133 @ operator: .  @ 131 @ 
expr  @ 133 @ expr  @ 131 @ 
argument  @ 45 @ argument  @ 46 @ 
name: void  @ 1 @ name: void  @ 1 @ 
name: addr  @ 112 @ name: addr  @ 114 @ 
name: u  @ 128 @ name: u  @ 124 @ 
name: mesg  @ 98 @ name: mesg  @ 102 @ 
condition  @ 27 @ condition  @ 28 @ 
name  @ 84 @ name  @ 90 @ 
name  @ 100 @ name  @ 103 @ 
operator: &  @ 45 @ operator: &  @ 46 @ 
operator: ==  @ 29 @ operator: ==  @ 33 @ 
argument  @ 129 @ argument  @ 125 @ 
expr  @ 96 @ expr  @ 101 @ 
operator: .  @ 127 @ operator: .  @ 123 @ 
comment: /* end else */  @ 61 @ comment: /* end else */  @ 62 @ 
name: H5F_addr_decode  @ 45 @ name: H5F_addr_decode  @ 46 @ 
expr  @ 44 @ expr  @ 45 @ 
literal: 5  @ 35 @ literal: 5  @ 36 @ 
operator: ->  @ 39 @ operator: ->  @ 40 @ 
name: storage  @ 96 @ name: storage  @ 101 @ 
name  @ 142 @ name  @ 135 @ 
operator: ->  @ 74 @ operator: ->  @ 80 @ 
name: dim  @ 142 @ name: dim  @ 135 @ 
operator: ==  @ 81 @ operator: ==  @ 87 @ 
operator: ->  @ 71 @ operator: ->  @ 77 @ 
block  @ 38 @ block  @ 39 @ 
name: size  @ 75 @ name: size  @ 81 @ 
name  @ 90 @ name  @ 96 @ 
name: ndims  @ 26 @ name: ndims  @ 27 @ 
name: chunk  @ 147 @ name: chunk  @ 140 @ 
type  @ 23 @ type  @ 24 @ 
expr  @ 102 @ expr  @ 105 @ 
name: mesg  @ 103 @ name: mesg  @ 106 @ 
operator: ++  @ 26 @ operator: ++  @ 27 @ 
name: version  @ 18 @ name: version  @ 19 @ 
if_stmt  @ 81 @ if_stmt  @ 87 @ 
argument  @ 20 @ argument  @ 21 @ 
operator: ->  @ 98 @ operator: ->  @ 102 @ 
name  @ 112 @ name  @ 114 @ 
expr_stmt  @ 66 @ expr_stmt  @ 72 @ 
name: compact  @ 96 @ name: compact  @ 101 @ 
name: mesg  @ 83 @ name: mesg  @ 89 @ 
name: ndims  @ 69 @ name: ndims  @ 75 @ 
comment: /* Layout class */  @ 28 @ comment: /* Layout class */  @ 31 @ 
name: u  @ 96 @ name: u  @ 101 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
for  @ 70 @ for  @ 76 @ 
argument  @ 20 @ argument  @ 21 @ 
argument  @ 82 @ argument  @ 88 @ 
index  @ 142 @ index  @ 135 @ 
name: storage  @ 84 @ name: storage  @ 90 @ 
expr  @ 143 @ expr  @ 136 @ 
argument  @ 130 @ argument  @ 128 @ 
if  @ 100 @ if  @ 103 @ 
operator: =  @ 127 @ operator: =  @ 123 @ 
operator: ||  @ 19 @ operator: ||  @ 20 @ 
type  @ 3 @ type  @ 5 @ 
name: H5D_CONTIGUOUS  @ 38 @ name: H5D_CONTIGUOUS  @ 39 @ 
name  @ 118 @ name  @ 118 @ 
name: mesg  @ 18 @ name: mesg  @ 19 @ 
name  @ 83 @ name  @ 89 @ 
expr  @ 71 @ expr  @ 77 @ 
operator: *=  @ 75 @ operator: *=  @ 81 @ 
name: storage  @ 79 @ name: storage  @ 85 @ 
operator: .  @ 103 @ operator: .  @ 106 @ 
operator: .  @ 100 @ operator: .  @ 103 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
name  @ 75 @ name  @ 81 @ 
macro  @ 82 @ macro  @ 88 @ 
name: u  @ 71 @ name: u  @ 77 @ 
operator: ->  @ 29 @ operator: ->  @ 33 @ 
name: u  @ 100 @ name: u  @ 103 @ 
name: H5D_CHUNKED  @ 29 @ name: H5D_CHUNKED  @ 33 @ 
operator: =  @ 18 @ operator: =  @ 19 @ 
name: u  @ 142 @ name: u  @ 135 @ 
switch  @ 93 @ switch  @ 99 @ 
name: mesg  @ 19 @ name: mesg  @ 20 @ 
operator: .  @ 98 @ operator: .  @ 102 @ 
name: type  @ 93 @ name: type  @ 99 @ 
condition  @ 80 @ condition  @ 86 @ 
expr_stmt  @ 29 @ expr_stmt  @ 33 @ 
argument  @ 20 @ argument  @ 21 @ 
name  @ 79 @ name  @ 85 @ 
argument  @ 130 @ argument  @ 128 @ 
operator: <  @ 19 @ operator: <  @ 20 @ 
call  @ 71 @ call  @ 77 @ 
block  @ 55 @ block  @ 56 @ 
argument  @ 115 @ argument  @ 115 @ 
literal: 1  @ 74 @ literal: 1  @ 80 @ 
operator: .  @ 142 @ operator: .  @ 135 @ 
expr  @ 115 @ expr  @ 115 @ 
comment: /* Num dimensions in chunk */  @ 23 @ comment: /* Num dimensions in chunk           */  @ 24 @ 
operator: .  @ 134 @ operator: .  @ 132 @ 
name: u  @ 70 @ name: u  @ 76 @ 
name: storage  @ 100 @ name: storage  @ 103 @ 
operator: =  @ 52 @ operator: =  @ 53 @ 
specifier: const  @ 1 @ specifier: const  @ 3 @ 
name: type  @ 64 @ name: type  @ 65 @ 
block  @ 82 @ block  @ 88 @ 
operator: .  @ 128 @ operator: .  @ 124 @ 
name: H5D_LOPS_CONTIG  @ 42 @ name: H5D_LOPS_CONTIG  @ 43 @ 
name: version  @ 19 @ name: version  @ 20 @ 
name: dim  @ 143 @ name: dim  @ 136 @ 
condition  @ 100 @ condition  @ 103 @ 
name: H5F_addr_decode  @ 39 @ name: H5F_addr_decode  @ 40 @ 
name: p  @ 130 @ name: p  @ 128 @ 
condition  @ 74 @ condition  @ 80 @ 
operator: ++  @ 74 @ operator: ++  @ 80 @ 
argument_list  @ 12 @ argument_list  @ 13 @ 
name: u  @ 148 @ name: u  @ 141 @ 
argument  @ 82 @ argument  @ 88 @ 
operator: .  @ 83 @ operator: .  @ 89 @ 
expr  @ 102 @ expr  @ 105 @ 
operator: )  @ 130 @ operator: )  @ 128 @ 
name: size  @ 103 @ name: size  @ 106 @ 
name: f  @ 11 @ name: f  @ 12 @ 
comment: /* Read the size */  @ 63 @ comment: /* Read the size */  @ 64 @ 
name: u  @ 74 @ name: u  @ 80 @ 
expr  @ 102 @ expr  @ 105 @ 
expr_stmt  @ 112 @ expr_stmt  @ 114 @ 
expr  @ 45 @ expr  @ 46 @ 
expr  @ 48 @ expr  @ 49 @ 
operator: .  @ 115 @ operator: .  @ 115 @ 
name: u  @ 79 @ name: u  @ 85 @ 
operator: <  @ 133 @ operator: <  @ 131 @ 
operator: .  @ 39 @ operator: .  @ 40 @ 
operator: ->  @ 100 @ operator: ->  @ 103 @ 
condition  @ 133 @ condition  @ 131 @ 
if_stmt  @ 22 @ if_stmt  @ 23 @ 
name: type  @ 57 @ name: type  @ 58 @ 
expr  @ 75 @ expr  @ 81 @ 
name  @ 102 @ name  @ 105 @ 
operator: .  @ 52 @ operator: .  @ 53 @ 
name: mesg  @ 53 @ name: mesg  @ 54 @ 
expr  @ 115 @ expr  @ 115 @ 
name  @ 81 @ name  @ 87 @ 
name: p  @ 71 @ name: p  @ 77 @ 
name: storage  @ 80 @ name: storage  @ 86 @ 
operator: ->  @ 83 @ operator: ->  @ 89 @ 
expr  @ 102 @ expr  @ 105 @ 
argument  @ 159 @ argument  @ 29 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
name: type  @ 90 @ name: type  @ 96 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
name: size  @ 83 @ name: size  @ 89 @ 
name: compact  @ 100 @ name: compact  @ 103 @ 
name: compact  @ 81 @ name: compact  @ 87 @ 
name: dim  @ 134 @ name: dim  @ 132 @ 
name  @ 64 @ name  @ 65 @ 
name: storage  @ 103 @ name: storage  @ 106 @ 
operator: =  @ 74 @ operator: =  @ 80 @ 
name: mesg  @ 29 @ name: mesg  @ 33 @ 
call  @ 100 @ call  @ 103 @ 
block_content  @ 66 @ block_content  @ 72 @ 
operator: ->  @ 45 @ operator: ->  @ 46 @ 
operator: .  @ 115 @ operator: .  @ 115 @ 
name: u  @ 84 @ name: u  @ 90 @ 
name  @ 29 @ name  @ 33 @ 
operator: .  @ 96 @ operator: .  @ 101 @ 
operator: .  @ 143 @ operator: .  @ 136 @ 
operator: .  @ 53 @ operator: .  @ 54 @ 
name: HDassert  @ 12 @ name: HDassert  @ 13 @ 
block  @ 129 @ block  @ 125 @ 
block  @ 101 @ block  @ 104 @ 
comment: /* Sanity check */  @ 56 @ comment: /* Sanity check */  @ 57 @ 
index  @ 71 @ index  @ 77 @ 
name: storage  @ 81 @ name: storage  @ 87 @ 
operator: *  @ 66 @ operator: *  @ 72 @ 
condition  @ 22 @ condition  @ 23 @ 
expr_stmt  @ 130 @ expr_stmt  @ 128 @ 
operator: .  @ 102 @ operator: .  @ 105 @ 
expr  @ 66 @ expr  @ 72 @ 
argument  @ 159 @ argument  @ 29 @ 
expr  @ 134 @ expr  @ 132 @ 
name: storage  @ 115 @ name: storage  @ 115 @ 
operator: +=  @ 84 @ operator: +=  @ 90 @ 
call  @ 12 @ call  @ 13 @ 
operator: =  @ 70 @ operator: =  @ 76 @ 
index  @ 75 @ index  @ 81 @ 
call  @ 57 @ call  @ 58 @ 
argument  @ 115 @ argument  @ 115 @ 
name  @ 53 @ name  @ 54 @ 
name: u  @ 45 @ name: u  @ 46 @ 
break  @ 221 @ break  @ 145 @ 
expr  @ 134 @ expr  @ 132 @ 
name: mesg  @ 96 @ name: mesg  @ 101 @ 
name: mesg  @ 38 @ name: mesg  @ 39 @ 
case  @ 94 @ case  @ 100 @ 
expr  @ 71 @ expr  @ 77 @ 
name: chunk  @ 142 @ name: chunk  @ 135 @ 
name  @ 115 @ name  @ 115 @ 
argument_list  @ 239 @ argument_list  @ 148 @ 
name: addr  @ 39 @ name: addr  @ 40 @ 
name: size  @ 143 @ name: size  @ 136 @ 
operator: .  @ 52 @ operator: .  @ 53 @ 
expr  @ 233 @ expr  @ 144 @ 
name: storage  @ 98 @ name: storage  @ 102 @ 
name: mesg  @ 74 @ name: mesg  @ 80 @ 
name: p  @ 103 @ name: p  @ 106 @ 
operator: .  @ 130 @ operator: .  @ 128 @ 
argument  @ 79 @ argument  @ 85 @ 
expr  @ 83 @ expr  @ 89 @ 
operator: ->  @ 38 @ operator: ->  @ 39 @ 
operator: ->  @ 48 @ operator: ->  @ 49 @ 
name: H5D_COPS_BTREE  @ 148 @ name: H5D_COPS_BTREE  @ 141 @ 
operator: ->  @ 69 @ operator: ->  @ 75 @ 
expr  @ 74 @ expr  @ 80 @ 
operator: .  @ 112 @ operator: .  @ 114 @ 
name: mesg  @ 79 @ name: mesg  @ 85 @ 
argument_list  @ 20 @ argument_list  @ 21 @ 
name: NULL  @ 81 @ name: NULL  @ 87 @ 
literal: "dimensionality is too large"  @ 129 @ literal: "dimensionality is too large"  @ 125 @ 
comment: /* check args */  @ 10 @ comment: /* check args */  @ 11 @ 
name: NULL  @ 3 @ name: NULL  @ 5 @ 
operator: .  @ 81 @ operator: .  @ 87 @ 
condition  @ 15 @ condition  @ 16 @ 
comment: /* end if */  @ 54 @ comment: /* end if */  @ 55 @ 
operator: (  @ 15 @ operator: (  @ 16 @ 
name  @ 29 @ name  @ 33 @ 
argument_list  @ 102 @ argument_list  @ 105 @ 
call  @ 81 @ call  @ 87 @ 
name: u  @ 81 @ name: u  @ 87 @ 
if_stmt  @ 128 @ if_stmt  @ 124 @ 
argument_list  @ 134 @ argument_list  @ 132 @ 
operator: =  @ 107 @ operator: =  @ 110 @ 
argument  @ 16 @ argument  @ 17 @ 
name: u  @ 100 @ name: u  @ 103 @ 
operator: ->  @ 79 @ operator: ->  @ 85 @ 
if_stmt  @ 15 @ if_stmt  @ 16 @ 
comment: /* Skip over dimension sizes (32-bit quantities) */  @ 66 @ comment: /* Skip over dimension sizes (32-bit quantities) */  @ 72 @ 
name: u  @ 134 @ name: u  @ 132 @ 
if_stmt  @ 80 @ if_stmt  @ 86 @ 
name: ops  @ 107 @ name: ops  @ 110 @ 
argument  @ 101 @ argument  @ 104 @ 
name  @ 80 @ name  @ 86 @ 
control  @ 74 @ control  @ 80 @ 
argument  @ 100 @ argument  @ 103 @ 
name  @ 45 @ name  @ 46 @ 
call  @ 39 @ call  @ 40 @ 
expr  @ 81 @ expr  @ 87 @ 
operator: .  @ 45 @ operator: .  @ 46 @ 
name: chunk  @ 128 @ name: chunk  @ 124 @ 
case  @ 121 @ case  @ 121 @ 
operator: ->  @ 83 @ operator: ->  @ 89 @ 
expr  @ 83 @ expr  @ 89 @ 
argument  @ 101 @ argument  @ 104 @ 
decl_stmt  @ 3 @ decl_stmt  @ 5 @ 
expr_stmt  @ 39 @ expr_stmt  @ 40 @ 
operator: ->  @ 53 @ operator: ->  @ 54 @ 
operator: ->  @ 100 @ operator: ->  @ 103 @ 
argument  @ 20 @ argument  @ 21 @ 
name: chunk  @ 143 @ name: chunk  @ 136 @ 
expr  @ 112 @ expr  @ 114 @ 
expr_stmt  @ 83 @ expr_stmt  @ 89 @ 
operator: ->  @ 134 @ operator: ->  @ 132 @ 
name  @ 98 @ name  @ 102 @ 
name: u  @ 74 @ name: u  @ 80 @ 
name: H5D_CHUNKED  @ 121 @ name: H5D_CHUNKED  @ 121 @ 
operator: .  @ 115 @ operator: .  @ 115 @ 
block  @ 80 @ block  @ 86 @ 
expr  @ 134 @ expr  @ 132 @ 
expr_stmt  @ 102 @ expr_stmt  @ 105 @ 
comment: /* Dimensionality */  @ 126 @ comment: /* Dimensionality */  @ 122 @ 
name: version  @ 22 @ name: version  @ 23 @ 
expr  @ 133 @ expr  @ 131 @ 
argument  @ 129 @ argument  @ 125 @ 
name: chunk  @ 74 @ name: chunk  @ 80 @ 
name: mesg  @ 142 @ name: mesg  @ 135 @ 
name  @ 128 @ name  @ 124 @ 
name: mesg  @ 64 @ name: mesg  @ 65 @ 
operator: .  @ 80 @ operator: .  @ 86 @ 
expr_stmt  @ 79 @ expr_stmt  @ 85 @ 
call  @ 112 @ call  @ 114 @ 
operator: &  @ 39 @ operator: &  @ 40 @ 
operator: *  @ 90 @ operator: *  @ 96 @ 
comment: /* end if */  @ 87 @ comment: /* end if */  @ 93 @ 
operator: .  @ 53 @ operator: .  @ 54 @ 
argument  @ 45 @ argument  @ 46 @ 
name: mesg  @ 128 @ name: mesg  @ 124 @ 
expr  @ 12 @ expr  @ 13 @ 
name: type  @ 29 @ name: type  @ 33 @ 
name: ndims  @ 128 @ name: ndims  @ 124 @ 
expr  @ 74 @ expr  @ 80 @ 
name: chunk  @ 142 @ name: chunk  @ 135 @ 
break  @ 119 @ break  @ 119 @ 
incr  @ 142 @ incr  @ 135 @ 
operator: =  @ 147 @ operator: =  @ 140 @ 
argument  @ 96 @ argument  @ 101 @ 
name: p  @ 45 @ name: p  @ 46 @ 
expr  @ 60 @ expr  @ 61 @ 
expr_stmt  @ 28 @ expr_stmt  @ 32 @ 
break  @ 108 @ break  @ 111 @ 
operator: (  @ 112 @ operator: (  @ 114 @ 
name: mesg  @ 45 @ name: mesg  @ 46 @ 
name  @ 74 @ name  @ 80 @ 
name: u  @ 133 @ name: u  @ 131 @ 
operator: .  @ 148 @ operator: .  @ 141 @ 
name: UINT32DECODE  @ 71 @ name: UINT32DECODE  @ 77 @ 
operator: (  @ 90 @ operator: (  @ 96 @ 
macro  @ 101 @ macro  @ 104 @ 
if  @ 78 @ if  @ 84 @ 
name: compact  @ 83 @ name: compact  @ 89 @ 
operator: .  @ 143 @ operator: .  @ 136 @ 
operator: .  @ 53 @ operator: .  @ 54 @ 
operator: =  @ 15 @ operator: =  @ 16 @ 
block_content  @ 101 @ block_content  @ 104 @ 
block  @ 88 @ block  @ 94 @ 
operator: ->  @ 22 @ operator: ->  @ 23 @ 
expr  @ 130 @ expr  @ 128 @ 
modifier: *  @ 3 @ modifier: *  @ 5 @ 
operator: (  @ 45 @ operator: (  @ 46 @ 
expr  @ 110 @ expr  @ 113 @ 
block  @ 133 @ block  @ 132 @ 
operator: >  @ 128 @ operator: >  @ 124 @ 
expr  @ 71 @ expr  @ 77 @ 
operator: ->  @ 19 @ operator: ->  @ 20 @ 
name: FUNC_ENTER_STATIC  @ 8 @ name: FUNC_ENTER_NOAPI_NOINIT  @ 9 @ 
block_content  @ 39 @ block_content  @ 40 @ 
name: mesg  @ 143 @ name: mesg  @ 136 @ 
operator: .  @ 39 @ operator: .  @ 40 @ 
name  @ 127 @ name  @ 123 @ 
name: H5D_COMPACT  @ 94 @ name: H5D_COMPACT  @ 100 @ 
name: HGOTO_ERROR  @ 20 @ name: HGOTO_ERROR  @ 21 @ 
operator: ->  @ 81 @ operator: ->  @ 87 @ 
expr  @ 15 @ expr  @ 16 @ 
expr  @ 3 @ expr  @ 5 @ 
operator: ->  @ 143 @ operator: ->  @ 136 @ 
name: unsigned  @ 5 @ name: unsigned  @ 6 @ 
name: mesg  @ 52 @ name: mesg  @ 53 @ 
argument_list  @ 45 @ argument_list  @ 46 @ 
name  @ 147 @ name  @ 140 @ 
decl_stmt  @ 23 @ decl_stmt  @ 24 @ 
name: u  @ 142 @ name: u  @ 135 @ 
name: u  @ 142 @ name: u  @ 135 @ 
operator: ++  @ 90 @ operator: ++  @ 96 @ 
operator: ++  @ 142 @ operator: ++  @ 135 @ 
call  @ 115 @ call  @ 115 @ 
name: size  @ 84 @ name: size  @ 90 @ 
name: chunk  @ 143 @ name: chunk  @ 136 @ 
operator: <  @ 142 @ operator: <  @ 135 @ 
block_content  @ 79 @ block_content  @ 85 @ 
literal: 0  @ 70 @ literal: 0  @ 76 @ 
name: mesg  @ 78 @ name: mesg  @ 84 @ 
expr_stmt  @ 233 @ expr_stmt  @ 144 @ 
operator: =  @ 148 @ operator: =  @ 141 @ 
name: H5D_CHUNKED  @ 44 @ name: H5D_CHUNKED  @ 45 @ 
operator: )  @ 15 @ operator: )  @ 16 @ 
operator: .  @ 74 @ operator: .  @ 80 @ 
name: H5F_t  @ 1 @ name: H5F_t  @ 2 @ 
name: p  @ 96 @ name: p  @ 101 @ 
expr_stmt  @ 127 @ expr_stmt  @ 123 @ 
control  @ 70 @ control  @ 76 @ 
operator: =  @ 26 @ operator: =  @ 27 @ 
expr  @ 142 @ expr  @ 135 @ 
block  @ 78 @ block  @ 84 @ 
block_content  @ 90 @ block_content  @ 96 @ 
name: mesg  @ 3 @ name: mesg  @ 5 @ 
operator: =  @ 233 @ operator: =  @ 144 @ 
name  @ 19 @ name  @ 20 @ 

