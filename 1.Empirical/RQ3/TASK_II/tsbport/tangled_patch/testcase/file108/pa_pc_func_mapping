operator: .  @ 144 @ operator: .  @ 184 @ 
argument_list  @ 146 @ argument_list  @ 186 @ 
name: compact  @ 146 @ name: compact  @ 186 @ 
block_content  @ 79 @ block_content  @ 114 @ 
modifier: *  @ 64 @ modifier: *  @ 100 @ 
decl  @ 24 @ decl  @ 41 @ 
name: compact  @ 159 @ name: compact  @ 198 @ 
include  @ 9 @ include  @ 25 @ 
argument  @ 145 @ argument  @ 185 @ 
file: "H5Opkg.h"  @ 15 @ file: "H5Opkg.h"  @ 31 @ 
name: p  @ 24 @ name: p  @ 41 @ 
for  @ 133 @ for  @ 173 @ 
name: H5O_t  @ 29 @ name: H5O_t  @ 46 @ 
expr_stmt  @ 120 @ expr_stmt  @ 155 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
comment: /* end if */  @ 130 @ comment: /* end if */  @ 170 @ 
argument  @ 83 @ argument  @ 118 @ 
name: storage  @ 102 @ name: storage  @ 137 @ 
operator: .  @ 205 @ operator: .  @ 237 @ 
name: p  @ 166 @ name: p  @ 203 @ 
expr  @ 221 @ expr  @ 342 @ 
name: recompute_size  @ 31 @ name: recompute_size  @ 49 @ 
operator: .  @ 205 @ operator: .  @ 237 @ 
operator: >  @ 143 @ operator: >  @ 183 @ 
name: type  @ 153 @ name: type  @ 476 @ 
argument_list  @ 193 @ argument_list  @ 225 @ 
operator: ->  @ 95 @ operator: ->  @ 472 @ 
modifier: *  @ 24 @ modifier: *  @ 41 @ 
comment: /* Read the size */  @ 126 @ comment: /* Read the size */  @ 161 @ 
init  @ 196 @ init  @ 228 @ 
expr_stmt  @ 197 @ expr_stmt  @ 229 @ 
argument  @ 175 @ argument  @ 211 @ 
modifier: *  @ 69 @ modifier: *  @ 591 @ 
specifier: const  @ 26 @ specifier: const  @ 43 @ 
operator: =  @ 133 @ operator: =  @ 173 @ 
name: u  @ 137 @ name: u  @ 177 @ 
decl  @ 31 @ decl  @ 48 @ 
type  @ 26 @ type  @ 43 @ 
operator: ->  @ 137 @ operator: ->  @ 177 @ 
name  @ 200 @ name  @ 232 @ 
name: storage  @ 193 @ name: storage  @ 225 @ 
block_content  @ 192 @ block_content  @ 222 @ 
block_content  @ 134 @ block_content  @ 174 @ 
expr  @ 127 @ expr  @ 162 @ 
expr_stmt  @ 170 @ expr_stmt  @ 207 @ 
name: H5D_LOPS_CHUNK  @ 111 @ name: H5D_LOPS_CHUNK  @ 146 @ 
modifier: *  @ 23 @ modifier: *  @ 39 @ 
operator: ->  @ 115 @ operator: ->  @ 150 @ 
name: mesg  @ 181 @ name: mesg  @ 215 @ 
name: void  @ 29 @ name: void  @ 47 @ 
expr  @ 133 @ expr  @ 173 @ 
operator: !=  @ 127 @ operator: !=  @ 162 @ 
name: u  @ 200 @ name: u  @ 232 @ 
parameter  @ 64 @ parameter  @ 100 @ 
name: p  @ 91 @ name: p  @ 129 @ 
expr  @ 133 @ expr  @ 173 @ 
operator: >  @ 82 @ operator: >  @ 117 @ 
name: storage  @ 146 @ name: storage  @ 186 @ 
name: size  @ 144 @ name: size  @ 184 @ 
operator: ->  @ 221 @ operator: ->  @ 342 @ 
incr  @ 220 @ incr  @ 341 @ 
expr  @ 108 @ expr  @ 143 @ 
name: mesg  @ 66 @ name: mesg  @ 102 @ 
expr_stmt  @ 205 @ expr_stmt  @ 237 @ 
argument  @ 92 @ argument  @ 130 @ 
name: unsigned  @ 23 @ name: unsigned  @ 40 @ 
block_content  @ 142 @ block_content  @ 182 @ 
name: u  @ 200 @ name: u  @ 232 @ 
decl  @ 24 @ decl  @ 41 @ 
modifier: *  @ 29 @ modifier: *  @ 46 @ 
argument  @ 164 @ argument  @ 201 @ 
name: mesg  @ 206 @ name: mesg  @ 238 @ 
operator: ++  @ 133 @ operator: ++  @ 173 @ 
operator: =  @ 91 @ operator: =  @ 129 @ 
name  @ 190 @ name  @ 220 @ 
name: HGOTO_ERROR  @ 145 @ name: HGOTO_ERROR  @ 185 @ 
type  @ 68 @ type  @ 103 @ 
operator: &  @ 193 @ operator: &  @ 225 @ 
include  @ 16 @ include  @ 32 @ 
name: u  @ 221 @ name: u  @ 342 @ 
operator: <  @ 137 @ operator: <  @ 177 @ 
decl  @ 29 @ decl  @ 51 @ 
operator: ->  @ 143 @ operator: ->  @ 183 @ 
operator: ==  @ 163 @ operator: ==  @ 200 @ 
type  @ 69 @ type  @ 591 @ 
condition  @ 161 @ condition  @ 199 @ 
type  @ 31 @ type  @ 48 @ 
name  @ 134 @ name  @ 174 @ 
name  @ 165 @ name  @ 202 @ 
name: chunk  @ 201 @ name: chunk  @ 233 @ 
include  @ 12 @ include  @ 28 @ 
operator: .  @ 216 @ operator: .  @ 335 @ 
argument  @ 192 @ argument  @ 222 @ 
expr  @ 129 @ expr  @ 169 @ 
case  @ 173 @ case  @ 210 @ 
name: p  @ 102 @ name: p  @ 137 @ 
break  @ 279 @ break  @ 242 @ 
name: H5O_layout_t  @ 60 @ name: H5O_layout_t  @ 80 @ 
name  @ 92 @ name  @ 130 @ 
name: dim  @ 137 @ name: dim  @ 177 @ 
name: type  @ 92 @ name: type  @ 130 @ 
specifier: const  @ 35 @ specifier: const  @ 55 @ 
operator: ==  @ 78 @ operator: ==  @ 113 @ 
operator: )  @ 108 @ operator: )  @ 143 @ 
name: hbool_t  @ 24 @ name: hbool_t  @ 41 @ 
operator: =  @ 181 @ operator: =  @ 215 @ 
operator: .  @ 201 @ operator: .  @ 233 @ 
operator: .  @ 230 @ operator: .  @ 719 @ 
parameter  @ 24 @ parameter  @ 41 @ 
name: void  @ 69 @ name: void  @ 591 @ 
operator: =  @ 220 @ operator: =  @ 341 @ 
decl  @ 26 @ decl  @ 43 @ 
argument_list  @ 60 @ argument_list  @ 80 @ 
comment: /* end if */  @ 150 @ comment: /* end if */  @ 190 @ 
name  @ 146 @ name  @ 186 @ 
macro  @ 79 @ macro  @ 114 @ 
argument_list  @ 92 @ argument_list  @ 130 @ 
parameter  @ 24 @ parameter  @ 41 @ 
name: size  @ 137 @ name: size  @ 177 @ 
name: storage  @ 206 @ name: storage  @ 238 @ 
parameter  @ 29 @ parameter  @ 51 @ 
expr  @ 291 @ expr  @ 241 @ 
operator: ->  @ 161 @ operator: ->  @ 199 @ 
operator: ++  @ 153 @ operator: ++  @ 193 @ 
name: mesg  @ 82 @ name: mesg  @ 117 @ 
block_content  @ 66 @ block_content  @ 102 @ 
name: mesg  @ 138 @ name: mesg  @ 178 @ 
name: chunk  @ 200 @ name: chunk  @ 232 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
name  @ 144 @ name  @ 184 @ 
name: p  @ 273 @ name: p  @ 329 @ 
name: ops  @ 291 @ name: ops  @ 241 @ 
name: type  @ 95 @ name: type  @ 472 @ 
argument  @ 221 @ argument  @ 342 @ 
literal: "memory allocation failed for compact data buffer"  @ 164 @ literal: "memory allocation failed for compact data buffer"  @ 201 @ 
name  @ 205 @ name  @ 237 @ 
case  @ 157 @ case  @ 197 @ 
expr_stmt  @ 190 @ expr_stmt  @ 220 @ 
modifier: *  @ 25 @ modifier: *  @ 42 @ 
operator: .  @ 166 @ operator: .  @ 203 @ 
expr_stmt  @ 129 @ expr_stmt  @ 169 @ 
block  @ 141 @ block  @ 181 @ 
name: ops  @ 181 @ name: ops  @ 215 @ 
decl  @ 31 @ decl  @ 48 @ 
name: storage  @ 142 @ name: storage  @ 182 @ 
name: herr_t  @ 24 @ name: herr_t  @ 41 @ 
expr  @ 200 @ expr  @ 232 @ 
operator: .  @ 161 @ operator: .  @ 199 @ 
block  @ 85 @ block  @ 120 @ 
modifier: *  @ 29 @ modifier: *  @ 51 @ 
expr  @ 273 @ expr  @ 329 @ 
expr  @ 60 @ expr  @ 80 @ 
operator: *  @ 91 @ operator: *  @ 129 @ 
name: f  @ 298 @ name: f  @ 555 @ 
name: u  @ 200 @ name: u  @ 232 @ 
modifier: *  @ 29 @ modifier: *  @ 47 @ 
expr  @ 221 @ expr  @ 342 @ 
name: chunk  @ 138 @ name: chunk  @ 178 @ 
name: FILE  @ 32 @ name: FILE  @ 51 @ 
operator: ->  @ 197 @ operator: ->  @ 229 @ 
modifier: *  @ 27 @ modifier: *  @ 45 @ 
name: indent  @ 32 @ name: indent  @ 52 @ 
operator: .  @ 144 @ operator: .  @ 184 @ 
name: p  @ 89 @ name: p  @ 124 @ 
operator: )  @ 153 @ operator: )  @ 193 @ 
comment: /* end if */  @ 106 @ comment: /* end if */  @ 141 @ 
name: mesg  @ 200 @ name: mesg  @ 232 @ 
name: u  @ 220 @ name: u  @ 341 @ 
name: H5D_CHUNK_IDX_BTREE  @ 205 @ name: H5D_CHUNK_BTREE  @ 237 @ 
expr_stmt  @ 89 @ expr_stmt  @ 124 @ 
name: u  @ 200 @ name: u  @ 232 @ 
name: u  @ 108 @ name: u  @ 143 @ 
incr  @ 196 @ incr  @ 228 @ 
block  @ 134 @ block  @ 174 @ 
modifier: *  @ 64 @ modifier: *  @ 98 @ 
decl  @ 25 @ decl  @ 42 @ 
name  @ 82 @ name  @ 117 @ 
name: p  @ 142 @ name: p  @ 182 @ 
expr  @ 175 @ expr  @ 211 @ 
comment: /* check args */  @ 73 @ comment: /* check args */  @ 536 @ 
block  @ 91 @ block  @ 126 @ 
expr  @ 146 @ expr  @ 186 @ 
modifier: *  @ 67 @ modifier: *  @ 292 @ 
expr  @ 243 @ expr  @ 315 @ 
name: u  @ 137 @ name: u  @ 177 @ 
incr  @ 133 @ incr  @ 173 @ 
expr  @ 89 @ expr  @ 124 @ 
call  @ 175 @ call  @ 211 @ 
operator: ->  @ 200 @ operator: ->  @ 232 @ 
literal: 0  @ 161 @ literal: 0  @ 199 @ 
expr  @ 82 @ expr  @ 117 @ 
name  @ 102 @ name  @ 137 @ 
operator: (  @ 144 @ operator: (  @ 184 @ 
expr  @ 49 @ expr  @ 69 @ 
argument  @ 192 @ argument  @ 222 @ 
name: mesg  @ 159 @ name: mesg  @ 198 @ 
name  @ 201 @ name  @ 233 @ 
specifier: static  @ 30 @ specifier: static  @ 44 @ 
name: mesg  @ 143 @ name: mesg  @ 183 @ 
operator: ==  @ 101 @ operator: ==  @ 136 @ 
expr  @ 102 @ expr  @ 137 @ 
name: p  @ 64 @ name: p  @ 100 @ 
name: file_dst  @ 31 @ name: file_dst  @ 49 @ 
name: size  @ 178 @ name: size  @ 212 @ 
expr  @ 220 @ expr  @ 341 @ 
macro  @ 145 @ macro  @ 185 @ 
type  @ 25 @ type  @ 42 @ 
call  @ 163 @ call  @ 200 @ 
type  @ 24 @ type  @ 41 @ 
operator: +=  @ 166 @ operator: +=  @ 203 @ 
expr  @ 323 @ expr  @ 549 @ 
argument  @ 298 @ argument  @ 555 @ 
decl  @ 71 @ decl  @ 534 @ 
name: f  @ 178 @ name: f  @ 212 @ 
decl  @ 23 @ decl  @ 39 @ 
expr  @ 54 @ expr  @ 74 @ 
type  @ 24 @ type  @ 41 @ 
name: mesg  @ 161 @ name: mesg  @ 199 @ 
name: u  @ 190 @ name: u  @ 220 @ 
argument  @ 178 @ argument  @ 212 @ 
name: u  @ 161 @ name: u  @ 199 @ 
name: void  @ 32 @ name: void  @ 51 @ 
operator: ++  @ 200 @ operator: ++  @ 232 @ 
operator: (  @ 91 @ operator: (  @ 129 @ 
operator: ->  @ 92 @ operator: ->  @ 130 @ 
directive: include  @ 14 @ directive: include  @ 30 @ 
name  @ 220 @ name  @ 341 @ 
expr  @ 102 @ expr  @ 137 @ 
operator: ->  @ 216 @ operator: ->  @ 335 @ 
name: mesg  @ 102 @ name: mesg  @ 137 @ 
name  @ 200 @ name  @ 232 @ 
name: mesg  @ 82 @ name: mesg  @ 117 @ 
name: type  @ 120 @ name: type  @ 155 @ 
argument  @ 243 @ argument  @ 315 @ 
name: unsigned  @ 86 @ name: unsigned  @ 121 @ 
name: f  @ 102 @ name: f  @ 137 @ 
expr  @ 165 @ expr  @ 202 @ 
name: void  @ 31 @ name: void  @ 48 @ 
name: compact  @ 165 @ name: compact  @ 202 @ 
name: _dest  @ 25 @ name: _dest  @ 42 @ 
function_decl  @ 31 @ function_decl  @ 48 @ 
name: u  @ 132 @ name: u  @ 172 @ 
name: u  @ 193 @ name: u  @ 225 @ 
literal: "memory allocation failed for compact data buffer"  @ 145 @ literal: "memory allocation failed for compact data buffer"  @ 185 @ 
name: HGOTO_ERROR  @ 83 @ name: HGOTO_ERROR  @ 118 @ 
name: dim  @ 201 @ name: dim  @ 233 @ 
if  @ 85 @ if  @ 120 @ 
expr  @ 197 @ expr  @ 229 @ 
expr_stmt  @ 175 @ expr_stmt  @ 211 @ 
name: compact  @ 144 @ name: compact  @ 184 @ 
type  @ 29 @ type  @ 47 @ 
name: H5F_addr_decode  @ 175 @ name: H5F_addr_decode  @ 211 @ 
name: u  @ 142 @ name: u  @ 182 @ 
argument_list  @ 134 @ argument_list  @ 174 @ 
expr  @ 52 @ expr  @ 72 @ 
parameter_list  @ 31 @ parameter_list  @ 48 @ 
name: H5MM_malloc  @ 163 @ name: H5MM_malloc  @ 200 @ 
name: type  @ 101 @ name: type  @ 136 @ 
if  @ 141 @ if  @ 181 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
type  @ 25 @ type  @ 42 @ 
name: u  @ 68 @ name: u  @ 103 @ 
operator: ->  @ 156 @ operator: ->  @ 196 @ 
operator: )  @ 163 @ operator: )  @ 200 @ 
function_decl  @ 29 @ function_decl  @ 46 @ 
type  @ 23 @ type  @ 40 @ 
block_content  @ 201 @ block_content  @ 233 @ 
argument_list  @ 221 @ argument_list  @ 342 @ 
type  @ 30 @ type  @ 583 @ 
argument  @ 323 @ argument  @ 549 @ 
argument  @ 197 @ argument  @ 229 @ 
name: storage  @ 166 @ name: storage  @ 203 @ 
parameter  @ 25 @ parameter  @ 42 @ 
name: H5O_LAYOUT_ID  @ 36 @ name: H5O_LAYOUT_ID  @ 56 @ 
specifier: const  @ 24 @ specifier: const  @ 41 @ 
name: _mesg  @ 27 @ name: _mesg  @ 45 @ 
name: H5D_layout_t  @ 91 @ name: H5D_layout_t  @ 129 @ 
operator: .  @ 143 @ operator: .  @ 183 @ 
operator: =  @ 78 @ operator: =  @ 113 @ 
operator: ->  @ 147 @ operator: ->  @ 187 @ 
expr  @ 47 @ expr  @ 67 @ 
expr  @ 216 @ expr  @ 335 @ 
name: mesg  @ 141 @ name: mesg  @ 181 @ 
operator: ||  @ 82 @ operator: ||  @ 117 @ 
expr  @ 170 @ expr  @ 207 @ 
name: open_oh  @ 23 @ name: open_oh  @ 39 @ 
argument  @ 273 @ argument  @ 329 @ 
type  @ 23 @ type  @ 40 @ 
name: ops  @ 206 @ name: ops  @ 238 @ 
name: u  @ 146 @ name: u  @ 186 @ 
expr_stmt  @ 116 @ expr_stmt  @ 151 @ 
expr  @ 175 @ expr  @ 211 @ 
name: file_src  @ 30 @ name: file_src  @ 583 @ 
expr_stmt  @ 146 @ expr_stmt  @ 186 @ 
break  @ 182 @ break  @ 216 @ 
parameter_list  @ 28 @ parameter_list  @ 44 @ 
specifier: const  @ 25 @ specifier: const  @ 42 @ 
name  @ 178 @ name  @ 212 @ 
expr  @ 159 @ expr  @ 198 @ 
name: storage  @ 165 @ name: storage  @ 202 @ 
operator: ->  @ 181 @ operator: ->  @ 215 @ 
argument_list  @ 175 @ argument_list  @ 211 @ 
name: mesg  @ 166 @ name: mesg  @ 203 @ 
block  @ 161 @ block  @ 199 @ 
name: disable_shared  @ 24 @ name: disable_shared  @ 41 @ 
name: size  @ 200 @ name: size  @ 232 @ 
name: u  @ 230 @ name: u  @ 719 @ 
expr  @ 221 @ expr  @ 342 @ 
operator: &  @ 102 @ operator: &  @ 137 @ 
name: H5O_layout_t  @ 38 @ name: H5O_layout_t  @ 58 @ 
operator: =  @ 137 @ operator: =  @ 177 @ 
control  @ 137 @ control  @ 177 @ 
condition  @ 163 @ condition  @ 200 @ 
expr_stmt  @ 166 @ expr_stmt  @ 203 @ 
operator: .  @ 161 @ operator: .  @ 199 @ 
type  @ 32 @ type  @ 52 @ 
argument  @ 79 @ argument  @ 114 @ 
comment: /* Skip over dimension sizes (32-bit quantities) */  @ 129 @ comment: /* Skip over dimension sizes (32-bit quantities) */  @ 169 @ 
expr  @ 193 @ expr  @ 225 @ 
file: "H5Dpkg.h"  @ 10 @ file: "H5Dpkg.h"  @ 26 @ 
expr  @ 184 @ expr  @ 218 @ 
name: p  @ 75 @ name: p  @ 110 @ 
expr  @ 102 @ expr  @ 137 @ 
name: unsigned  @ 23 @ name: unsigned  @ 40 @ 
name: mesg  @ 144 @ name: mesg  @ 184 @ 
operator: >  @ 90 @ operator: >  @ 125 @ 
name: H5O__layout_copy  @ 25 @ name: H5O_layout_copy  @ 42 @ 
operator: .  @ 115 @ operator: .  @ 150 @ 
operator: ++  @ 81 @ operator: ++  @ 116 @ 
name: ndims  @ 200 @ name: ndims  @ 232 @ 
operator: .  @ 196 @ operator: .  @ 228 @ 
expr  @ 193 @ expr  @ 225 @ 
operator: ->  @ 101 @ operator: ->  @ 136 @ 
if  @ 82 @ if  @ 117 @ 
argument_list  @ 297 @ argument_list  @ 245 @ 
literal: 0  @ 220 @ literal: 0  @ 341 @ 
type  @ 31 @ type  @ 48 @ 
if_stmt  @ 163 @ if_stmt  @ 200 @ 
name: u  @ 134 @ name: u  @ 174 @ 
expr  @ 137 @ expr  @ 177 @ 
parameter  @ 28 @ parameter  @ 44 @ 
name: H5D_COMPACT  @ 141 @ name: H5D_COMPACT  @ 181 @ 
type  @ 64 @ type  @ 100 @ 
operator: ->  @ 153 @ operator: ->  @ 476 @ 
name: p  @ 147 @ name: p  @ 187 @ 
name: NULL  @ 163 @ name: NULL  @ 200 @ 
operator: &  @ 175 @ operator: &  @ 211 @ 
index  @ 35 @ index  @ 55 @ 
incr  @ 137 @ incr  @ 177 @ 
expr  @ 161 @ expr  @ 199 @ 
control  @ 200 @ control  @ 232 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
type  @ 25 @ type  @ 42 @ 
operator: ==  @ 92 @ operator: ==  @ 130 @ 
decl_stmt  @ 69 @ decl_stmt  @ 591 @ 
operator: .  @ 144 @ operator: .  @ 184 @ 
operator: ->  @ 81 @ operator: ->  @ 116 @ 
name: void  @ 64 @ name: void  @ 98 @ 
name: ndims  @ 220 @ name: ndims  @ 341 @ 
argument  @ 323 @ argument  @ 383 @ 
init  @ 200 @ init  @ 232 @ 
operator: ->  @ 102 @ operator: ->  @ 137 @ 
name: size  @ 161 @ name: size  @ 199 @ 
parameter  @ 31 @ parameter  @ 48 @ 
name: p  @ 159 @ name: p  @ 198 @ 
break  @ 171 @ break  @ 208 @ 
literal: "layout"  @ 37 @ literal: "layout"  @ 57 @ 
name: cpy_info  @ 31 @ name: cpy_info  @ 49 @ 
name: f  @ 242 @ name: f  @ 328 @ 
name: type  @ 91 @ name: type  @ 129 @ 
modifier: *  @ 30 @ modifier: *  @ 583 @ 
parameter  @ 26 @ parameter  @ 43 @ 
argument  @ 83 @ argument  @ 118 @ 
block_content  @ 163 @ block_content  @ 200 @ 
operator: ->  @ 193 @ operator: ->  @ 225 @ 
operator: .  @ 147 @ operator: .  @ 187 @ 
argument_list  @ 108 @ argument_list  @ 143 @ 
operator: .  @ 193 @ operator: .  @ 225 @ 
argument_list  @ 83 @ argument_list  @ 118 @ 
name: chunk  @ 116 @ name: chunk  @ 151 @ 
name: mesg  @ 205 @ name: mesg  @ 237 @ 
name: compact  @ 166 @ name: compact  @ 203 @ 
argument_list  @ 197 @ argument_list  @ 229 @ 
literal: 1  @ 200 @ literal: 1  @ 232 @ 
modifier: *  @ 66 @ modifier: *  @ 102 @ 
operator: *=  @ 201 @ operator: *=  @ 233 @ 
expr  @ 153 @ expr  @ 193 @ 
expr  @ 163 @ expr  @ 200 @ 
operator: ->  @ 132 @ operator: ->  @ 172 @ 
name: buf  @ 163 @ name: buf  @ 200 @ 
expr  @ 134 @ expr  @ 174 @ 
function_decl  @ 27 @ function_decl  @ 45 @ 
for  @ 200 @ for  @ 232 @ 
name: u  @ 143 @ name: u  @ 183 @ 
index  @ 200 @ index  @ 232 @ 
block  @ 197 @ block  @ 229 @ 
if_stmt  @ 90 @ if_stmt  @ 125 @ 
name  @ 185 @ name  @ 693 @ 
name: u  @ 201 @ name: u  @ 233 @ 
macro  @ 164 @ macro  @ 201 @ 
operator: .  @ 147 @ operator: .  @ 187 @ 
name: u  @ 220 @ name: u  @ 341 @ 
name: int  @ 32 @ name: int  @ 52 @ 
expr  @ 197 @ expr  @ 229 @ 
name  @ 116 @ name  @ 151 @ 
operator: ++  @ 220 @ operator: ++  @ 341 @ 
name  @ 181 @ name  @ 215 @ 
block  @ 164 @ block  @ 201 @ 
block_content  @ 221 @ block_content  @ 342 @ 
decl  @ 32 @ decl  @ 52 @ 
name: storage  @ 163 @ name: storage  @ 200 @ 
argument_list  @ 163 @ argument_list  @ 200 @ 
operator: =  @ 163 @ operator: =  @ 200 @ 
parameter  @ 31 @ parameter  @ 49 @ 
operator: .  @ 220 @ operator: .  @ 341 @ 
operator: =  @ 144 @ operator: =  @ 184 @ 
expr  @ 205 @ expr  @ 237 @ 
modifier: *  @ 31 @ modifier: *  @ 50 @ 
expr  @ 191 @ expr  @ 221 @ 
parameter  @ 31 @ parameter  @ 49 @ 
operator: *  @ 190 @ operator: *  @ 220 @ 
modifier: *  @ 31 @ modifier: *  @ 49 @ 
index  @ 138 @ index  @ 178 @ 
name: open_oh  @ 29 @ name: open_oh  @ 46 @ 
type  @ 29 @ type  @ 45 @ 
name: version  @ 185 @ name: version  @ 693 @ 
default  @ 282 @ default  @ 244 @ 
operator: ->  @ 166 @ operator: ->  @ 203 @ 
operator: ++  @ 190 @ operator: ++  @ 220 @ 
argument_list  @ 144 @ argument_list  @ 184 @ 
name: UINT64DECODE_VAR  @ 221 @ name: UINT32ENCODE  @ 342 @ 
name: u  @ 206 @ name: u  @ 238 @ 
type  @ 26 @ type  @ 43 @ 
name: size  @ 163 @ name: size  @ 200 @ 
name: mesg  @ 197 @ name: mesg  @ 229 @ 
operator: =  @ 196 @ operator: =  @ 228 @ 
argument  @ 297 @ argument  @ 245 @ 
name: u  @ 134 @ name: u  @ 174 @ 
name: p  @ 242 @ name: p  @ 320 @ 
name: compact  @ 147 @ name: compact  @ 187 @ 
name: p  @ 221 @ name: p  @ 342 @ 
name: addr  @ 175 @ name: addr  @ 211 @ 
expr  @ 108 @ expr  @ 143 @ 
operator: ->  @ 185 @ operator: ->  @ 693 @ 
operator: ->  @ 159 @ operator: ->  @ 198 @ 
call  @ 92 @ call  @ 130 @ 
argument_list  @ 75 @ argument_list  @ 110 @ 
operator: .  @ 178 @ operator: .  @ 212 @ 
decl  @ 86 @ decl  @ 121 @ 
name: H5O_copy_t  @ 31 @ name: H5O_copy_t  @ 49 @ 
expr  @ 142 @ expr  @ 182 @ 
operator: ->  @ 138 @ operator: ->  @ 178 @ 
name  @ 221 @ name  @ 342 @ 
macro  @ 297 @ macro  @ 245 @ 
expr  @ 35 @ expr  @ 55 @ 
argument  @ 175 @ argument  @ 211 @ 
parameter  @ 31 @ parameter  @ 48 @ 
block_content  @ 83 @ block_content  @ 118 @ 
block  @ 83 @ block  @ 118 @ 
name: uint8_t  @ 64 @ name: uint8_t  @ 100 @ 
operator: .  @ 190 @ operator: .  @ 220 @ 
name: chunk  @ 205 @ name: chunk  @ 237 @ 
name: storage  @ 161 @ name: storage  @ 199 @ 
operator: ->  @ 116 @ operator: ->  @ 151 @ 
argument  @ 144 @ argument  @ 184 @ 
name: H5D_LOPS_COMPACT  @ 170 @ name: H5D_LOPS_COMPACT  @ 207 @ 
call  @ 142 @ call  @ 182 @ 
name: chunk  @ 221 @ name: chunk  @ 342 @ 
name: storage  @ 175 @ name: storage  @ 211 @ 
argument  @ 192 @ argument  @ 222 @ 
name: HDassert  @ 74 @ name: HDassert  @ 537 @ 
name: H5O_msg_class_t  @ 35 @ name: H5O_msg_class_t  @ 55 @ 
operator: .  @ 144 @ operator: .  @ 184 @ 
name: f  @ 29 @ name: f  @ 51 @ 
call  @ 178 @ call  @ 212 @ 
argument_list  @ 74 @ argument_list  @ 537 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
argument  @ 165 @ argument  @ 202 @ 
name  @ 123 @ name  @ 158 @ 
specifier: static  @ 27 @ specifier: static  @ 51 @ 
if_stmt  @ 127 @ if_stmt  @ 162 @ 
expr_stmt  @ 201 @ expr_stmt  @ 233 @ 
operator: ->  @ 291 @ operator: ->  @ 241 @ 
decl  @ 31 @ decl  @ 49 @ 
init  @ 66 @ init  @ 102 @ 
init  @ 133 @ init  @ 173 @ 
modifier: *  @ 31 @ modifier: *  @ 48 @ 
operator: <  @ 200 @ operator: <  @ 232 @ 
name: HGOTO_ERROR  @ 192 @ name: HGOTO_ERROR  @ 222 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
operator: ->  @ 85 @ operator: ->  @ 120 @ 
argument  @ 159 @ argument  @ 198 @ 
block_content  @ 120 @ block_content  @ 155 @ 
modifier: *  @ 64 @ modifier: *  @ 529 @ 
name  @ 206 @ name  @ 238 @ 
name  @ 111 @ name  @ 146 @ 
modifier: *  @ 26 @ modifier: *  @ 43 @ 
argument  @ 221 @ argument  @ 342 @ 
name  @ 101 @ name  @ 136 @ 
name: u  @ 102 @ name: u  @ 137 @ 
expr  @ 134 @ expr  @ 174 @ 
name  @ 91 @ name  @ 129 @ 
name: mesg  @ 137 @ name: mesg  @ 177 @ 
argument  @ 146 @ argument  @ 186 @ 
comment: /* Dimensionality */  @ 189 @ comment: /* Dimensionality */  @ 219 @ 
operator: )  @ 78 @ operator: )  @ 113 @ 
expr  @ 175 @ expr  @ 211 @ 
operator: *  @ 89 @ operator: *  @ 124 @ 
operator: .  @ 161 @ operator: .  @ 199 @ 
expr  @ 39 @ expr  @ 59 @ 
expr  @ 134 @ expr  @ 174 @ 
type  @ 23 @ type  @ 39 @ 
name: UINT32DECODE  @ 134 @ name: UINT32DECODE  @ 174 @ 
name: ops  @ 123 @ name: ops  @ 158 @ 
name: p  @ 178 @ name: p  @ 212 @ 
decl  @ 25 @ decl  @ 42 @ 
name: mesg  @ 175 @ name: mesg  @ 211 @ 
name: ndims  @ 90 @ name: ndims  @ 125 @ 
expr  @ 53 @ expr  @ 73 @ 
name: ndims  @ 216 @ name: ndims  @ 335 @ 
specifier: const  @ 64 @ specifier: const  @ 100 @ 
name: _mesg  @ 26 @ name: _mesg  @ 43 @ 
name: u  @ 163 @ name: u  @ 200 @ 
argument  @ 108 @ argument  @ 143 @ 
name: H5D_CHUNKED  @ 184 @ name: H5D_CHUNKED  @ 218 @ 
condition  @ 90 @ condition  @ 125 @ 
name: H5O_LAYOUT_VERSION_1  @ 82 @ name: H5O_LAYOUT_VERSION_1  @ 117 @ 
name  @ 163 @ name  @ 200 @ 
name: fwidth  @ 32 @ name: fwidth  @ 52 @ 
condition  @ 141 @ condition  @ 181 @ 
type  @ 27 @ type  @ 45 @ 
decl  @ 64 @ decl  @ 100 @ 
operator: &  @ 175 @ operator: &  @ 211 @ 
modifier: *  @ 23 @ modifier: *  @ 39 @ 
type  @ 24 @ type  @ 41 @ 
parameter  @ 23 @ parameter  @ 40 @ 
operator: .  @ 166 @ operator: .  @ 203 @ 
if  @ 191 @ if  @ 221 @ 
expr  @ 120 @ expr  @ 155 @ 
name: p  @ 298 @ name: p  @ 338 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
operator: ->  @ 105 @ operator: ->  @ 140 @ 
operator: =  @ 89 @ operator: =  @ 124 @ 
operator: ->  @ 220 @ operator: ->  @ 341 @ 
operator: ->  @ 146 @ operator: ->  @ 186 @ 
operator: ++  @ 137 @ operator: ++  @ 177 @ 
name: dim  @ 197 @ name: dim  @ 229 @ 
expr  @ 137 @ expr  @ 177 @ 
name: storage  @ 108 @ name: storage  @ 143 @ 
name: _mesg  @ 32 @ name: _mesg  @ 51 @ 
name: storage  @ 163 @ name: storage  @ 200 @ 
decl  @ 23 @ decl  @ 40 @ 
type  @ 27 @ type  @ 51 @ 
name: H5D_CHUNKED  @ 107 @ name: H5D_CHUNKED  @ 142 @ 
name: H5O__layout_delete  @ 29 @ name: H5O_layout_delete  @ 46 @ 
name: UINT16DECODE  @ 159 @ name: UINT16DECODE  @ 198 @ 
specifier: static  @ 28 @ specifier: static  @ 46 @ 
name: mesg  @ 201 @ name: mesg  @ 233 @ 
name: _mesg  @ 25 @ name: _mesg  @ 42 @ 
expr  @ 137 @ expr  @ 177 @ 
operator: ->  @ 175 @ operator: ->  @ 211 @ 
name: H5F_t  @ 31 @ name: H5F_t  @ 48 @ 
parameter_list  @ 32 @ parameter_list  @ 51 @ 
expr  @ 38 @ expr  @ 58 @ 
argument  @ 193 @ argument  @ 225 @ 
operator: ->  @ 123 @ operator: ->  @ 158 @ 
type  @ 66 @ type  @ 102 @ 
argument  @ 175 @ argument  @ 211 @ 
name: idx_type  @ 230 @ name: idx_type  @ 719 @ 
modifier: *  @ 26 @ modifier: *  @ 43 @ 
name: type  @ 127 @ name: type  @ 162 @ 
name: u  @ 191 @ name: u  @ 221 @ 
specifier: static  @ 29 @ specifier: static  @ 45 @ 
name: p  @ 129 @ name: p  @ 169 @ 
expr_stmt  @ 98 @ expr_stmt  @ 133 @ 
name: version  @ 81 @ name: version  @ 116 @ 
expr  @ 298 @ expr  @ 338 @ 
name: hbool_t  @ 31 @ name: hbool_t  @ 49 @ 
comment: /* Set the chunk operations */  @ 246 @ comment: /* Set the layout operations */  @ 240 @ 
if_stmt  @ 85 @ if_stmt  @ 120 @ 
type  @ 26 @ type  @ 43 @ 
expr_stmt  @ 91 @ expr_stmt  @ 129 @ 
name: ops  @ 105 @ name: ops  @ 140 @ 
expr  @ 134 @ expr  @ 174 @ 
name: f  @ 74 @ name: f  @ 537 @ 
argument_list  @ 78 @ argument_list  @ 113 @ 
operator: .  @ 190 @ operator: .  @ 220 @ 
index  @ 201 @ index  @ 233 @ 
expr_stmt  @ 92 @ expr_stmt  @ 130 @ 
init  @ 67 @ init  @ 589 @ 
name: p  @ 98 @ name: p  @ 133 @ 
decl  @ 32 @ decl  @ 46 @ 
operator: .  @ 143 @ operator: .  @ 183 @ 
index  @ 134 @ index  @ 174 @ 
init  @ 137 @ init  @ 177 @ 
name: mesg  @ 190 @ name: mesg  @ 220 @ 
operator: .  @ 175 @ operator: .  @ 211 @ 
name: uint8_t  @ 24 @ name: uint8_t  @ 41 @ 
operator: =  @ 170 @ operator: =  @ 207 @ 
operator: .  @ 159 @ operator: .  @ 198 @ 
if_stmt  @ 141 @ if_stmt  @ 181 @ 
operator: ->  @ 108 @ operator: ->  @ 143 @ 
control  @ 133 @ control  @ 173 @ 
operator: ->  @ 230 @ operator: ->  @ 719 @ 
comment: /* end if */  @ 149 @ comment: /* end if */  @ 189 @ 
argument  @ 79 @ argument  @ 114 @ 
operator: .  @ 144 @ operator: .  @ 184 @ 
expr  @ 200 @ expr  @ 232 @ 
modifier: *  @ 24 @ modifier: *  @ 41 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
operator: ->  @ 127 @ operator: ->  @ 162 @ 
parameter  @ 32 @ parameter  @ 51 @ 
include  @ 11 @ include  @ 27 @ 
operator: ->  @ 144 @ operator: ->  @ 184 @ 
specifier: static  @ 31 @ specifier: static  @ 48 @ 
name: H5D_CHUNKED  @ 92 @ name: H5D_CHUNKED  @ 130 @ 
call  @ 102 @ call  @ 137 @ 
operator: +=  @ 98 @ operator: +=  @ 133 @ 
name: mesg  @ 127 @ name: mesg  @ 162 @ 
for  @ 137 @ for  @ 177 @ 
operator: .  @ 138 @ operator: .  @ 178 @ 
name: p  @ 146 @ name: p  @ 186 @ 
file: "H5private.h"  @ 9 @ file: "H5private.h"  @ 25 @ 
name: file_src  @ 31 @ name: file_src  @ 48 @ 
block  @ 143 @ block  @ 183 @ 
name  @ 170 @ name  @ 207 @ 
name: heap_block  @ 67 @ name: p  @ 292 @ 
name: dim  @ 221 @ name: dim  @ 342 @ 
name: H5F_t  @ 30 @ name: H5F_t  @ 583 @ 
name: mesg  @ 111 @ name: mesg  @ 146 @ 
operator: .  @ 159 @ operator: .  @ 198 @ 
name: mesg  @ 81 @ name: mesg  @ 116 @ 
name: compact  @ 161 @ name: compact  @ 199 @ 
case  @ 184 @ case  @ 218 @ 
operator: =  @ 200 @ operator: =  @ 232 @ 
argument  @ 145 @ argument  @ 185 @ 
name  @ 82 @ name  @ 117 @ 
operator: =  @ 132 @ operator: =  @ 172 @ 
name: mesg  @ 142 @ name: mesg  @ 182 @ 
operator: .  @ 138 @ operator: .  @ 178 @ 
directive: include  @ 13 @ directive: include  @ 29 @ 
decl  @ 24 @ decl  @ 41 @ 
name  @ 107 @ name  @ 142 @ 
decl  @ 29 @ decl  @ 46 @ 
name  @ 200 @ name  @ 232 @ 
name: NULL  @ 54 @ name: NULL  @ 74 @ 
expr_stmt  @ 221 @ expr_stmt  @ 342 @ 
comment: /* Interpret the rest of the message according to the layout class */  @ 155 @ comment: /* Interpret the rest of the message according to the layout class */  @ 195 @ 
if  @ 90 @ if  @ 125 @ 
operator: <  @ 196 @ operator: <  @ 228 @ 
argument  @ 38 @ argument  @ 58 @ 
argument  @ 145 @ argument  @ 185 @ 
modifier: *  @ 24 @ modifier: *  @ 41 @ 
directive: include  @ 10 @ directive: include  @ 26 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
name: storage  @ 144 @ name: storage  @ 184 @ 
name: u  @ 220 @ name: u  @ 341 @ 
operator: ==  @ 92 @ operator: ==  @ 130 @ 
name: H5F_t  @ 24 @ name: H5F_t  @ 41 @ 
argument  @ 108 @ argument  @ 143 @ 
expr  @ 242 @ expr  @ 328 @ 
type  @ 26 @ type  @ 43 @ 
operator: .  @ 142 @ operator: .  @ 182 @ 
name: H5O__layout_debug  @ 32 @ name: H5O_layout_debug  @ 51 @ 
name: size  @ 143 @ name: size  @ 183 @ 
block_content  @ 108 @ block_content  @ 143 @ 
modifier: *  @ 23 @ modifier: *  @ 40 @ 
name: mesg  @ 146 @ name: mesg  @ 186 @ 
operator: .  @ 115 @ operator: .  @ 150 @ 
expr  @ 81 @ expr  @ 116 @ 
for  @ 220 @ for  @ 341 @ 
name: mesg  @ 123 @ name: mesg  @ 158 @ 
name: p  @ 81 @ name: p  @ 116 @ 
expr  @ 159 @ expr  @ 198 @ 
name: NULL  @ 49 @ name: NULL  @ 69 @ 
condition  @ 127 @ condition  @ 162 @ 
name: ndims  @ 86 @ name: ndims  @ 121 @ 
name: type  @ 92 @ name: type  @ 130 @ 
expr  @ 115 @ expr  @ 150 @ 
argument  @ 192 @ argument  @ 222 @ 
name: u  @ 200 @ name: u  @ 232 @ 
name: HGOTO_ERROR  @ 217 @ name: HGOTO_ERROR  @ 126 @ 
name: idx_addr  @ 193 @ name: idx_addr  @ 225 @ 
name: mesg  @ 134 @ name: mesg  @ 174 @ 
block  @ 107 @ block  @ 142 @ 
name: udata  @ 31 @ name: udata  @ 50 @ 
modifier: *  @ 31 @ modifier: *  @ 48 @ 
name: p  @ 197 @ name: p  @ 229 @ 
name: mesg  @ 165 @ name: mesg  @ 202 @ 
operator: .  @ 137 @ operator: .  @ 177 @ 
expr  @ 120 @ expr  @ 155 @ 
block_content  @ 132 @ block_content  @ 172 @ 
literal: 1  @ 137 @ literal: 1  @ 177 @ 
operator: =  @ 200 @ operator: =  @ 232 @ 
condition  @ 196 @ condition  @ 228 @ 
operator: *  @ 81 @ operator: *  @ 116 @ 
block_content  @ 102 @ block_content  @ 137 @ 
name: size  @ 147 @ name: size  @ 187 @ 
comment: /* (Only "btree" indexing type supported with v3 of message format) */  @ 204 @ comment: /* (Only "btree" indexing type supported with v3 of message format) */  @ 236 @ 
call  @ 221 @ call  @ 342 @ 
name  @ 216 @ name  @ 335 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
type  @ 31 @ type  @ 49 @ 
parameter  @ 32 @ parameter  @ 52 @ 
specifier: static  @ 32 @ specifier: static  @ 495 @ 
block_content  @ 129 @ block_content  @ 169 @ 
name: mesg  @ 191 @ name: mesg  @ 221 @ 
name  @ 137 @ name  @ 177 @ 
expr  @ 123 @ expr  @ 158 @ 
type  @ 29 @ type  @ 46 @ 
expr  @ 200 @ expr  @ 232 @ 
file: "H5Pprivate.h"  @ 16 @ file: "H5Pprivate.h"  @ 32 @ 
decl  @ 31 @ decl  @ 49 @ 
expr  @ 37 @ expr  @ 57 @ 
argument  @ 298 @ argument  @ 338 @ 
comment: /* end else */  @ 124 @ comment: /* end else */  @ 159 @ 
operator: )  @ 193 @ operator: )  @ 225 @ 
name: mesg  @ 137 @ name: mesg  @ 177 @ 
operator: ++  @ 196 @ operator: ++  @ 228 @ 
operator: ->  @ 111 @ operator: ->  @ 146 @ 
specifier: static  @ 23 @ specifier: static  @ 39 @ 
comment: /* Layout class */  @ 91 @ comment: /* Layout class */  @ 128 @ 
name: type  @ 156 @ name: type  @ 196 @ 
expr_stmt  @ 102 @ expr_stmt  @ 137 @ 
expr_stmt  @ 291 @ expr_stmt  @ 241 @ 
name: H5D_COPS_BTREE  @ 116 @ name: H5D_COPS_BTREE  @ 151 @ 
argument_list  @ 217 @ argument_list  @ 126 @ 
operator: =  @ 291 @ operator: =  @ 241 @ 
literal: 0  @ 39 @ literal: 0  @ 59 @ 
expr  @ 102 @ expr  @ 137 @ 
call  @ 144 @ call  @ 184 @ 
block_content  @ 153 @ block_content  @ 193 @ 
type  @ 31 @ type  @ 49 @ 
operator: .  @ 221 @ operator: .  @ 342 @ 
expr_stmt  @ 138 @ expr_stmt  @ 178 @ 
expr  @ 201 @ expr  @ 233 @ 
condition  @ 133 @ condition  @ 173 @ 
decl  @ 29 @ decl  @ 47 @ 
expr  @ 185 @ expr  @ 693 @ 
argument  @ 164 @ argument  @ 201 @ 
name: chunk  @ 190 @ name: chunk  @ 220 @ 
name: u  @ 166 @ name: u  @ 203 @ 
argument  @ 297 @ argument  @ 245 @ 
name: size  @ 166 @ name: size  @ 203 @ 
specifier: static  @ 25 @ specifier: static  @ 42 @ 
name: idx_type  @ 205 @ name: idx_type  @ 237 @ 
if_stmt  @ 161 @ if_stmt  @ 199 @ 
name: ndims  @ 191 @ name: ndims  @ 221 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
operator: ->  @ 165 @ operator: ->  @ 202 @ 
expr  @ 75 @ expr  @ 110 @ 
argument  @ 299 @ argument  @ 322 @ 
include  @ 15 @ include  @ 31 @ 
operator: .  @ 144 @ operator: .  @ 184 @ 
name  @ 146 @ name  @ 186 @ 
argument_list  @ 79 @ argument_list  @ 114 @ 
directive: include  @ 9 @ directive: include  @ 25 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
expr  @ 66 @ expr  @ 102 @ 
name: void  @ 31 @ name: void  @ 50 @ 
comment: /* Don't compute size of contiguous storage here, due to possible * truncation of the dimension sizes when they were stored in this * version of the layout message.Compute the contiguous storage * size in the dataset code, where we've got the dataspace * information available also.- QAK 5/26/04 */  @ 128 @ comment: /* Don't compute size of contiguous storage here, due to possible
             * truncation of the dimension sizes when they were stored in this* version of the layout message.  Compute the contiguous storage
             * size in the dataset code, where we've got the dataspace* information available also.  - QAK 5/26/04
             */  @ 163 @ 
expr  @ 143 @ expr  @ 183 @ 
name: herr_t  @ 30 @ name: herr_t  @ 44 @ 
parameter  @ 26 @ parameter  @ 43 @ 
name: p  @ 243 @ name: p  @ 315 @ 
name: mesg  @ 116 @ name: mesg  @ 151 @ 
name: H5F_t  @ 31 @ name: H5F_t  @ 49 @ 
argument  @ 297 @ argument  @ 245 @ 
name: mesg  @ 230 @ name: mesg  @ 719 @ 
name: size  @ 159 @ name: size  @ 198 @ 
file: "H5MMprivate.h"  @ 14 @ file: "H5MMprivate.h"  @ 30 @ 
call  @ 134 @ call  @ 174 @ 
expr_stmt  @ 153 @ expr_stmt  @ 193 @ 
decl  @ 31 @ decl  @ 50 @ 
name: mesg  @ 146 @ name: mesg  @ 186 @ 
type  @ 23 @ type  @ 39 @ 
block_content  @ 144 @ block_content  @ 184 @ 
operator: .  @ 197 @ operator: .  @ 229 @ 
name: ret_value  @ 69 @ name: ret_value  @ 591 @ 
name: f  @ 175 @ name: f  @ 211 @ 
name: buf  @ 146 @ name: buf  @ 186 @ 
name: dim  @ 200 @ name: dim  @ 232 @ 
operator: .  @ 142 @ operator: .  @ 182 @ 
expr  @ 78 @ expr  @ 113 @ 
name: ndims  @ 190 @ name: ndims  @ 220 @ 
operator: =  @ 123 @ operator: =  @ 158 @ 
name: u  @ 138 @ name: u  @ 178 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
operator: <  @ 85 @ operator: <  @ 120 @ 
decl  @ 23 @ decl  @ 40 @ 
name: uint8_t  @ 23 @ name: uint8_t  @ 40 @ 
modifier: *  @ 28 @ modifier: *  @ 44 @ 
literal: 0  @ 315 @ literal: 0  @ 322 @ 
comment: /* Set the layout operations */  @ 110 @ comment: /* Set the layout operations */  @ 145 @ 
name: NULL  @ 323 @ name: NULL  @ 383 @ 
parameter_list  @ 24 @ parameter_list  @ 41 @ 
literal: "invalid layout version with virtual layout"  @ 297 @ literal: "Invalid layout class"  @ 245 @ 
name: H5D_LOPS_CONTIG  @ 105 @ name: H5D_LOPS_CONTIG  @ 140 @ 
name: u  @ 165 @ name: u  @ 202 @ 
type  @ 31 @ type  @ 50 @ 
function_decl  @ 32 @ function_decl  @ 51 @ 
name: version  @ 85 @ name: version  @ 120 @ 
name: mesg  @ 105 @ name: mesg  @ 140 @ 
call  @ 193 @ call  @ 225 @ 
type  @ 31 @ type  @ 49 @ 
operator: =  @ 111 @ operator: =  @ 146 @ 
operator: .  @ 206 @ operator: .  @ 238 @ 
operator: ++  @ 89 @ operator: ++  @ 124 @ 
argument_list  @ 178 @ argument_list  @ 212 @ 
operator: >  @ 191 @ operator: >  @ 221 @ 
name  @ 175 @ name  @ 211 @ 
operator: +=  @ 147 @ operator: +=  @ 187 @ 
name: u  @ 133 @ name: u  @ 173 @ 
block  @ 185 @ block  @ 196 @ 
specifier: static  @ 24 @ specifier: static  @ 41 @ 
operator: =  @ 206 @ operator: =  @ 238 @ 
name  @ 108 @ name  @ 143 @ 
name: type  @ 141 @ name: type  @ 181 @ 
name: buf  @ 165 @ name: buf  @ 202 @ 
name: UINT32DECODE  @ 142 @ name: UINT32DECODE  @ 182 @ 
expr  @ 78 @ expr  @ 113 @ 
name: mesg  @ 163 @ name: mesg  @ 200 @ 
operator: .  @ 143 @ operator: .  @ 183 @ 
block_content  @ 91 @ block_content  @ 126 @ 
name: u  @ 147 @ name: u  @ 187 @ 
argument_list  @ 120 @ argument_list  @ 155 @ 
name: ndims  @ 196 @ name: ndims  @ 228 @ 
function_decl  @ 24 @ function_decl  @ 41 @ 
for  @ 196 @ for  @ 228 @ 
block  @ 221 @ block  @ 342 @ 
type  @ 31 @ type  @ 48 @ 
name: void  @ 31 @ name: void  @ 48 @ 
argument_list  @ 142 @ argument_list  @ 182 @ 
name: H5D_LOPS_CHUNK  @ 291 @ name: H5D_LOPS_CHUNK  @ 241 @ 
name: size_t  @ 26 @ name: size_t  @ 43 @ 
operator: <  @ 82 @ operator: <  @ 117 @ 
if  @ 161 @ if  @ 199 @ 
name: size  @ 138 @ name: size  @ 178 @ 
parameter_list  @ 27 @ parameter_list  @ 45 @ 
comment: /* end if */  @ 148 @ comment: /* end if */  @ 188 @ 
argument_list  @ 159 @ argument_list  @ 198 @ 
name: HGOTO_ERROR  @ 164 @ name: HGOTO_ERROR  @ 201 @ 
parameter  @ 24 @ parameter  @ 41 @ 
expr  @ 175 @ expr  @ 211 @ 
operator: =  @ 205 @ operator: =  @ 237 @ 
condition  @ 78 @ condition  @ 113 @ 
if  @ 143 @ if  @ 183 @ 
expr  @ 92 @ expr  @ 130 @ 
argument  @ 163 @ argument  @ 200 @ 
name: u  @ 175 @ name: u  @ 211 @ 
expr_stmt  @ 178 @ expr_stmt  @ 212 @ 
parameter  @ 32 @ parameter  @ 52 @ 
name  @ 120 @ name  @ 155 @ 
control  @ 196 @ control  @ 228 @ 
modifier: *  @ 31 @ modifier: *  @ 49 @ 
operator: .  @ 115 @ operator: .  @ 150 @ 
parameter  @ 26 @ parameter  @ 43 @ 
operator: ->  @ 91 @ operator: ->  @ 129 @ 
parameter  @ 23 @ parameter  @ 39 @ 
name: version  @ 82 @ name: version  @ 117 @ 
name: contig  @ 102 @ name: contig  @ 137 @ 
parameter  @ 25 @ parameter  @ 42 @ 
unit  @ 1 @ unit  @ 1 @ 
name: u  @ 178 @ name: u  @ 212 @ 
name: mesg_flags  @ 23 @ name: mesg_flags  @ 40 @ 
operator: ==  @ 141 @ operator: ==  @ 181 @ 
modifier: *  @ 32 @ modifier: *  @ 46 @ 
name: storage  @ 159 @ name: storage  @ 198 @ 
name: type  @ 92 @ name: type  @ 130 @ 
name: herr_t  @ 28 @ name: herr_t  @ 46 @ 
name: H5F_t  @ 23 @ name: H5F_t  @ 39 @ 
expr  @ 173 @ expr  @ 210 @ 
operator: ->  @ 82 @ operator: ->  @ 117 @ 
expr  @ 200 @ expr  @ 232 @ 
name: H5FL_DEFINE  @ 60 @ name: H5FL_DEFINE  @ 80 @ 
type  @ 32 @ type  @ 46 @ 
parameter  @ 31 @ parameter  @ 50 @ 
argument  @ 178 @ argument  @ 212 @ 
name  @ 147 @ name  @ 187 @ 
operator: ==  @ 92 @ operator: ==  @ 130 @ 
parameter  @ 32 @ parameter  @ 46 @ 
operator: =  @ 81 @ operator: =  @ 116 @ 
name: H5FL_CALLOC  @ 78 @ name: H5FL_CALLOC  @ 113 @ 
if  @ 101 @ if  @ 136 @ 
name: u  @ 144 @ name: u  @ 184 @ 
function_decl  @ 26 @ function_decl  @ 43 @ 
expr_stmt  @ 115 @ expr_stmt  @ 150 @ 
expr  @ 91 @ expr  @ 129 @ 
name: p  @ 153 @ name: p  @ 193 @ 
include  @ 14 @ include  @ 30 @ 
operator: +=  @ 129 @ operator: +=  @ 169 @ 
name: chunk  @ 220 @ name: chunk  @ 341 @ 
parameter  @ 30 @ parameter  @ 583 @ 
operator: (  @ 102 @ operator: (  @ 137 @ 
specifier: const  @ 26 @ specifier: const  @ 43 @ 
name: H5F_addr_decode  @ 102 @ name: H5F_addr_decode  @ 137 @ 
operator: =  @ 153 @ operator: =  @ 193 @ 
operator: ->  @ 200 @ operator: ->  @ 232 @ 
name: compact  @ 144 @ name: compact  @ 184 @ 
type  @ 29 @ type  @ 51 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
operator: =  @ 137 @ operator: =  @ 177 @ 
name: H5D_CONTIGUOUS  @ 101 @ name: H5D_CONTIGUOUS  @ 136 @ 
name: chunk  @ 200 @ name: chunk  @ 232 @ 
condition  @ 220 @ condition  @ 341 @ 
condition  @ 143 @ condition  @ 183 @ 
type  @ 64 @ type  @ 529 @ 
name: u  @ 144 @ name: u  @ 184 @ 
name: chunk  @ 197 @ name: chunk  @ 229 @ 
parameter  @ 27 @ parameter  @ 45 @ 
name: compact  @ 143 @ name: compact  @ 183 @ 
name: storage  @ 144 @ name: storage  @ 184 @ 
operator: .  @ 221 @ operator: .  @ 342 @ 
operator: ->  @ 163 @ operator: ->  @ 200 @ 
operator: .  @ 175 @ operator: .  @ 211 @ 
parameter  @ 32 @ parameter  @ 51 @ 
name: void  @ 28 @ name: void  @ 44 @ 
operator: )  @ 91 @ operator: )  @ 129 @ 
name  @ 230 @ name  @ 719 @ 
name: H5D_LOPS_COMPACT  @ 123 @ name: H5D_LOPS_COMPACT  @ 158 @ 
comment: /* Set the layout operations */  @ 180 @ comment: /* Set the layout operations */  @ 214 @ 
name: ndims  @ 137 @ name: ndims  @ 177 @ 
operator: .  @ 116 @ operator: .  @ 151 @ 
name: ndims  @ 133 @ name: ndims  @ 173 @ 
expr  @ 201 @ expr  @ 233 @ 
expr_stmt  @ 123 @ expr_stmt  @ 158 @ 
block_content  @ 145 @ block_content  @ 185 @ 
operator: .  @ 147 @ operator: .  @ 187 @ 
expr  @ 190 @ expr  @ 220 @ 
name  @ 144 @ name  @ 184 @ 
condition  @ 137 @ condition  @ 177 @ 
comment: /* end if */  @ 167 @ comment: /* end if */  @ 204 @ 
operator: =  @ 105 @ operator: =  @ 140 @ 
condition  @ 82 @ condition  @ 117 @ 
operator: .  @ 132 @ operator: .  @ 172 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
name  @ 153 @ name  @ 476 @ 
argument  @ 242 @ argument  @ 320 @ 
block  @ 127 @ block  @ 162 @ 
call  @ 120 @ call  @ 155 @ 
operator: (  @ 78 @ operator: (  @ 113 @ 
argument_list  @ 145 @ argument_list  @ 185 @ 
name: u  @ 196 @ name: u  @ 228 @ 
expr  @ 206 @ expr  @ 238 @ 
name: H5O__layout_decode  @ 23 @ name: H5O_layout_decode  @ 39 @ 
condition  @ 191 @ condition  @ 221 @ 
name: void  @ 26 @ name: void  @ 43 @ 
operator: .  @ 108 @ operator: .  @ 143 @ 
expr  @ 193 @ expr  @ 225 @ 
expr  @ 220 @ expr  @ 341 @ 
name: contig  @ 178 @ name: contig  @ 212 @ 
argument  @ 145 @ argument  @ 185 @ 
expr  @ 146 @ expr  @ 186 @ 
decl  @ 32 @ decl  @ 51 @ 
expr  @ 85 @ expr  @ 120 @ 
expr  @ 178 @ expr  @ 212 @ 
name: u  @ 146 @ name: u  @ 186 @ 
condition  @ 107 @ condition  @ 142 @ 
if_stmt  @ 82 @ if_stmt  @ 117 @ 
directive: include  @ 12 @ directive: include  @ 28 @ 
operator: .  @ 102 @ operator: .  @ 137 @ 
operator: (  @ 153 @ operator: (  @ 193 @ 
operator: .  @ 102 @ operator: .  @ 137 @ 
decl  @ 68 @ decl  @ 103 @ 
name: u  @ 201 @ name: u  @ 233 @ 
expr  @ 156 @ expr  @ 196 @ 
name: mesg  @ 101 @ name: mesg  @ 136 @ 
name: u  @ 200 @ name: u  @ 232 @ 
name: H5D_COMPACT  @ 157 @ name: H5D_COMPACT  @ 197 @ 
operator: (  @ 175 @ operator: (  @ 211 @ 
expr_stmt  @ 60 @ expr_stmt  @ 80 @ 
type  @ 64 @ type  @ 98 @ 
operator: ->  @ 165 @ operator: ->  @ 202 @ 
name: dim  @ 134 @ name: dim  @ 174 @ 
expr_stmt  @ 206 @ expr_stmt  @ 238 @ 
name: f  @ 26 @ name: f  @ 43 @ 
name: HDassert  @ 75 @ name: HDassert  @ 110 @ 
operator: ->  @ 144 @ operator: ->  @ 184 @ 
argument  @ 164 @ argument  @ 201 @ 
literal: 0  @ 200 @ literal: 0  @ 232 @ 
if_stmt  @ 144 @ if_stmt  @ 184 @ 
decl  @ 28 @ decl  @ 44 @ 
comment: /* Reserved bytes */  @ 97 @ comment: /* Reserved bytes */  @ 132 @ 
argument  @ 142 @ argument  @ 182 @ 
condition  @ 101 @ condition  @ 136 @ 
name: HDmemcpy  @ 165 @ name: HDmemcpy  @ 202 @ 
operator: *  @ 129 @ operator: *  @ 169 @ 
name: mesg_src  @ 31 @ name: mesg_src  @ 48 @ 
name: herr_t  @ 29 @ name: herr_t  @ 45 @ 
name: chunk  @ 115 @ name: chunk  @ 150 @ 
name: storage  @ 230 @ name: storage  @ 719 @ 
name: chunk  @ 137 @ name: chunk  @ 177 @ 
argument  @ 193 @ argument  @ 225 @ 
block  @ 138 @ block  @ 178 @ 
expr  @ 147 @ expr  @ 187 @ 
if_stmt  @ 191 @ if_stmt  @ 221 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
operator: .  @ 116 @ operator: .  @ 151 @ 
expr  @ 165 @ expr  @ 202 @ 
type  @ 23 @ type  @ 39 @ 
name: ops  @ 111 @ name: ops  @ 146 @ 
block  @ 145 @ block  @ 185 @ 
type  @ 67 @ type  @ 292 @ 
argument  @ 134 @ argument  @ 174 @ 
name: NULL  @ 78 @ name: NULL  @ 113 @ 
operator: ->  @ 191 @ operator: ->  @ 221 @ 
name: chunk  @ 230 @ name: chunk  @ 719 @ 
name: mesg  @ 138 @ name: mesg  @ 178 @ 
name: chunk  @ 193 @ name: chunk  @ 225 @ 
literal: 0  @ 143 @ literal: 0  @ 183 @ 
operator: .  @ 159 @ operator: .  @ 198 @ 
name: u  @ 196 @ name: u  @ 228 @ 
expr  @ 157 @ expr  @ 197 @ 
name: H5D_CHUNKED  @ 127 @ name: H5D_CHUNKED  @ 162 @ 
name  @ 196 @ name  @ 228 @ 
name: mesg  @ 291 @ name: mesg  @ 241 @ 
comment: /* Sanity check */  @ 119 @ comment: /* Sanity check */  @ 154 @ 
name: mesg  @ 165 @ name: mesg  @ 202 @ 
argument  @ 197 @ argument  @ 229 @ 
operator: )  @ 175 @ operator: )  @ 211 @ 
name: H5O_MSG_LAYOUT  @ 35 @ name: H5O_MSG_LAYOUT  @ 55 @ 
name: p  @ 175 @ name: p  @ 211 @ 
expr  @ 141 @ expr  @ 181 @ 
expr  @ 144 @ expr  @ 184 @ 
expr  @ 196 @ expr  @ 228 @ 
comment: /* end if */  @ 117 @ comment: /* end if */  @ 152 @ 
decl_stmt  @ 66 @ decl_stmt  @ 102 @ 
name: mesg  @ 120 @ name: mesg  @ 155 @ 
block  @ 131 @ block  @ 171 @ 
name: u  @ 163 @ name: u  @ 200 @ 
name: mesg  @ 108 @ name: mesg  @ 143 @ 
argument  @ 79 @ argument  @ 114 @ 
name  @ 193 @ name  @ 225 @ 
expr_stmt  @ 147 @ expr_stmt  @ 187 @ 
literal: "memory allocation failed"  @ 79 @ literal: "memory allocation failed"  @ 114 @ 
name: void  @ 24 @ name: void  @ 41 @ 
operator: .  @ 134 @ operator: .  @ 174 @ 
macro  @ 192 @ macro  @ 222 @ 
operator: ->  @ 138 @ operator: ->  @ 178 @ 
operator: *=  @ 138 @ operator: *=  @ 178 @ 
decl  @ 31 @ decl  @ 49 @ 
specifier: const  @ 23 @ specifier: const  @ 40 @ 
name: mesg  @ 196 @ name: mesg  @ 228 @ 
name: u  @ 115 @ name: u  @ 150 @ 
decl_stmt  @ 68 @ decl_stmt  @ 103 @ 
name: compact  @ 142 @ name: compact  @ 182 @ 
file: "H5Eprivate.h"  @ 11 @ file: "H5Eprivate.h"  @ 27 @ 
name: compact  @ 163 @ name: compact  @ 200 @ 
name: chunk  @ 206 @ name: chunk  @ 238 @ 
directive: include  @ 15 @ directive: include  @ 31 @ 
operator: ->  @ 120 @ operator: ->  @ 155 @ 
name: herr_t  @ 27 @ name: herr_t  @ 51 @ 
expr  @ 101 @ expr  @ 136 @ 
name: disable_shared  @ 26 @ name: disable_shared  @ 43 @ 
comment: /* Compute chunk size */  @ 199 @ comment: /* Compute chunk size */  @ 231 @ 
parameter  @ 23 @ parameter  @ 40 @ 
decl  @ 32 @ decl  @ 51 @ 
name: mesg  @ 78 @ name: mesg  @ 113 @ 
expr  @ 138 @ expr  @ 178 @ 
argument  @ 297 @ argument  @ 245 @ 
operator: ->  @ 163 @ operator: ->  @ 200 @ 
if  @ 107 @ if  @ 142 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
operator: ==  @ 144 @ operator: ==  @ 184 @ 
name: NULL  @ 53 @ name: NULL  @ 73 @ 
function  @ 64 @ function  @ 98 @ 
decl  @ 26 @ decl  @ 43 @ 
macro  @ 217 @ macro  @ 126 @ 
parameter_list  @ 26 @ parameter_list  @ 43 @ 
name: chunk  @ 200 @ name: chunk  @ 232 @ 
operator: ||  @ 92 @ operator: ||  @ 130 @ 
operator: (  @ 193 @ operator: (  @ 225 @ 
name: u  @ 133 @ name: u  @ 173 @ 
type  @ 28 @ type  @ 44 @ 
name  @ 105 @ name  @ 140 @ 
name: mesg  @ 132 @ name: mesg  @ 172 @ 
name: p  @ 165 @ name: p  @ 202 @ 
name: mesg  @ 153 @ name: mesg  @ 476 @ 
name: storage  @ 165 @ name: storage  @ 202 @ 
name: f  @ 323 @ name: f  @ 549 @ 
operator: .  @ 193 @ operator: .  @ 225 @ 
name: p  @ 190 @ name: p  @ 220 @ 
expr  @ 178 @ expr  @ 212 @ 
argument  @ 79 @ argument  @ 114 @ 
operator: (  @ 108 @ operator: (  @ 143 @ 
name  @ 35 @ name  @ 55 @ 
name: u  @ 197 @ name: u  @ 229 @ 
name: type  @ 107 @ name: type  @ 142 @ 
operator: ->  @ 170 @ operator: ->  @ 207 @ 
argument  @ 102 @ argument  @ 137 @ 
modifier: *  @ 32 @ modifier: *  @ 51 @ 
name: herr_t  @ 32 @ name: herr_t  @ 495 @ 
name: NULL  @ 48 @ name: NULL  @ 68 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
expr_stmt  @ 132 @ expr_stmt  @ 172 @ 
operator: ->  @ 137 @ operator: ->  @ 177 @ 
name: H5F_addr_decode  @ 108 @ name: H5F_addr_decode  @ 143 @ 
expr  @ 200 @ expr  @ 232 @ 
expr  @ 60 @ expr  @ 80 @ 
expr  @ 146 @ expr  @ 186 @ 
operator: ->  @ 190 @ operator: ->  @ 220 @ 
argument  @ 193 @ argument  @ 225 @ 
name: H5O__layout_copy_file  @ 31 @ name: H5O_layout_copy_file  @ 48 @ 
name: size  @ 165 @ name: size  @ 202 @ 
operator: .  @ 108 @ operator: .  @ 143 @ 
file: "H5MFprivate.h"  @ 13 @ file: "H5MFprivate.h"  @ 29 @ 
expr_stmt  @ 108 @ expr_stmt  @ 143 @ 
name: mesg  @ 200 @ name: mesg  @ 232 @ 
expr  @ 142 @ expr  @ 182 @ 
name: f  @ 23 @ name: f  @ 39 @ 
name: mesg  @ 156 @ name: mesg  @ 196 @ 
literal: 1  @ 35 @ literal: 1  @ 55 @ 
name: H5O__layout_encode  @ 24 @ name: H5O_layout_encode  @ 41 @ 
expr  @ 132 @ expr  @ 172 @ 
expr  @ 166 @ expr  @ 203 @ 
name: chunk  @ 138 @ name: chunk  @ 178 @ 
decl_stmt  @ 86 @ decl_stmt  @ 121 @ 
name: u  @ 216 @ name: u  @ 335 @ 
directive: include  @ 11 @ directive: include  @ 27 @ 
name: mesg  @ 85 @ name: mesg  @ 120 @ 
if_stmt  @ 78 @ if_stmt  @ 113 @ 
name: ndims  @ 132 @ name: ndims  @ 172 @ 
expr  @ 137 @ expr  @ 177 @ 
expr  @ 137 @ expr  @ 177 @ 
literal: 0  @ 133 @ literal: 0  @ 173 @ 
name: H5O_t  @ 23 @ name: H5O_t  @ 39 @ 
name: ndims  @ 129 @ name: ndims  @ 169 @ 
name  @ 81 @ name  @ 116 @ 
index  @ 197 @ index  @ 229 @ 
comment: /* Address */  @ 100 @ comment: /* Address */  @ 135 @ 
argument  @ 165 @ argument  @ 202 @ 
type  @ 315 @ type  @ 434 @ 
name: mesg  @ 95 @ name: mesg  @ 472 @ 
call  @ 146 @ call  @ 186 @ 
argument  @ 83 @ argument  @ 118 @ 
name: mesg  @ 107 @ name: mesg  @ 142 @ 
control  @ 220 @ control  @ 341 @ 
operator: &  @ 193 @ operator: &  @ 225 @ 
name: compact  @ 163 @ name: compact  @ 200 @ 
function_decl  @ 28 @ function_decl  @ 44 @ 
name: HDassert  @ 120 @ name: HDassert  @ 155 @ 
comment: /* Set the layout operations */  @ 169 @ comment: /* Set the layout operations */  @ 206 @ 
expr_stmt  @ 75 @ expr_stmt  @ 110 @ 
operator: .  @ 201 @ operator: .  @ 233 @ 
argument  @ 217 @ argument  @ 126 @ 
name: mesg  @ 221 @ name: mesg  @ 342 @ 
expr  @ 323 @ expr  @ 383 @ 
name: H5O_layout_t  @ 78 @ name: H5O_layout_t  @ 113 @ 
name: dim  @ 138 @ name: dim  @ 178 @ 
name: mesg  @ 92 @ name: mesg  @ 130 @ 
parameter  @ 64 @ parameter  @ 529 @ 
argument  @ 217 @ argument  @ 126 @ 
call  @ 78 @ call  @ 113 @ 
decl  @ 26 @ decl  @ 43 @ 
operator: &  @ 298 @ operator: &  @ 338 @ 
argument_list  @ 102 @ argument_list  @ 137 @ 
expr_stmt  @ 193 @ expr_stmt  @ 225 @ 
call  @ 60 @ call  @ 80 @ 
argument  @ 164 @ argument  @ 201 @ 
name: H5MM_malloc  @ 144 @ name: H5MM_malloc  @ 184 @ 
name: u  @ 138 @ name: u  @ 178 @ 
name: storage  @ 146 @ name: storage  @ 186 @ 
name: chunk  @ 108 @ name: chunk  @ 143 @ 
decl  @ 69 @ decl  @ 591 @ 
condition  @ 200 @ condition  @ 232 @ 
operator: .  @ 230 @ operator: .  @ 719 @ 
expr  @ 230 @ expr  @ 719 @ 
name: HGOTO_ERROR  @ 297 @ name: HGOTO_ERROR  @ 245 @ 
operator: .  @ 193 @ operator: .  @ 225 @ 
expr  @ 142 @ expr  @ 182 @ 
expr  @ 196 @ expr  @ 228 @ 
decl  @ 23 @ decl  @ 40 @ 
operator: ->  @ 206 @ operator: ->  @ 238 @ 
name  @ 166 @ name  @ 203 @ 
name  @ 201 @ name  @ 233 @ 
argument  @ 217 @ argument  @ 126 @ 
name: storage  @ 116 @ name: storage  @ 151 @ 
name: mesg  @ 185 @ name: mesg  @ 693 @ 
argument  @ 217 @ argument  @ 126 @ 
block_content  @ 138 @ block_content  @ 178 @ 
name  @ 142 @ name  @ 182 @ 
type  @ 32 @ type  @ 495 @ 
block_content  @ 86 @ block_content  @ 121 @ 
name: mesg  @ 216 @ name: mesg  @ 335 @ 
name: mesg  @ 193 @ name: mesg  @ 225 @ 
comment: /* end if */  @ 139 @ comment: /* end if */  @ 179 @ 
literal: 5  @ 98 @ literal: 5  @ 133 @ 
operator: .  @ 200 @ operator: .  @ 232 @ 
name: idx_type  @ 115 @ name: idx_type  @ 150 @ 
operator: .  @ 178 @ operator: .  @ 212 @ 
file: "H5FLprivate.h"  @ 12 @ file: "H5FLprivate.h"  @ 28 @ 
expr  @ 181 @ expr  @ 215 @ 
name: stream  @ 32 @ name: stream  @ 51 @ 
parameter  @ 29 @ parameter  @ 46 @ 
argument  @ 108 @ argument  @ 143 @ 
name  @ 161 @ name  @ 199 @ 
name: compact  @ 146 @ name: compact  @ 186 @ 
name  @ 159 @ name  @ 198 @ 
type  @ 35 @ type  @ 55 @ 
name: H5F_t  @ 64 @ name: H5F_t  @ 529 @ 
name  @ 197 @ name  @ 229 @ 
operator: ++  @ 91 @ operator: ++  @ 129 @ 
operator: <  @ 133 @ operator: <  @ 173 @ 
expr  @ 90 @ expr  @ 125 @ 
argument  @ 60 @ argument  @ 80 @ 
expr  @ 105 @ expr  @ 140 @ 
parameter  @ 29 @ parameter  @ 47 @ 
name: contig  @ 175 @ name: contig  @ 211 @ 
decl  @ 30 @ decl  @ 583 @ 
name: H5O_LAYOUT_VERSION_4  @ 82 @ name: H5O_LAYOUT_VERSION_3  @ 117 @ 
init  @ 220 @ init  @ 341 @ 
name  @ 291 @ name  @ 241 @ 
name: size  @ 146 @ name: size  @ 186 @ 
name  @ 92 @ name  @ 130 @ 
sizeof  @ 38 @ sizeof  @ 58 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
argument  @ 146 @ argument  @ 186 @ 
name: void  @ 27 @ name: void  @ 45 @ 
operator: (  @ 163 @ operator: (  @ 200 @ 
expr_stmt  @ 165 @ expr_stmt  @ 202 @ 
name  @ 138 @ name  @ 178 @ 
else  @ 151 @ else  @ 191 @ 
argument  @ 74 @ argument  @ 537 @ 
operator: .  @ 137 @ operator: .  @ 177 @ 
name: size  @ 142 @ name: size  @ 182 @ 
decl  @ 67 @ decl  @ 292 @ 
name: u  @ 165 @ name: u  @ 202 @ 
expr  @ 298 @ expr  @ 555 @ 
expr  @ 138 @ expr  @ 178 @ 
expr  @ 75 @ expr  @ 110 @ 
name: NULL  @ 144 @ name: NULL  @ 184 @ 
name: storage  @ 143 @ name: storage  @ 183 @ 
operator: *  @ 153 @ operator: *  @ 193 @ 
name: NULL  @ 52 @ name: NULL  @ 72 @ 
expr_stmt  @ 105 @ expr_stmt  @ 140 @ 
if_stmt  @ 143 @ if_stmt  @ 183 @ 
name: mesg  @ 92 @ name: mesg  @ 130 @ 
expr  @ 165 @ expr  @ 202 @ 
modifier: *  @ 31 @ modifier: *  @ 48 @ 
type  @ 30 @ type  @ 44 @ 
operator: .  @ 216 @ operator: .  @ 335 @ 
macro  @ 83 @ macro  @ 118 @ 
argument  @ 242 @ argument  @ 328 @ 
name: u  @ 159 @ name: u  @ 198 @ 
name  @ 141 @ name  @ 181 @ 
argument_list  @ 38 @ argument_list  @ 58 @ 
type  @ 32 @ type  @ 52 @ 
name: p  @ 134 @ name: p  @ 174 @ 
name  @ 115 @ name  @ 150 @ 
expr  @ 178 @ expr  @ 212 @ 
name: NULL  @ 66 @ name: NULL  @ 102 @ 
operator: .  @ 191 @ operator: .  @ 221 @ 
operator: <  @ 220 @ operator: <  @ 341 @ 
operator: .  @ 102 @ operator: .  @ 137 @ 
operator: ->  @ 82 @ operator: ->  @ 117 @ 
name: H5D_COMPACT  @ 120 @ name: H5D_COMPACT  @ 155 @ 
specifier: const  @ 32 @ specifier: const  @ 51 @ 
name: size_t  @ 315 @ name: size_t  @ 434 @ 
comment: /* (Only "btree" indexing type currently supported in this version) */  @ 114 @ comment: /* (Only "btree" indexing type currently supported in this version) */  @ 149 @ 
operator: .  @ 138 @ operator: .  @ 178 @ 
operator: .  @ 178 @ operator: .  @ 212 @ 
name: NULL  @ 67 @ name: NULL  @ 589 @ 
call  @ 159 @ call  @ 198 @ 
expr_stmt  @ 159 @ expr_stmt  @ 198 @ 
block  @ 101 @ block  @ 136 @ 
operator: ->  @ 201 @ operator: ->  @ 233 @ 
name: mesg  @ 147 @ name: mesg  @ 187 @ 
expr  @ 108 @ expr  @ 143 @ 
name: f  @ 108 @ name: f  @ 143 @ 
name: p  @ 108 @ name: p  @ 143 @ 
name: f  @ 193 @ name: f  @ 225 @ 
name: mesg  @ 178 @ name: mesg  @ 212 @ 
name: u  @ 116 @ name: u  @ 151 @ 
expr_stmt  @ 142 @ expr_stmt  @ 182 @ 
name: UINT32DECODE  @ 197 @ name: UINT32DECODE  @ 229 @ 
name: u  @ 201 @ name: u  @ 233 @ 
expr  @ 98 @ expr  @ 133 @ 
name: storage  @ 147 @ name: storage  @ 187 @ 
argument  @ 120 @ argument  @ 155 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
expr  @ 315 @ expr  @ 322 @ 
operator: .  @ 206 @ operator: .  @ 238 @ 
name: FUNC_ENTER_STATIC  @ 71 @ name: FUNC_ENTER_NOAPI_NOINIT  @ 534 @ 
operator: .  @ 146 @ operator: .  @ 186 @ 
operator: .  @ 137 @ operator: .  @ 177 @ 
name: u  @ 205 @ name: u  @ 237 @ 
condition  @ 144 @ condition  @ 184 @ 
modifier: *  @ 25 @ modifier: *  @ 42 @ 
name: u  @ 133 @ name: u  @ 173 @ 
parameter_list  @ 23 @ parameter_list  @ 39 @ 
block_content  @ 187 @ block_content  @ 197 @ 
name: chunk  @ 201 @ name: chunk  @ 233 @ 
name: H5F_addr_decode  @ 193 @ name: H5F_addr_decode  @ 225 @ 
name: _mesg  @ 24 @ name: _mesg  @ 41 @ 
operator: ->  @ 200 @ operator: ->  @ 232 @ 
name: f  @ 24 @ name: f  @ 41 @ 
operator: ->  @ 141 @ operator: ->  @ 181 @ 
name  @ 132 @ name  @ 172 @ 
operator: .  @ 220 @ operator: .  @ 341 @ 
block  @ 65 @ block  @ 101 @ 
name: u  @ 137 @ name: u  @ 177 @ 
comment: /* Dimensionality */  @ 88 @ comment: /* Dimensionality */  @ 123 @ 
name  @ 163 @ name  @ 200 @ 
argument  @ 75 @ argument  @ 110 @ 
name: u  @ 196 @ name: u  @ 228 @ 
name: addr  @ 102 @ name: addr  @ 137 @ 
name  @ 138 @ name  @ 178 @ 
parameter_list  @ 29 @ parameter_list  @ 46 @ 
condition  @ 156 @ condition  @ 196 @ 
operator: .  @ 166 @ operator: .  @ 203 @ 
operator: ->  @ 107 @ operator: ->  @ 142 @ 
name: H5D_COPS_BTREE  @ 206 @ name: H5D_COPS_BTREE  @ 238 @ 
parameter  @ 23 @ parameter  @ 40 @ 
operator: ==  @ 107 @ operator: ==  @ 142 @ 
name: _mesg  @ 29 @ name: _mesg  @ 47 @ 
name: H5F_t  @ 29 @ name: H5F_t  @ 51 @ 
expr  @ 133 @ expr  @ 173 @ 
name: mesg  @ 170 @ name: mesg  @ 207 @ 
decl  @ 24 @ decl  @ 41 @ 
type  @ 71 @ type  @ 534 @ 
argument_list  @ 192 @ argument_list  @ 222 @ 
literal: 0  @ 137 @ literal: 0  @ 177 @ 
name: H5D_CONTIGUOUS  @ 92 @ name: H5D_CONTIGUOUS  @ 130 @ 
type  @ 86 @ type  @ 121 @ 
operator: ->  @ 142 @ operator: ->  @ 182 @ 
name: ops  @ 170 @ name: ops  @ 207 @ 
comment: /* Set the chunk operations */  @ 203 @ comment: /* Set the chunk operations */  @ 235 @ 
argument  @ 178 @ argument  @ 212 @ 
argument  @ 165 @ argument  @ 202 @ 
name: hbool_t  @ 26 @ name: hbool_t  @ 43 @ 
name: void  @ 25 @ name: void  @ 42 @ 
operator: .  @ 108 @ operator: .  @ 143 @ 
argument  @ 142 @ argument  @ 182 @ 
name: _mesg  @ 28 @ name: _mesg  @ 44 @ 
call  @ 197 @ call  @ 229 @ 
name: ioflags  @ 23 @ name: ioflags  @ 40 @ 
name: f  @ 64 @ name: f  @ 529 @ 
operator: .  @ 205 @ operator: .  @ 237 @ 
switch  @ 156 @ switch  @ 196 @ 
name: mesg  @ 200 @ name: mesg  @ 232 @ 
operator: .  @ 132 @ operator: .  @ 172 @ 
name: u  @ 138 @ name: u  @ 178 @ 
expr  @ 92 @ expr  @ 130 @ 
name: H5D_COMPACT  @ 92 @ name: H5D_COMPACT  @ 130 @ 
name: chunk  @ 216 @ name: chunk  @ 335 @ 
call  @ 165 @ call  @ 202 @ 
name: storage  @ 205 @ name: storage  @ 237 @ 
name: mesg  @ 92 @ name: mesg  @ 130 @ 
index  @ 221 @ index  @ 342 @ 
name: HDassert  @ 92 @ name: assert  @ 130 @ 
name: uint8_t  @ 67 @ name: uint8_t  @ 292 @ 
argument_list  @ 164 @ argument_list  @ 201 @ 
directive: include  @ 16 @ directive: include  @ 32 @ 
operator: ->  @ 92 @ operator: ->  @ 130 @ 
type  @ 24 @ type  @ 41 @ 
expr  @ 196 @ expr  @ 228 @ 
name: u  @ 196 @ name: u  @ 228 @ 
decl  @ 66 @ decl  @ 102 @ 
operator: ->  @ 134 @ operator: ->  @ 174 @ 
parameter_list  @ 25 @ parameter_list  @ 42 @ 
parameter  @ 24 @ parameter  @ 41 @ 
parameter  @ 31 @ parameter  @ 49 @ 
name: buf  @ 144 @ name: buf  @ 184 @ 
decl  @ 27 @ decl  @ 45 @ 
literal: "dimensionality is too large"  @ 217 @ literal: "dimensionality is too large"  @ 126 @ 
operator: ->  @ 201 @ operator: ->  @ 233 @ 
modifier: *  @ 23 @ modifier: *  @ 39 @ 
operator: ,  @ 200 @ operator: ,  @ 232 @ 
name: idx_addr  @ 108 @ name: idx_addr  @ 143 @ 
name: f  @ 32 @ name: f  @ 46 @ 
expr  @ 163 @ expr  @ 200 @ 
type  @ 28 @ type  @ 46 @ 
name: chunk  @ 137 @ name: chunk  @ 177 @ 
name: ndims  @ 89 @ name: ndims  @ 124 @ 
literal: 0  @ 196 @ literal: 0  @ 228 @ 
name  @ 156 @ name  @ 196 @ 
name: H5F_t  @ 26 @ name: H5F_t  @ 43 @ 
condition  @ 85 @ condition  @ 120 @ 
if_stmt  @ 101 @ if_stmt  @ 136 @ 
name: storage  @ 115 @ name: storage  @ 150 @ 
operator: .  @ 230 @ operator: .  @ 719 @ 
literal: "dimensionality is too large"  @ 192 @ literal: "dimensionality is too large"  @ 222 @ 
name: void  @ 25 @ name: void  @ 42 @ 
operator: .  @ 197 @ operator: .  @ 229 @ 
name: u  @ 137 @ name: u  @ 177 @ 
expr  @ 36 @ expr  @ 56 @ 
name: chunk  @ 132 @ name: chunk  @ 172 @ 
operator: .  @ 138 @ operator: .  @ 178 @ 
comment: /* Num dimensions in chunk */  @ 86 @ comment: /* Num dimensions in chunk           */  @ 121 @ 
argument  @ 83 @ argument  @ 118 @ 
name: p  @ 23 @ name: p  @ 40 @ 
name: H5D_CHUNK_IDX_BTREE  @ 115 @ name: H5D_CHUNK_BTREE  @ 150 @ 
expr  @ 197 @ expr  @ 229 @ 
expr  @ 111 @ expr  @ 146 @ 
argument_list  @ 165 @ argument_list  @ 202 @ 
comment: /* Compute chunk size */  @ 136 @ comment: /* Compute chunk size */  @ 176 @ 
name  @ 137 @ name  @ 177 @ 
block_content  @ 197 @ block_content  @ 229 @ 
comment: /* Set the layout operations */  @ 122 @ comment: /* Set the layout operations */  @ 157 @ 
name: u  @ 197 @ name: u  @ 229 @ 
modifier: *  @ 31 @ modifier: *  @ 49 @ 
type  @ 32 @ type  @ 51 @ 
decl_stmt  @ 71 @ decl_stmt  @ 534 @ 
expr  @ 144 @ expr  @ 184 @ 
type  @ 24 @ type  @ 41 @ 
expr  @ 74 @ expr  @ 537 @ 
if  @ 78 @ if  @ 113 @ 
argument  @ 134 @ argument  @ 174 @ 
if  @ 144 @ if  @ 184 @ 
specifier: static  @ 26 @ specifier: static  @ 43 @ 
argument  @ 146 @ argument  @ 186 @ 
block  @ 201 @ block  @ 233 @ 
operator: ||  @ 92 @ operator: ||  @ 130 @ 
operator: .  @ 116 @ operator: .  @ 151 @ 
literal: 4  @ 129 @ literal: 4  @ 169 @ 
expr  @ 165 @ expr  @ 202 @ 
operator: .  @ 175 @ operator: .  @ 211 @ 
expr  @ 107 @ expr  @ 142 @ 
name: H5F_t  @ 32 @ name: H5F_t  @ 46 @ 
name: void  @ 25 @ name: void  @ 42 @ 
comment: /* Layout&storage class */  @ 152 @ comment: /* Layout class */  @ 192 @ 
block  @ 118 @ block  @ 153 @ 
argument  @ 102 @ argument  @ 137 @ 
modifier: *  @ 25 @ modifier: *  @ 42 @ 
name: storage  @ 178 @ name: storage  @ 212 @ 
incr  @ 200 @ incr  @ 232 @ 
name: ops  @ 116 @ name: ops  @ 151 @ 
name: H5O__layout_free  @ 28 @ name: H5O_layout_reset  @ 44 @ 
expr  @ 242 @ expr  @ 320 @ 
comment: /* Set the chunk operations */  @ 113 @ comment: /* Set the chunk operations */  @ 148 @ 
name: version  @ 82 @ name: version  @ 117 @ 
operator: =  @ 115 @ operator: =  @ 150 @ 
expr_stmt  @ 111 @ expr_stmt  @ 146 @ 
operator: )  @ 144 @ operator: )  @ 184 @ 
name  @ 165 @ name  @ 202 @ 
operator: ,  @ 137 @ operator: ,  @ 177 @ 
expr_stmt  @ 81 @ expr_stmt  @ 116 @ 
operator: ->  @ 178 @ operator: ->  @ 212 @ 
argument  @ 78 @ argument  @ 113 @ 
name: chunk  @ 191 @ name: chunk  @ 221 @ 
name: HGOTO_ERROR  @ 79 @ name: HGOTO_ERROR  @ 114 @ 
operator: ->  @ 92 @ operator: ->  @ 130 @ 
expr  @ 146 @ expr  @ 186 @ 
name: mesg  @ 201 @ name: mesg  @ 233 @ 
name: u  @ 137 @ name: u  @ 177 @ 
operator: &  @ 108 @ operator: &  @ 143 @ 
operator: ->  @ 205 @ operator: ->  @ 237 @ 
operator: .  @ 201 @ operator: .  @ 233 @ 
expr  @ 108 @ expr  @ 143 @ 
specifier: static  @ 64 @ specifier: static  @ 98 @ 
block  @ 79 @ block  @ 114 @ 
operator: .  @ 165 @ operator: .  @ 202 @ 
call  @ 75 @ call  @ 110 @ 
name: H5O_LAYOUT_VERSION_3  @ 85 @ name: H5O_LAYOUT_VERSION_3  @ 120 @ 
include  @ 13 @ include  @ 29 @ 
parameter  @ 23 @ parameter  @ 39 @ 
name: mesg  @ 220 @ name: mesg  @ 341 @ 
name: size  @ 201 @ name: size  @ 233 @ 
name: NULL  @ 47 @ name: NULL  @ 67 @ 
expr  @ 38 @ expr  @ 58 @ 
name: mesg  @ 91 @ name: mesg  @ 129 @ 
argument  @ 102 @ argument  @ 137 @ 
name  @ 85 @ name  @ 120 @ 
operator: ->  @ 146 @ operator: ->  @ 186 @ 
name: compact  @ 165 @ name: compact  @ 202 @ 
name: p  @ 193 @ name: p  @ 225 @ 
expr  @ 197 @ expr  @ 229 @ 
modifier: *  @ 32 @ modifier: *  @ 51 @ 
if  @ 127 @ if  @ 162 @ 
operator: .  @ 191 @ operator: .  @ 221 @ 
operator: .  @ 142 @ operator: .  @ 182 @ 
comment: /* Set the layout operations */  @ 104 @ comment: /* Set the layout operations */  @ 139 @ 
block_content  @ 164 @ block_content  @ 201 @ 
name: H5D_LOPS_CONTIG  @ 181 @ name: H5D_LOPS_CONTIG  @ 215 @ 
decl  @ 23 @ decl  @ 39 @ 
name: H5O__layout_size  @ 26 @ name: H5O_layout_size  @ 43 @ 
name  @ 95 @ name  @ 472 @ 
expr  @ 48 @ expr  @ 68 @ 
operator: =  @ 116 @ operator: =  @ 151 @ 
name: H5F_DECODE_LENGTH  @ 178 @ name: H5F_DECODE_LENGTH  @ 212 @ 
name: H5O_LAYOUT_NDIMS  @ 191 @ name: H5O_LAYOUT_NDIMS  @ 221 @ 
call  @ 108 @ call  @ 143 @ 
operator: .  @ 206 @ operator: .  @ 238 @ 
expr  @ 193 @ expr  @ 225 @ 
decl  @ 32 @ decl  @ 52 @ 
name: u  @ 220 @ name: u  @ 341 @ 
name: mesg  @ 144 @ name: mesg  @ 184 @ 
name: mesg  @ 163 @ name: mesg  @ 200 @ 
else  @ 118 @ else  @ 153 @ 
name  @ 127 @ name  @ 162 @ 
function_decl  @ 25 @ function_decl  @ 42 @ 
operator: .  @ 134 @ operator: .  @ 174 @ 
name: mesg  @ 115 @ name: mesg  @ 150 @ 
type  @ 32 @ type  @ 51 @ 
argument  @ 159 @ argument  @ 198 @ 
operator: =  @ 190 @ operator: =  @ 220 @ 
name: H5D_CONTIGUOUS  @ 173 @ name: H5D_CONTIGUOUS  @ 210 @ 
name  @ 143 @ name  @ 183 @ 
if  @ 163 @ if  @ 200 @ 
name: u  @ 221 @ name: u  @ 342 @ 
name: p  @ 299 @ name: p  @ 322 @ 
expr  @ 159 @ expr  @ 198 @ 
comment: /* B-tree address */  @ 192 @ comment: /* B-tree address */  @ 224 @ 
operator: .  @ 201 @ operator: .  @ 233 @ 
operator: .  @ 196 @ operator: .  @ 228 @ 
block  @ 151 @ block  @ 191 @ 
name: H5O_layout_t  @ 66 @ name: H5O_layout_t  @ 102 @ 
operator: ->  @ 196 @ operator: ->  @ 228 @ 
name: chunk  @ 134 @ name: chunk  @ 174 @ 
modifier: *  @ 23 @ modifier: *  @ 40 @ 
name: int  @ 32 @ name: int  @ 52 @ 
expr  @ 116 @ expr  @ 151 @ 
name: H5D_layout_t  @ 153 @ name: H5D_layout_t  @ 193 @ 
operator: >  @ 161 @ operator: >  @ 199 @ 
expr  @ 221 @ expr  @ 342 @ 
index  @ 137 @ index  @ 177 @ 
expr  @ 299 @ expr  @ 322 @ 
name: chunk  @ 196 @ name: chunk  @ 228 @ 
block  @ 192 @ block  @ 222 @ 
name: HDmemcpy  @ 146 @ name: HDmemcpy  @ 186 @ 
operator: &  @ 108 @ operator: &  @ 143 @ 
include  @ 10 @ include  @ 26 @ 
operator: ==  @ 120 @ operator: ==  @ 155 @ 
name: void  @ 23 @ name: void  @ 39 @ 
decl  @ 64 @ decl  @ 529 @ 
type  @ 23 @ type  @ 40 @ 
else  @ 131 @ else  @ 171 @ 
literal: "bad version number for layout message"  @ 83 @ literal: "bad version number for layout message"  @ 118 @ 
operator: .  @ 137 @ operator: .  @ 177 @ 
expr  @ 220 @ expr  @ 341 @ 
expr_stmt  @ 134 @ expr_stmt  @ 174 @ 
name: unsigned  @ 68 @ name: unsigned  @ 103 @ 
operator: .  @ 163 @ operator: .  @ 200 @ 
function_decl  @ 23 @ function_decl  @ 39 @ 
expr  @ 178 @ expr  @ 212 @ 
name: H5O_LAYOUT_NDIMS  @ 90 @ name: H5O_LAYOUT_NDIMS  @ 125 @ 
comment: /* Chunk dimensions */  @ 195 @ comment: /* Chunk dimensions */  @ 227 @ 
expr  @ 67 @ expr  @ 589 @ 
name  @ 191 @ name  @ 221 @ 
expr_stmt  @ 181 @ expr_stmt  @ 215 @ 
operator: )  @ 102 @ operator: )  @ 137 @ 
operator: &  @ 102 @ operator: &  @ 137 @ 
name  @ 92 @ name  @ 130 @ 
name: ndims  @ 132 @ name: ndims  @ 172 @ 
name: H5O__layout_reset  @ 27 @ name: H5O_layout_free  @ 45 @ 

