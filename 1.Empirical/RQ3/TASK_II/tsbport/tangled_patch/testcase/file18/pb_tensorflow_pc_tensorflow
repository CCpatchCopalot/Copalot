empty_stmt  @ 51 @ empty_stmt  @ 62 @ 
expr  @ 62 @ expr  @ 69 @ 
expr  @ 99 @ expr  @ 128 @ 
comment: // splits specified.  @ 39 @ comment: // splits specified.  @ 42 @ 
name: OP_REQUIRES_OK  @ 12 @ name: OP_REQUIRES_OK  @ 13 @ 
call  @ 89 @ call  @ 107 @ 
macro  @ 24 @ macro  @ 27 @ 
name: pad_width  @ 109 @ name: pad_width  @ 139 @ 
literal: "Invalid split value "  @ 48 @ literal: "Invalid split value "  @ 55 @ 
condition  @ 156 @ condition  @ 186 @ 
expr  @ 89 @ expr  @ 107 @ 
name: splits_vec  @ 47 @ name: splits_vec  @ 52 @ 
expr  @ 41 @ expr  @ 44 @ 
name: ngram_width  @ 88 @ name: ngram_width  @ 106 @ 
name: tstring  @ 83 @ name: tstring  @ 98 @ 
name: i  @ 83 @ name: i  @ 100 @ 
call  @ 10 @ call  @ 11 @ 
expr  @ 13 @ expr  @ 14 @ 
condition  @ 119 @ condition  @ 149 @ 
name: i  @ 70 @ name: i  @ 82 @ 
expr  @ 48 @ expr  @ 55 @ 
name  @ 133 @ name  @ 163 @ 
operator: ==  @ 75 @ operator: ==  @ 87 @ 
expr  @ 132 @ expr  @ 162 @ 
argument  @ 62 @ argument  @ 69 @ 
expr  @ 44 @ expr  @ 47 @ 
name: std  @ 107 @ name: std  @ 137 @ 
name: OP_REQUIRES  @ 44 @ name: OP_REQUIRES  @ 47 @ 
name: vector  @ 176 @ name: vector  @ 206 @ 
operator: +  @ 26 @ operator: +  @ 29 @ 
argument  @ 165 @ argument  @ 195 @ 
name: data  @ 83 @ name: data  @ 98 @ 
index  @ 86 @ index  @ 104 @ 
call  @ 126 @ call  @ 156 @ 
expr  @ 12 @ expr  @ 13 @ 
name: ngram  @ 158 @ name: ngram  @ 188 @ 
call  @ 120 @ call  @ 150 @ 
name: separator_  @ 158 @ name: separator_  @ 188 @ 
expr  @ 86 @ expr  @ 104 @ 
continue  @ 91 @ continue  @ 120 @ 
argument  @ 89 @ argument  @ 107 @ 
name: ngrams_data  @ 86 @ name: ngrams_data  @ 104 @ 
name: ngram  @ 146 @ name: ngram  @ 176 @ 
comment: // If we have tokens, then output last and then pair each separator with  @ 143 @ comment: // If we have tokens, then output last and then pair each separator with  @ 173 @ 
argument  @ 88 @ argument  @ 106 @ 
name: data  @ 120 @ name: data  @ 150 @ 
expr  @ 133 @ expr  @ 163 @ 
expr  @ 31 @ expr  @ 34 @ 
operator: ->  @ 32 @ operator: ->  @ 35 @ 
name  @ 123 @ name  @ 153 @ 
type  @ 85 @ type  @ 103 @ 
argument_list  @ 10 @ argument_list  @ 11 @ 
name: int  @ 104 @ name: int  @ 134 @ 
name: OP_REQUIRES_OK  @ 35 @ name: OP_REQUIRES_OK  @ 38 @ 
literal: 0  @ 75 @ literal: 0  @ 87 @ 
argument  @ 107 @ argument  @ 137 @ 
argument_list  @ 89 @ argument_list  @ 107 @ 
name: bool  @ 172 @ name: bool  @ 202 @ 
name: size  @ 165 @ name: size  @ 195 @ 
expr  @ 26 @ expr  @ 29 @ 
decl  @ 119 @ decl  @ 149 @ 
name: num_batch_items  @ 83 @ name: num_batch_items  @ 100 @ 
expr  @ 90 @ expr  @ 108 @ 
argument_list  @ 176 @ argument_list  @ 206 @ 
call  @ 137 @ call  @ 167 @ 
for  @ 73 @ for  @ 85 @ 
name  @ 137 @ name  @ 167 @ 
argument_list  @ 157 @ argument_list  @ 187 @ 
expr  @ 75 @ expr  @ 87 @ 
type  @ 125 @ type  @ 155 @ 
argument  @ 56 @ argument  @ 78 @ 
condition  @ 60 @ condition  @ 66 @ 
argument  @ 158 @ argument  @ 188 @ 
name: int  @ 85 @ name: int  @ 102 @ 
name: get_pad_width  @ 17 @ name: get_pad_width  @ 19 @ 
type  @ 96 @ type  @ 125 @ 
argument  @ 10 @ argument  @ 11 @ 
if_stmt  @ 60 @ if_stmt  @ 66 @ 
name: left_padding  @ 131 @ name: left_padding  @ 161 @ 
name: context  @ 44 @ name: context  @ 47 @ 
name: ngram_width  @ 110 @ name: ngram_width  @ 140 @ 
operator: )  @ 32 @ operator: )  @ 35 @ 
init  @ 110 @ init  @ 140 @ 
block  @ 131 @ block  @ 161 @ 
block_content  @ 146 @ block_content  @ 176 @ 
operator: )  @ 36 @ operator: )  @ 39 @ 
name: splits_vec  @ 48 @ name: splits_vec  @ 55 @ 
argument  @ 71 @ argument  @ 83 @ 
argument  @ 11 @ argument  @ 12 @ 
operator: &&  @ 47 @ operator: &&  @ 52 @ 
name: max  @ 26 @ name: max  @ 29 @ 
argument_list  @ 51 @ argument_list  @ 60 @ 
comment: // Handle case when there are no tokens or no right padding as these can  @ 140 @ comment: // Handle case when there are no tokens or no right padding as these can  @ 170 @ 
name: data_start_index  @ 146 @ name: data_start_index  @ 176 @ 
name: left_padding  @ 125 @ name: left_padding  @ 155 @ 
argument_list  @ 149 @ argument_list  @ 179 @ 
expr  @ 45 @ expr  @ 50 @ 
expr  @ 120 @ expr  @ 150 @ 
expr_stmt  @ 81 @ expr_stmt  @ 93 @ 
type  @ 171 @ type  @ 201 @ 
init  @ 111 @ init  @ 141 @ 
name: tensorflow  @ 30 @ name: tensorflow  @ 33 @ 
type  @ 147 @ type  @ 177 @ 
expr  @ 83 @ expr  @ 100 @ 
expr  @ 48 @ expr  @ 55 @ 
operator: +=  @ 74 @ operator: +=  @ 86 @ 
operator: <=  @ 63 @ operator: ->  @ 71 @ 
decl  @ 125 @ decl  @ 155 @ 
operator: ->  @ 83 @ operator: ->  @ 98 @ 
comment: // If we're preserving short sequences, check to see if no sequence was// generated by comparing the current output start idx to the original// one (ngram_splits_data). If no ngrams were generated, then they will// be equal (since we increment output_start_idx by num_ngrams every// time we create a set of ngrams.)if (preserve_short_&&output_start_idx == ngrams_splits_data[i]) {int data_length = splits_vec(i + 1) - splits_vec(i);// One legitimate reason to not have any ngrams when preserve_short_// is true is if the sequence itself is empty. In that case, move on.if (data_length == 0) {  @ 90 @ comment: // If we're preserving short sequences, check to see if no sequence was  @ 110 @ 
argument_list  @ 12 @ argument_list  @ 13 @ 
for  @ 85 @ for  @ 103 @ 
argument  @ 14 @ argument  @ 15 @ 
for  @ 70 @ for  @ 82 @ 
argument  @ 99 @ argument  @ 128 @ 
comment: // If there is no data or size, return an empty RT.  @ 59 @ comment: // If there is no data or size, return an empty RT.  @ 65 @ 
argument_list  @ 74 @ argument_list  @ 86 @ 
decl_stmt  @ 169 @ decl_stmt  @ 199 @ 
name: i  @ 71 @ name: i  @ 83 @ 
name  @ 60 @ name  @ 66 @ 
name  @ 129 @ name  @ 159 @ 
comment: // width depending on the 'pad_width' arg, but in no case should the padding  @ 19 @ comment: // width depending on the 'pad_width' arg, but in no case should the padding  @ 21 @ 
argument  @ 99 @ argument  @ 128 @ 
expr  @ 35 @ expr  @ 38 @ 
operator: +=  @ 123 @ operator: +=  @ 153 @ 
block  @ 83 @ block  @ 100 @ 
literal: 0  @ 107 @ literal: 0  @ 137 @ 
literal: 1  @ 21 @ literal: 1  @ 23 @ 
name: auto  @ 86 @ name: auto  @ 104 @ 
name: num_ngrams  @ 75 @ name: num_ngrams  @ 87 @ 
name: n  @ 136 @ name: n  @ 166 @ 
block  @ 142 @ block  @ 172 @ 
expr_stmt  @ 126 @ expr_stmt  @ 156 @ 
operator: -  @ 136 @ operator: -  @ 166 @ 
literal: 2  @ 26 @ literal: 2  @ 29 @ 
expr_stmt  @ 61 @ expr_stmt  @ 67 @ 
name: i  @ 63 @ name: splits  @ 71 @ 
name  @ 132 @ name  @ 162 @ 
name: ngrams_splits_data  @ 64 @ name: ngrams_splits_data  @ 115 @ 
name: int  @ 41 @ name: int  @ 44 @ 
name: std  @ 176 @ name: std  @ 206 @ 
block  @ 4 @ block  @ 4 @ 
name: splits_vec  @ 49 @ name: splits_vec  @ 57 @ 
operator: +  @ 87 @ operator: +  @ 105 @ 
name: bool  @ 46 @ name: bool  @ 51 @ 
name: data_start_index  @ 111 @ name: data_start_index  @ 141 @ 
expr  @ 70 @ expr  @ 82 @ 
for  @ 136 @ for  @ 166 @ 
name: i  @ 78 @ name: i  @ 90 @ 
operator: +  @ 120 @ operator: +  @ 150 @ 
call  @ 99 @ call  @ 128 @ 
init  @ 70 @ init  @ 82 @ 
name: errors  @ 51 @ name: errors  @ 60 @ 
name: ngrams_data  @ 83 @ name: ngrams_data  @ 98 @ 
init  @ 136 @ init  @ 166 @ 
operator: +  @ 110 @ operator: +  @ 140 @ 
name: OpKernel  @ 8 @ name: OpKernel  @ 9 @ 
literal: 0  @ 43 @ literal: 0  @ 46 @ 
expr  @ 51 @ expr  @ 60 @ 
argument  @ 44 @ argument  @ 48 @ 
literal: 0  @ 83 @ literal: 0  @ 100 @ 
decl_stmt  @ 5 @ decl_stmt  @ 5 @ 
decl  @ 85 @ decl  @ 103 @ 
argument  @ 56 @ argument  @ 78 @ 
argument  @ 89 @ argument  @ 107 @ 
decl  @ 104 @ decl  @ 133 @ 
operator: +  @ 26 @ operator: +  @ 29 @ 
condition  @ 111 @ condition  @ 141 @ 
name: input  @ 31 @ name: input  @ 34 @ 
expr  @ 132 @ expr  @ 162 @ 
expr_stmt  @ 149 @ expr_stmt  @ 179 @ 
name: max  @ 107 @ name: max  @ 137 @ 
operator: .  @ 60 @ operator: .  @ 66 @ 
operator: *  @ 126 @ operator: *  @ 156 @ 
condition  @ 83 @ condition  @ 100 @ 
call  @ 60 @ call  @ 66 @ 
expr_stmt  @ 157 @ expr_stmt  @ 187 @ 
argument  @ 88 @ argument  @ 106 @ 
block_content  @ 84 @ block_content  @ 101 @ 
expr  @ 9 @ expr  @ 10 @ 
operator: ->  @ 138 @ operator: ->  @ 168 @ 
operator: .  @ 40 @ operator: .  @ 43 @ 
argument_list  @ 106 @ argument_list  @ 136 @ 
name: num_ngrams  @ 72 @ name: num_ngrams  @ 84 @ 
operator: *  @ 117 @ operator: *  @ 147 @ 
operator: <  @ 21 @ operator: <  @ 23 @ 
expr  @ 130 @ expr  @ 160 @ 
expr  @ 30 @ expr  @ 33 @ 
specifier: const  @ 17 @ specifier: const  @ 19 @ 
name  @ 78 @ name  @ 90 @ 
macro  @ 8 @ macro  @ 9 @ 
type  @ 83 @ type  @ 100 @ 
name: ngram  @ 148 @ name: ngram  @ 178 @ 
expr  @ 138 @ expr  @ 168 @ 
operator: &  @ 129 @ operator: &  @ 159 @ 
init  @ 105 @ init  @ 135 @ 
operator: ++  @ 131 @ operator: ++  @ 161 @ 
block  @ 156 @ block  @ 186 @ 
block_content  @ 132 @ block_content  @ 162 @ 
operator: &  @ 84 @ operator: &  @ 101 @ 
argument  @ 48 @ argument  @ 55 @ 
operator: -  @ 109 @ operator: -  @ 139 @ 
name: CreateNgrams  @ 104 @ name: CreateNgrams  @ 133 @ 
expr  @ 12 @ expr  @ 13 @ 
name: template  @ 5 @ name: template  @ 5 @ 
operator: *  @ 34 @ operator: *  @ 37 @ 
block_content  @ 76 @ block_content  @ 88 @ 
name  @ 36 @ name  @ 39 @ 
name: size  @ 41 @ name: size  @ 44 @ 
operator: &  @ 86 @ operator: &  @ 104 @ 
name: valid_splits  @ 48 @ name: valid_splits  @ 53 @ 
name: n  @ 156 @ name: n  @ 186 @ 
name: splits_vec  @ 87 @ name: splits_vec  @ 105 @ 
operator: <  @ 83 @ operator: <  @ 98 @ 
name: splits_vec  @ 43 @ name: splits_vec  @ 46 @ 
name: context  @ 11 @ name: context  @ 12 @ 
literal: 1  @ 56 @ literal: 1  @ 78 @ 
operator: =  @ 40 @ operator: =  @ 43 @ 
operator: =  @ 41 @ operator: =  @ 44 @ 
type  @ 1 @ type  @ 1 @ 
expr  @ 10 @ expr  @ 11 @ 
expr  @ 138 @ expr  @ 168 @ 
decl  @ 110 @ decl  @ 140 @ 
call  @ 11 @ call  @ 12 @ 
name: pad_width  @ 111 @ name: pad_width  @ 141 @ 
name: n  @ 147 @ name: n  @ 177 @ 
block_content  @ 157 @ block_content  @ 187 @ 
operator: -  @ 21 @ operator: -  @ 24 @ 
name: int  @ 43 @ name: int  @ 46 @ 
decl  @ 105 @ decl  @ 135 @ 
expr_stmt  @ 146 @ expr_stmt  @ 176 @ 
argument  @ 99 @ argument  @ 128 @ 
decl_stmt  @ 87 @ decl_stmt  @ 105 @ 
expr  @ 130 @ expr  @ 160 @ 
argument_list  @ 9 @ argument_list  @ 10 @ 
name: auto  @ 84 @ name: auto  @ 101 @ 
name: flat  @ 32 @ name: flat  @ 35 @ 
operator: ->  @ 62 @ operator: ->  @ 69 @ 
name  @ 160 @ name  @ 190 @ 
expr  @ 87 @ expr  @ 105 @ 
name: left_padding  @ 107 @ name: left_padding  @ 137 @ 
operator: -  @ 26 @ operator: -  @ 29 @ 
expr  @ 31 @ expr  @ 34 @ 
name: splits  @ 35 @ name: splits  @ 38 @ 
init  @ 98 @ init  @ 127 @ 
init  @ 83 @ init  @ 100 @ 
name: n  @ 131 @ name: n  @ 161 @ 
name: ngram  @ 149 @ name: ngram  @ 179 @ 
name: prev_split  @ 46 @ name: prev_split  @ 51 @ 
name: DCHECK_EQ  @ 165 @ name: DCHECK_EQ  @ 195 @ 
name: OpKernelConstruction  @ 7 @ name: OpKernelConstruction  @ 8 @ 
expr  @ 97 @ expr  @ 126 @ 
operator: >  @ 83 @ operator: >  @ 98 @ 
operator: ->  @ 35 @ operator: ->  @ 38 @ 
decl  @ 96 @ decl  @ 125 @ 
expr  @ 49 @ expr  @ 57 @ 
init  @ 147 @ init  @ 177 @ 
name: append  @ 157 @ name: append  @ 187 @ 
argument_list  @ 35 @ argument_list  @ 38 @ 
type  @ 5 @ type  @ 5 @ 
argument  @ 56 @ argument  @ 78 @ 
name  @ 57 @ name  @ 79 @ 
name: num_ngrams  @ 89 @ name: num_ngrams  @ 107 @ 
expr  @ 99 @ expr  @ 128 @ 
expr  @ 160 @ expr  @ 190 @ 
expr  @ 176 @ expr  @ 206 @ 
name: ngram  @ 129 @ name: ngram  @ 159 @ 
argument  @ 47 @ argument  @ 52 @ 
argument  @ 51 @ argument  @ 62 @ 
call  @ 46 @ call  @ 51 @ 
operator: ->  @ 57 @ operator: ->  @ 79 @ 
operator: ->  @ 40 @ operator: ->  @ 43 @ 
operator: ->  @ 56 @ operator: ->  @ 78 @ 
name: ngram_width  @ 21 @ name: ngram_width  @ 24 @ 
name: int  @ 115 @ name: int  @ 145 @ 
name: CreateNgrams  @ 89 @ name: CreateNgrams  @ 107 @ 
expr  @ 157 @ expr  @ 187 @ 
expr  @ 165 @ expr  @ 195 @ 
expr  @ 11 @ expr  @ 12 @ 
literal: "First split value must be 0, got "  @ 44 @ literal: "First split value must be 0, got "  @ 48 @ 
operator: +=  @ 90 @ operator: +=  @ 108 @ 
expr  @ 46 @ expr  @ 51 @ 
operator: >  @ 32 @ operator: >  @ 35 @ 
expr  @ 45 @ expr  @ 50 @ 
argument  @ 84 @ argument  @ 101 @ 
expr  @ 11 @ expr  @ 12 @ 
argument  @ 71 @ argument  @ 83 @ 
expr  @ 9 @ expr  @ 10 @ 
name: output_start  @ 86 @ name: output_start  @ 104 @ 
name: num_separators  @ 126 @ name: num_separators  @ 156 @ 
expr  @ 148 @ expr  @ 178 @ 
expr  @ 97 @ expr  @ 126 @ 
name  @ 165 @ name  @ 195 @ 
expr  @ 156 @ expr  @ 186 @ 
argument  @ 107 @ argument  @ 137 @ 
expr  @ 44 @ expr  @ 47 @ 
name  @ 117 @ name  @ 147 @ 
name  @ 157 @ name  @ 187 @ 
literal: 0  @ 75 @ literal: 0  @ 87 @ 
name: length  @ 87 @ name: length  @ 105 @ 
decl  @ 84 @ decl  @ 101 @ 
name: input_data_size  @ 47 @ name: input_data_size  @ 52 @ 
expr  @ 107 @ expr  @ 137 @ 
operator: ::  @ 34 @ operator: ::  @ 37 @ 
block  @ 42 @ block  @ 45 @ 
init  @ 72 @ init  @ 84 @ 
name: ngram_size  @ 130 @ name: ngram_size  @ 160 @ 
name: GetAttr  @ 14 @ name: GetAttr  @ 15 @ 
name: int  @ 98 @ name: int  @ 127 @ 
operator: ->  @ 157 @ operator: ->  @ 187 @ 
unit  @ 1 @ unit  @ 1 @ 
name: tstring  @ 104 @ name: tstring  @ 133 @ 
operator: -  @ 78 @ operator: -  @ 90 @ 
name: ngrams_data  @ 97 @ name: ngrams_data  @ 126 @ 
operator: (  @ 60 @ operator: (  @ 66 @ 
name: tensorflow  @ 34 @ name: tensorflow  @ 37 @ 
call  @ 11 @ call  @ 12 @ 
operator: -  @ 21 @ operator: -  @ 23 @ 
literal: 1  @ 87 @ literal: 1  @ 105 @ 
type  @ 174 @ type  @ 204 @ 
expr_stmt  @ 99 @ expr_stmt  @ 128 @ 
expr  @ 56 @ expr  @ 78 @ 
expr  @ 7 @ expr  @ 8 @ 
name: append  @ 149 @ name: append  @ 179 @ 
argument_list  @ 26 @ argument_list  @ 29 @ 
name: namespace  @ 2 @ name: namespace  @ 2 @ 
block_content  @ 71 @ block_content  @ 83 @ 
expr  @ 6 @ expr  @ 7 @ 
call  @ 9 @ call  @ 10 @ 
expr  @ 88 @ expr  @ 106 @ 
argument_list  @ 32 @ argument_list  @ 35 @ 
name: get_num_ngrams  @ 88 @ name: get_num_ngrams  @ 106 @ 
expr  @ 74 @ expr  @ 86 @ 
name: separator_  @ 9 @ name: separator_  @ 10 @ 
name: ngram_index  @ 129 @ name: ngram_index  @ 159 @ 
expr  @ 158 @ expr  @ 188 @ 
name: splits  @ 34 @ name: splits  @ 37 @ 
expr_stmt  @ 89 @ expr_stmt  @ 107 @ 
expr  @ 147 @ expr  @ 177 @ 
name: OP_REQUIRES_OK  @ 14 @ name: OP_REQUIRES_OK  @ 15 @ 
expr  @ 111 @ expr  @ 141 @ 
for  @ 83 @ for  @ 100 @ 
name: num_separators  @ 125 @ name: num_separators  @ 155 @ 
expr  @ 89 @ expr  @ 107 @ 
name: OP_REQUIRES_OK  @ 56 @ name: OP_REQUIRES_OK  @ 77 @ 
name: num_tokens  @ 142 @ name: num_tokens  @ 172 @ 
name: prev_split  @ 51 @ name: prev_split  @ 62 @ 
name: InvalidArgument  @ 48 @ name: InvalidArgument  @ 54 @ 
argument  @ 48 @ argument  @ 56 @ 
name: OpKernel  @ 5 @ name: OpKernel  @ 6 @ 
argument_list  @ 44 @ argument_list  @ 47 @ 
argument_list  @ 83 @ argument_list  @ 98 @ 
expr  @ 13 @ expr  @ 14 @ 
name: num_tokens  @ 136 @ name: num_tokens  @ 166 @ 
name: data  @ 40 @ name: data  @ 43 @ 
name: tensorflow  @ 7 @ name: tensorflow  @ 8 @ 
name: allocate_output  @ 62 @ name: allocate_output  @ 69 @ 
name: append  @ 148 @ name: append  @ 178 @ 
call  @ 56 @ call  @ 77 @ 
type  @ 70 @ type  @ 82 @ 
comment: // Ngrams can be padded with either a fixed pad width or a dynamic pad  @ 18 @ comment: // Ngrams can be padded with either a fixed pad width or a dynamic pad  @ 20 @ 
argument  @ 9 @ argument  @ 10 @ 
expr  @ 72 @ expr  @ 84 @ 
expr_stmt  @ 1 @ expr_stmt  @ 1 @ 
argument  @ 24 @ argument  @ 27 @ 
name: pad_width_  @ 21 @ name: pad_width_  @ 23 @ 
incr  @ 70 @ incr  @ 82 @ 
decl  @ 129 @ decl  @ 159 @ 
name: splits_vec  @ 84 @ name: splits_vec  @ 101 @ 
call  @ 48 @ call  @ 53 @ 
block_content  @ 137 @ block_content  @ 167 @ 
name: ngram_width  @ 106 @ name: ngram_width  @ 136 @ 
name: n  @ 119 @ name: n  @ 149 @ 
argument_list  @ 35 @ argument_list  @ 38 @ 
name: data  @ 62 @ name: data  @ 69 @ 
name: splits_vec  @ 60 @ name: splits_vec  @ 66 @ 
name: bool  @ 174 @ name: bool  @ 204 @ 
operator: &  @ 56 @ operator: &  @ 78 @ 
name: SPLITS_TYPE  @ 5 @ name: SPLITS_TYPE  @ 5 @ 
index  @ 78 @ index  @ 90 @ 
type  @ 43 @ type  @ 46 @ 
call  @ 106 @ call  @ 136 @ 
control  @ 156 @ control  @ 186 @ 
literal: 0  @ 42 @ literal: 0  @ 45 @ 
argument  @ 133 @ argument  @ 163 @ 
argument  @ 48 @ argument  @ 56 @ 
type  @ 107 @ type  @ 137 @ 
comment: // result in consecutive separators.  @ 141 @ comment: // result in consecutive separators.  @ 171 @ 
name: splits_vec_size  @ 45 @ name: splits_vec_size  @ 50 @ 
name: length  @ 75 @ name: length  @ 87 @ 
name: context  @ 56 @ name: context  @ 78 @ 
condition  @ 131 @ condition  @ 161 @ 
expr_stmt  @ 49 @ expr_stmt  @ 57 @ 
operator: -  @ 87 @ operator: -  @ 105 @ 
argument_list  @ 165 @ argument_list  @ 195 @ 
expr  @ 156 @ expr  @ 186 @ 
argument  @ 89 @ argument  @ 107 @ 
name: data_start  @ 89 @ name: data_start  @ 107 @ 
expr_stmt  @ 76 @ expr_stmt  @ 88 @ 
name: OP_REQUIRES_OK  @ 10 @ name: OP_REQUIRES_OK  @ 11 @ 
name: prev_split  @ 49 @ name: prev_split  @ 57 @ 
decl  @ 147 @ decl  @ 177 @ 
call  @ 148 @ call  @ 178 @ 
name: bool  @ 173 @ name: bool  @ 203 @ 
name: int  @ 125 @ name: int  @ 155 @ 
expr  @ 106 @ expr  @ 136 @ 
name: num_ngrams  @ 78 @ name: num_ngrams  @ 90 @ 
argument  @ 9 @ argument  @ 10 @ 
name: splits_vec_size  @ 42 @ name: splits_vec_size  @ 45 @ 
call  @ 71 @ call  @ 83 @ 
argument  @ 26 @ argument  @ 29 @ 
expr  @ 10 @ expr  @ 11 @ 
comment: // Size of the left padding.  @ 116 @ comment: // Size of the left padding.  @ 146 @ 
expr  @ 85 @ expr  @ 103 @ 
block  @ 17 @ block  @ 19 @ 
name  @ 97 @ name  @ 126 @ 
expr  @ 78 @ expr  @ 90 @ 
argument  @ 48 @ argument  @ 56 @ 
argument  @ 13 @ argument  @ 14 @ 
block_content  @ 106 @ block_content  @ 136 @ 
expr  @ 117 @ expr  @ 147 @ 
name: right_padding  @ 147 @ name: right_padding  @ 177 @ 
argument_list  @ 71 @ argument_list  @ 83 @ 
name  @ 14 @ name  @ 15 @ 
operator: ==  @ 60 @ operator: ==  @ 66 @ 
specifier: const  @ 34 @ specifier: const  @ 37 @ 
expr  @ 48 @ expr  @ 56 @ 
expr  @ 56 @ expr  @ 77 @ 
operator: *  @ 30 @ operator: *  @ 33 @ 
name: std  @ 109 @ name: std  @ 139 @ 
block_content  @ 120 @ block_content  @ 150 @ 
argument  @ 35 @ argument  @ 38 @ 
operator: =  @ 36 @ operator: =  @ 39 @ 
expr_stmt  @ 137 @ expr_stmt  @ 167 @ 
expr  @ 43 @ expr  @ 46 @ 
literal: ", must be in ["  @ 48 @ literal: ", must be in ["  @ 55 @ 
macro  @ 4 @ macro  @ 4 @ 
operator: &  @ 10 @ operator: &  @ 11 @ 
name: context  @ 62 @ name: context  @ 68 @ 
call  @ 160 @ call  @ 190 @ 
call  @ 165 @ call  @ 195 @ 
name: Tensor  @ 61 @ name: Tensor  @ 67 @ 
name: ngram_index  @ 105 @ name: ngram_index  @ 135 @ 
expr  @ 84 @ expr  @ 101 @ 
name: ngram_width  @ 99 @ name: ngram_width  @ 128 @ 
name: int  @ 156 @ name: int  @ 186 @ 
literal: "data_splits"  @ 35 @ literal: "data_splits"  @ 38 @ 
name: i  @ 85 @ name: i  @ 102 @ 
name: string  @ 171 @ name: string  @ 201 @ 
name: data  @ 30 @ name: data  @ 33 @ 
block  @ 119 @ block  @ 149 @ 
argument  @ 148 @ argument  @ 178 @ 
name: context  @ 13 @ name: context  @ 14 @ 
name: output_start  @ 89 @ name: output_start  @ 107 @ 
type  @ 172 @ type  @ 202 @ 
name: num_tokens  @ 110 @ name: num_tokens  @ 140 @ 
name: ngrams_splits_data  @ 85 @ name: ngrams_splits_data  @ 102 @ 
expr_stmt  @ 78 @ expr_stmt  @ 90 @ 
decl  @ 136 @ decl  @ 166 @ 
name: tensorflow  @ 61 @ name: tensorflow  @ 67 @ 
argument  @ 25 @ argument  @ 28 @ 
expr  @ 125 @ expr  @ 155 @ 
name: n  @ 136 @ name: n  @ 166 @ 
name: append  @ 132 @ name: append  @ 162 @ 
name: flat  @ 57 @ name: flat  @ 79 @ 
call  @ 62 @ call  @ 69 @ 
operator: (  @ 26 @ operator: (  @ 29 @ 
name: splits_vec_size  @ 41 @ name: splits_vec_size  @ 44 @ 
type  @ 45 @ type  @ 50 @ 
operator: +=  @ 126 @ operator: +=  @ 156 @ 
name  @ 86 @ name  @ 104 @ 
literal: 1  @ 71 @ literal: 1  @ 83 @ 
name: valid_splits  @ 47 @ name: valid_splits  @ 52 @ 
name  @ 11 @ name  @ 12 @ 
argument  @ 31 @ argument  @ 34 @ 
literal: 0  @ 142 @ literal: 0  @ 172 @ 
init  @ 119 @ init  @ 149 @ 
name: right_pad_  @ 160 @ name: right_pad_  @ 190 @ 
call  @ 71 @ call  @ 83 @ 
argument_list  @ 13 @ argument_list  @ 14 @ 
name: ngram_width  @ 25 @ name: ngram_width  @ 28 @ 
name: prev_split  @ 51 @ name: prev_split  @ 59 @ 
name: int  @ 85 @ name: int  @ 103 @ 
operator: ++  @ 147 @ operator: ++  @ 177 @ 
expr  @ 56 @ expr  @ 78 @ 
expr  @ 64 @ expr  @ 115 @ 
expr  @ 74 @ expr  @ 86 @ 
expr  @ 13 @ expr  @ 14 @ 
comment: // Build the ngram.  @ 128 @ comment: // Build the ngram.  @ 158 @ 
expr  @ 119 @ expr  @ 149 @ 
decl  @ 73 @ decl  @ 85 @ 
name: empty  @ 62 @ name: empty  @ 69 @ 
argument  @ 13 @ argument  @ 14 @ 
decl  @ 1 @ decl  @ 1 @ 
name  @ 146 @ name  @ 176 @ 
argument  @ 11 @ argument  @ 12 @ 
expr  @ 14 @ expr  @ 15 @ 
name: num_ngrams  @ 104 @ name: num_ngrams  @ 133 @ 
name: data_length  @ 96 @ name: data_length  @ 125 @ 
literal: 0  @ 156 @ literal: 0  @ 186 @ 
name: right_padding  @ 108 @ name: right_padding  @ 138 @ 
name: tensorflow  @ 8 @ name: tensorflow  @ 9 @ 
operator: ->  @ 9 @ operator: ->  @ 10 @ 
name: int  @ 83 @ name: int  @ 100 @ 
control  @ 73 @ control  @ 85 @ 
expr  @ 62 @ expr  @ 68 @ 
name: right_pad_  @ 123 @ name: right_pad_  @ 153 @ 
expr  @ 11 @ expr  @ 12 @ 
name: ngrams  @ 81 @ name: ngrams  @ 93 @ 
operator: ::  @ 21 @ operator: ::  @ 23 @ 
name: right_pad_  @ 157 @ name: right_pad_  @ 187 @ 
expr  @ 47 @ expr  @ 52 @ 
expr  @ 157 @ expr  @ 187 @ 
expr  @ 62 @ expr  @ 69 @ 
name  @ 13 @ name  @ 14 @ 
call  @ 44 @ call  @ 48 @ 
literal: 0  @ 111 @ literal: 0  @ 141 @ 
name: int  @ 176 @ name: int  @ 206 @ 
name: int  @ 25 @ name: int  @ 28 @ 
name: OP_REQUIRES_OK  @ 82 @ name: OP_REQUIRES_OK  @ 94 @ 
comment: // Validate that the splits are valid indices into data, only if there are  @ 38 @ comment: // Validate that the splits are valid indices into data, only if there are  @ 41 @ 
name: GetAttr  @ 13 @ name: GetAttr  @ 14 @ 
argument_list  @ 160 @ argument_list  @ 190 @ 
init  @ 125 @ init  @ 155 @ 
name: OP_REQUIRES  @ 48 @ name: OP_REQUIRES  @ 53 @ 
call  @ 40 @ call  @ 43 @ 
name: context  @ 14 @ name: context  @ 15 @ 
comment: // Size of the right padding.  @ 122 @ comment: // Size of the right padding.  @ 152 @ 
decl  @ 85 @ decl  @ 102 @ 
operator: =  @ 76 @ operator: =  @ 88 @ 
decl  @ 172 @ decl  @ 202 @ 
operator: :  @ 8 @ operator: :  @ 9 @ 
call  @ 51 @ call  @ 60 @ 
name: OP_REQUIRES_OK  @ 13 @ name: OP_REQUIRES_OK  @ 14 @ 
name: ngram  @ 138 @ name: ngram  @ 168 @ 
argument  @ 109 @ argument  @ 139 @ 
operator: ::  @ 5 @ operator: ::  @ 6 @ 
name: length  @ 120 @ name: length  @ 150 @ 
name: int  @ 71 @ name: int  @ 83 @ 
name: get_pad_width  @ 25 @ name: get_pad_width  @ 28 @ 
expr  @ 36 @ expr  @ 39 @ 
init  @ 46 @ init  @ 51 @ 
decl  @ 171 @ decl  @ 201 @ 
expr  @ 49 @ expr  @ 57 @ 
operator: (  @ 109 @ operator: (  @ 139 @ 
name: OP_REQUIRES_OK  @ 11 @ name: OP_REQUIRES_OK  @ 12 @ 
name: int  @ 70 @ name: int  @ 82 @ 
expr  @ 35 @ expr  @ 38 @ 
name  @ 146 @ name  @ 176 @ 
call  @ 149 @ call  @ 179 @ 
argument  @ 26 @ argument  @ 29 @ 
name: ngrams  @ 83 @ name: ngrams  @ 98 @ 
expr  @ 35 @ expr  @ 38 @ 
operator: <=  @ 47 @ operator: <=  @ 52 @ 
operator: ++  @ 105 @ operator: ++  @ 135 @ 
operator: ==  @ 51 @ operator: ==  @ 59 @ 
name: int  @ 87 @ name: int  @ 105 @ 
name  @ 138 @ name  @ 168 @ 
expr  @ 85 @ expr  @ 102 @ 
name: num_batch_items  @ 63 @ name: shape  @ 71 @ 
name: context  @ 56 @ name: context  @ 78 @ 
expr  @ 35 @ expr  @ 38 @ 
argument_list  @ 40 @ argument_list  @ 43 @ 
name: i  @ 87 @ name: i  @ 105 @ 
block  @ 151 @ block  @ 181 @ 
argument  @ 132 @ argument  @ 162 @ 
name: left_padding  @ 117 @ name: left_padding  @ 147 @ 
operator: &  @ 13 @ operator: &  @ 14 @ 
name: context  @ 11 @ name: context  @ 12 @ 
name: int  @ 110 @ name: int  @ 140 @ 
name: i  @ 78 @ name: i  @ 90 @ 
expr_stmt  @ 138 @ expr_stmt  @ 168 @ 
decl  @ 43 @ decl  @ 46 @ 
expr  @ 160 @ expr  @ 190 @ 
decl  @ 45 @ decl  @ 50 @ 
decl  @ 98 @ decl  @ 127 @ 
argument_list  @ 25 @ argument_list  @ 28 @ 
name: left_pad_  @ 117 @ name: left_pad_  @ 147 @ 
operator: .  @ 123 @ operator: .  @ 153 @ 
name: valid_splits  @ 46 @ name: valid_splits  @ 51 @ 
operator: &&  @ 75 @ operator: &&  @ 87 @ 
literal: 1  @ 98 @ literal: 1  @ 127 @ 
name: Tensor  @ 30 @ name: Tensor  @ 33 @ 
operator: +  @ 109 @ operator: +  @ 139 @ 
expr  @ 5 @ expr  @ 6 @ 
expr_stmt  @ 133 @ expr_stmt  @ 163 @ 
decl  @ 72 @ decl  @ 84 @ 
operator: ->  @ 11 @ operator: ->  @ 12 @ 
call  @ 14 @ call  @ 15 @ 
operator: ++  @ 70 @ operator: ++  @ 82 @ 
operator: >  @ 36 @ operator: >  @ 39 @ 
expr  @ 5 @ expr  @ 5 @ 
call  @ 31 @ call  @ 34 @ 
expr_stmt  @ 117 @ expr_stmt  @ 147 @ 
name: InvalidArgument  @ 44 @ name: InvalidArgument  @ 48 @ 
if  @ 60 @ if  @ 66 @ 
operator: -  @ 107 @ operator: -  @ 137 @ 
argument_list  @ 146 @ argument_list  @ 176 @ 
expr_stmt  @ 74 @ expr_stmt  @ 86 @ 
if_stmt  @ 75 @ if_stmt  @ 87 @ 
argument_list  @ 133 @ argument_list  @ 163 @ 
argument  @ 14 @ argument  @ 15 @ 
decl_stmt  @ 107 @ decl_stmt  @ 137 @ 
init  @ 85 @ init  @ 103 @ 
call  @ 117 @ call  @ 147 @ 
block_content  @ 86 @ block_content  @ 104 @ 
argument_list  @ 9 @ argument_list  @ 10 @ 
name: context  @ 31 @ name: context  @ 34 @ 
name: ngram  @ 157 @ name: ngram  @ 187 @ 
decl  @ 5 @ decl  @ 5 @ 
argument  @ 24 @ argument  @ 27 @ 
operator: -  @ 110 @ operator: -  @ 140 @ 
argument_list  @ 31 @ argument_list  @ 34 @ 
expr_stmt  @ 130 @ expr_stmt  @ 160 @ 
argument_list  @ 44 @ argument_list  @ 48 @ 
name: n  @ 131 @ name: n  @ 161 @ 
operator: =  @ 47 @ operator: =  @ 52 @ 
name: ngram  @ 132 @ name: ngram  @ 162 @ 
name  @ 158 @ name  @ 188 @ 
operator: ::  @ 51 @ operator: ::  @ 60 @ 
name  @ 130 @ name  @ 160 @ 
name: n  @ 120 @ name: n  @ 150 @ 
name: reserve  @ 130 @ name: reserve  @ 160 @ 
argument_list  @ 137 @ argument_list  @ 167 @ 
operator: ->  @ 31 @ operator: ->  @ 34 @ 
operator: ->  @ 12 @ operator: ->  @ 13 @ 
name: context  @ 48 @ name: context  @ 53 @ 
name: splits_vec  @ 71 @ name: splits_vec  @ 83 @ 
name: data  @ 60 @ name: data  @ 66 @ 
argument  @ 29 @ argument  @ 32 @ 
expr  @ 48 @ expr  @ 54 @ 
operator: ->  @ 60 @ operator: ->  @ 66 @ 
name: int  @ 24 @ name: int  @ 27 @ 
block  @ 104 @ block  @ 134 @ 
name  @ 149 @ name  @ 179 @ 
name: pad_width  @ 106 @ name: pad_width  @ 136 @ 
expr  @ 26 @ expr  @ 29 @ 
operator: &  @ 62 @ operator: &  @ 69 @ 
argument_list  @ 13 @ argument_list  @ 14 @ 
name: StringNGramsOp  @ 7 @ name: StringNGramsOp  @ 8 @ 
operator: .  @ 126 @ operator: .  @ 156 @ 
operator: *  @ 55 @ operator: *  @ 76 @ 
name: right_padding  @ 156 @ name: right_padding  @ 186 @ 
literal: "ngram_widths"  @ 10 @ literal: "ngram_widths"  @ 11 @ 
argument  @ 12 @ argument  @ 13 @ 
init  @ 71 @ init  @ 83 @ 
expr  @ 48 @ expr  @ 53 @ 
literal: 1  @ 76 @ literal: 1  @ 88 @ 
operator: *  @ 81 @ operator: *  @ 93 @ 
init  @ 108 @ init  @ 138 @ 
name: int  @ 96 @ name: int  @ 125 @ 
expr  @ 62 @ expr  @ 68 @ 
range  @ 85 @ range  @ 103 @ 
expr  @ 47 @ expr  @ 52 @ 
argument_list  @ 14 @ argument_list  @ 15 @ 
name: output_start_idx  @ 97 @ name: output_start_idx  @ 126 @ 
incr  @ 131 @ incr  @ 161 @ 
name  @ 176 @ name  @ 206 @ 
decl_stmt  @ 106 @ decl_stmt  @ 136 @ 
operator: &  @ 11 @ operator: &  @ 12 @ 
argument_list  @ 82 @ argument_list  @ 94 @ 
expr  @ 14 @ expr  @ 15 @ 
name: context  @ 7 @ name: context  @ 8 @ 
decl_stmt  @ 125 @ decl_stmt  @ 155 @ 
name: ngram_width  @ 26 @ name: ngram_width  @ 29 @ 
expr  @ 147 @ expr  @ 177 @ 
operator: ++  @ 83 @ operator: ++  @ 100 @ 
name: n  @ 147 @ name: n  @ 177 @ 
index  @ 137 @ index  @ 167 @ 
index  @ 120 @ index  @ 150 @ 
expr  @ 71 @ expr  @ 83 @ 
operator: =  @ 25 @ operator: =  @ 28 @ 
expr  @ 56 @ expr  @ 78 @ 
argument_list  @ 48 @ argument_list  @ 54 @ 
argument_list  @ 126 @ argument_list  @ 156 @ 
argument_list  @ 130 @ argument_list  @ 160 @ 
call  @ 56 @ call  @ 78 @ 
operator: *  @ 96 @ operator: *  @ 125 @ 
literal: 0  @ 119 @ literal: 0  @ 149 @ 
expr  @ 137 @ expr  @ 167 @ 
name: get_num_ngrams  @ 24 @ name: get_num_ngrams  @ 27 @ 
name: Tensor  @ 81 @ name: Tensor  @ 93 @ 
macro  @ 17 @ macro  @ 19 @ 
block  @ 1 @ block  @ 1 @ 
name: num_ngrams  @ 109 @ name: num_ngrams  @ 139 @ 
name: output_start_idx  @ 85 @ name: output_start_idx  @ 102 @ 
argument_list  @ 11 @ argument_list  @ 12 @ 
argument  @ 10 @ argument  @ 11 @ 
decl_stmt  @ 98 @ decl_stmt  @ 127 @ 
block  @ 85 @ block  @ 103 @ 
expr  @ 107 @ expr  @ 137 @ 
argument  @ 82 @ argument  @ 96 @ 
name: explicit  @ 7 @ name: explicit  @ 8 @ 
argument  @ 104 @ argument  @ 133 @ 
modifier: *  @ 129 @ modifier: *  @ 159 @ 
literal: ", got "  @ 51 @ literal: ", got "  @ 62 @ 
argument  @ 44 @ argument  @ 48 @ 
argument  @ 48 @ argument  @ 55 @ 
expr  @ 13 @ expr  @ 14 @ 
expr  @ 63 @ expr  @ 71 @ 
name: separator_  @ 148 @ name: separator_  @ 178 @ 
operator: ->  @ 146 @ operator: ->  @ 176 @ 
name: namespace  @ 1 @ name: namespace  @ 1 @ 
expr  @ 31 @ expr  @ 34 @ 
operator: )  @ 40 @ operator: )  @ 43 @ 
index  @ 85 @ index  @ 102 @ 
expr  @ 88 @ expr  @ 106 @ 
else  @ 111 @ else  @ 141 @ 
argument  @ 62 @ argument  @ 69 @ 
block_content  @ 74 @ block_content  @ 86 @ 
literal: 1  @ 125 @ literal: 1  @ 155 @ 
for  @ 156 @ for  @ 186 @ 
name  @ 83 @ name  @ 98 @ 
expr  @ 70 @ expr  @ 82 @ 
name: num_ngrams  @ 74 @ name: num_ngrams  @ 86 @ 
name: public  @ 6 @ name: public  @ 7 @ 
operator: ==  @ 44 @ operator: ==  @ 47 @ 
decl  @ 83 @ decl  @ 98 @ 
specifier: const  @ 24 @ specifier: const  @ 27 @ 
literal: 0  @ 60 @ literal: 0  @ 66 @ 
operator: ++  @ 119 @ operator: ++  @ 149 @ 
operator: +  @ 125 @ operator: +  @ 155 @ 
name: StringNGramsOp  @ 5 @ name: StringNGramsOp  @ 6 @ 
name  @ 5 @ name  @ 5 @ 
macro  @ 29 @ macro  @ 32 @ 
name  @ 85 @ name  @ 102 @ 
name: left_padding  @ 110 @ name: left_padding  @ 140 @ 
name: input_data_size  @ 48 @ name: input_data_size  @ 56 @ 
expr  @ 137 @ expr  @ 167 @ 
init  @ 107 @ init  @ 137 @ 
decl_stmt  @ 43 @ decl_stmt  @ 46 @ 
literal: 0  @ 82 @ literal: 0  @ 97 @ 
call  @ 13 @ call  @ 14 @ 
argument  @ 48 @ argument  @ 55 @ 
for  @ 105 @ for  @ 135 @ 
block  @ 24 @ block  @ 27 @ 
name: splits_vec  @ 36 @ name: splits_vec  @ 39 @ 
name: ngram_size  @ 115 @ name: ngram_size  @ 145 @ 
operator: &  @ 97 @ operator: &  @ 126 @ 
name: ngrams_splits  @ 55 @ name: ngrams_splits  @ 76 @ 
if_stmt  @ 42 @ if_stmt  @ 45 @ 
argument  @ 89 @ argument  @ 107 @ 
operator: :  @ 6 @ operator: :  @ 7 @ 
block  @ 136 @ block  @ 166 @ 
call  @ 56 @ call  @ 78 @ 
name: errors  @ 48 @ name: errors  @ 54 @ 
argument  @ 138 @ argument  @ 168 @ 
argument  @ 12 @ argument  @ 13 @ 
operator: .  @ 83 @ operator: .  @ 98 @ 
literal: 0  @ 109 @ literal: 0  @ 139 @ 
decl_stmt  @ 170 @ decl_stmt  @ 200 @ 
name: context  @ 12 @ name: context  @ 13 @ 
argument_list  @ 48 @ argument_list  @ 53 @ 
expr  @ 176 @ expr  @ 206 @ 
name: OP_REQUIRES_OK  @ 62 @ name: OP_REQUIRES_OK  @ 68 @ 
literal: "Last split value must be data size. Expected "  @ 51 @ literal: "Last split value must be data size. Expected "  @ 61 @ 
expr_stmt  @ 160 @ expr_stmt  @ 190 @ 
argument  @ 31 @ argument  @ 34 @ 
type  @ 86 @ type  @ 104 @ 
call  @ 109 @ call  @ 139 @ 
decl_stmt  @ 110 @ decl_stmt  @ 140 @ 
name: splits_vec  @ 46 @ name: splits_vec  @ 51 @ 
type  @ 106 @ type  @ 136 @ 
name: GetAttr  @ 9 @ name: GetAttr  @ 10 @ 
operator: ::  @ 30 @ operator: ::  @ 33 @ 
operator: ::  @ 26 @ operator: ::  @ 29 @ 
name: Compute  @ 29 @ name: Compute  @ 32 @ 
name: GetAttr  @ 12 @ name: GetAttr  @ 13 @ 
operator: .  @ 117 @ operator: .  @ 147 @ 
call  @ 12 @ call  @ 13 @ 
expr  @ 129 @ expr  @ 159 @ 
type  @ 105 @ type  @ 135 @ 
comment: // Only output first num_tokens - 1 pairs of data and separator  @ 135 @ comment: // Only output first num_tokens - 1 pairs of data and separator  @ 165 @ 
name: pad_width  @ 107 @ name: pad_width  @ 137 @ 
call  @ 123 @ call  @ 153 @ 
name: output_start  @ 99 @ name: output_start  @ 128 @ 
argument_list  @ 8 @ argument_list  @ 9 @ 
decl  @ 108 @ decl  @ 138 @ 
operator: &  @ 31 @ operator: &  @ 34 @ 
argument_list  @ 107 @ argument_list  @ 137 @ 
expr  @ 45 @ expr  @ 50 @ 
operator: <  @ 156 @ operator: <  @ 186 @ 
call  @ 9 @ call  @ 10 @ 
argument  @ 48 @ argument  @ 55 @ 
argument  @ 56 @ argument  @ 78 @ 
argument  @ 99 @ argument  @ 128 @ 
argument  @ 13 @ argument  @ 14 @ 
comment: // Size of the tokens.  @ 118 @ comment: // Size of the tokens.  @ 148 @ 
comment: // token or with the right pad.  @ 145 @ comment: // token or with the right pad.  @ 175 @ 
name: context  @ 9 @ name: context  @ 10 @ 
call  @ 21 @ call  @ 23 @ 
init  @ 106 @ init  @ 136 @ 
name: append  @ 133 @ name: append  @ 163 @ 
expr  @ 10 @ expr  @ 11 @ 
name: data  @ 32 @ name: data  @ 35 @ 
expr  @ 104 @ expr  @ 133 @ 
expr  @ 133 @ expr  @ 163 @ 
name: length  @ 74 @ name: length  @ 86 @ 
argument_list  @ 5 @ argument_list  @ 5 @ 
expr  @ 84 @ expr  @ 101 @ 
expr  @ 99 @ expr  @ 128 @ 
type  @ 46 @ type  @ 51 @ 
expr  @ 40 @ expr  @ 43 @ 
type  @ 131 @ type  @ 161 @ 
expr  @ 51 @ expr  @ 62 @ 
name: splits_vec  @ 87 @ name: splits_vec  @ 105 @ 
argument  @ 10 @ argument  @ 11 @ 
argument  @ 82 @ argument  @ 95 @ 
argument  @ 104 @ argument  @ 133 @ 
decl  @ 174 @ decl  @ 204 @ 
else  @ 151 @ else  @ 181 @ 
name: n  @ 156 @ name: n  @ 186 @ 
name: data  @ 146 @ name: data  @ 176 @ 
type  @ 2 @ type  @ 2 @ 
name: int  @ 106 @ name: int  @ 136 @ 
argument  @ 51 @ argument  @ 61 @ 
name: ngram_size  @ 123 @ name: ngram_size  @ 153 @ 
operator: (  @ 36 @ operator: (  @ 39 @ 
expr  @ 56 @ expr  @ 78 @ 
expr  @ 149 @ expr  @ 179 @ 
operator: *  @ 61 @ operator: *  @ 67 @ 
name: tensorflow  @ 55 @ name: tensorflow  @ 76 @ 
name: ngrams_splits_data  @ 78 @ name: ngrams_splits_data  @ 90 @ 
argument  @ 87 @ argument  @ 105 @ 
name: ngram_index  @ 109 @ name: ngram_index  @ 139 @ 
expr  @ 31 @ expr  @ 34 @ 
literal: 0  @ 147 @ literal: 0  @ 177 @ 
name: ngram  @ 133 @ name: ngram  @ 163 @ 
init  @ 45 @ init  @ 50 @ 
literal: 1  @ 146 @ literal: 1  @ 176 @ 
argument_list  @ 56 @ argument_list  @ 77 @ 
operator: ||  @ 60 @ operator: ||  @ 66 @ 
incr  @ 156 @ incr  @ 186 @ 
expr  @ 11 @ expr  @ 12 @ 
operator: .  @ 120 @ operator: .  @ 150 @ 
name: context  @ 10 @ name: context  @ 11 @ 
decl_stmt  @ 85 @ decl_stmt  @ 102 @ 
type  @ 173 @ type  @ 203 @ 
name: ngram_widths_  @ 10 @ name: ngram_widths_  @ 11 @ 
call  @ 14 @ call  @ 15 @ 
init  @ 156 @ init  @ 186 @ 
expr  @ 9 @ expr  @ 10 @ 
operator: &  @ 12 @ operator: &  @ 13 @ 
block_content  @ 156 @ block_content  @ 186 @ 
specifier: const  @ 30 @ specifier: const  @ 33 @ 
name: i  @ 45 @ name: i  @ 50 @ 
specifier: const  @ 32 @ specifier: const  @ 35 @ 
argument_list  @ 87 @ argument_list  @ 105 @ 
expr  @ 85 @ expr  @ 102 @ 
operator: ->  @ 14 @ operator: ->  @ 15 @ 
name: append  @ 138 @ name: append  @ 168 @ 
operator: ->  @ 36 @ operator: ->  @ 39 @ 
argument_list  @ 11 @ argument_list  @ 12 @ 
call  @ 130 @ call  @ 160 @ 
block_content  @ 61 @ block_content  @ 67 @ 
name: num_ngrams  @ 90 @ name: num_ngrams  @ 108 @ 
name: i  @ 49 @ name: i  @ 57 @ 
argument_list  @ 24 @ argument_list  @ 27 @ 
block  @ 45 @ block  @ 50 @ 
argument_list  @ 47 @ argument_list  @ 52 @ 
condition  @ 142 @ condition  @ 172 @ 
name: separator_  @ 138 @ name: separator_  @ 168 @ 
operator: <  @ 131 @ operator: <  @ 161 @ 
name: input  @ 35 @ name: input  @ 38 @ 
argument  @ 35 @ argument  @ 38 @ 
name: n  @ 147 @ name: n  @ 177 @ 
condition  @ 147 @ condition  @ 177 @ 
name: shape  @ 62 @ name: shape  @ 69 @ 
name: CreateNgrams  @ 99 @ name: CreateNgrams  @ 128 @ 
literal: "left_pad"  @ 11 @ literal: "left_pad"  @ 12 @ 
operator: <  @ 32 @ operator: <  @ 35 @ 
decl  @ 111 @ decl  @ 141 @ 
expr  @ 12 @ expr  @ 13 @ 
incr  @ 136 @ incr  @ 166 @ 
call  @ 62 @ call  @ 68 @ 
call  @ 26 @ call  @ 29 @ 
name: ngrams_splits  @ 56 @ name: ngrams_splits  @ 78 @ 
decl_stmt  @ 97 @ decl_stmt  @ 126 @ 
operator: ?  @ 21 @ operator: ?  @ 23 @ 
expr  @ 111 @ expr  @ 141 @ 
comment: // correct amount of space in the string.  @ 114 @ comment: // correct amount of space in the string.  @ 144 @ 
name: ngram_width  @ 85 @ name: ngram_width  @ 103 @ 
argument  @ 51 @ argument  @ 62 @ 
call  @ 165 @ call  @ 195 @ 
name: ngram_width  @ 89 @ name: ngram_width  @ 107 @ 
expr  @ 149 @ expr  @ 179 @ 
operator: (  @ 40 @ operator: (  @ 43 @ 
name: input_data_size  @ 51 @ name: input_data_size  @ 59 @ 
operator: ::  @ 61 @ operator: ::  @ 67 @ 
name: output  @ 104 @ name: output  @ 133 @ 
literal: 1  @ 21 @ literal: 1  @ 24 @ 
type  @ 73 @ type  @ 85 @ 
name: flat  @ 40 @ name: flat  @ 43 @ 
comment: // ever be wider than 'ngram_width' - 1.  @ 20 @ comment: // ever be wider than 'ngram_width' - 1.  @ 22 @ 
expr  @ 48 @ expr  @ 55 @ 
argument  @ 5 @ argument  @ 5 @ 
name: int  @ 72 @ name: int  @ 84 @ 
expr  @ 31 @ expr  @ 34 @ 
call  @ 13 @ call  @ 14 @ 
operator: (  @ 26 @ operator: (  @ 29 @ 
operator: ::  @ 81 @ operator: ::  @ 93 @ 
name  @ 78 @ name  @ 90 @ 
decl  @ 106 @ decl  @ 136 @ 
argument  @ 35 @ argument  @ 38 @ 
init  @ 86 @ init  @ 104 @ 
name: num_ngrams  @ 105 @ name: num_ngrams  @ 135 @ 
name  @ 137 @ name  @ 167 @ 
call  @ 49 @ call  @ 57 @ 
operator: ->  @ 10 @ operator: ->  @ 11 @ 
expr  @ 21 @ expr  @ 23 @ 
expr  @ 32 @ expr  @ 35 @ 
expr  @ 25 @ expr  @ 28 @ 
expr  @ 89 @ expr  @ 107 @ 
expr  @ 81 @ expr  @ 93 @ 
argument  @ 74 @ argument  @ 86 @ 
operator: ::  @ 7 @ operator: ::  @ 8 @ 
operator: >  @ 42 @ operator: >  @ 45 @ 
operator: -  @ 71 @ operator: -  @ 83 @ 
expr  @ 25 @ expr  @ 28 @ 
argument_list  @ 31 @ argument_list  @ 34 @ 
expr  @ 111 @ expr  @ 141 @ 
operator: -  @ 111 @ operator: -  @ 141 @ 
name: int  @ 136 @ name: int  @ 166 @ 
init  @ 87 @ init  @ 105 @ 
expr  @ 62 @ expr  @ 69 @ 
argument_list  @ 46 @ argument_list  @ 51 @ 
name: ngram_index  @ 107 @ name: ngram_index  @ 137 @ 
expr  @ 131 @ expr  @ 161 @ 
expr  @ 111 @ expr  @ 141 @ 
name: i  @ 70 @ name: i  @ 82 @ 
name  @ 84 @ name  @ 101 @ 
expr  @ 107 @ expr  @ 137 @ 
literal: "separator"  @ 9 @ literal: "separator"  @ 10 @ 
expr  @ 86 @ expr  @ 104 @ 
expr  @ 83 @ expr  @ 100 @ 
operator: &  @ 35 @ operator: &  @ 38 @ 
call  @ 158 @ call  @ 188 @ 
expr  @ 21 @ expr  @ 23 @ 
call  @ 7 @ call  @ 8 @ 
incr  @ 45 @ incr  @ 50 @ 
operator: ::  @ 48 @ operator: ::  @ 54 @ 
name: ngram  @ 160 @ name: ngram  @ 190 @ 
decl_stmt  @ 83 @ decl_stmt  @ 98 @ 
init  @ 129 @ init  @ 159 @ 
literal: "right_pad"  @ 12 @ literal: "right_pad"  @ 13 @ 
type  @ 170 @ type  @ 200 @ 
name: size  @ 40 @ name: size  @ 43 @ 
expr  @ 34 @ expr  @ 37 @ 
expr  @ 109 @ expr  @ 139 @ 
name: i  @ 87 @ name: i  @ 105 @ 
operator: ->  @ 148 @ operator: ->  @ 178 @ 
argument  @ 176 @ argument  @ 206 @ 
operator: +  @ 78 @ operator: +  @ 90 @ 
name: flat  @ 36 @ name: flat  @ 39 @ 
argument_list  @ 158 @ argument_list  @ 188 @ 
expr  @ 165 @ expr  @ 195 @ 
name: context  @ 35 @ name: context  @ 38 @ 
expr_stmt  @ 120 @ expr_stmt  @ 150 @ 
name: right_padding  @ 123 @ name: right_padding  @ 153 @ 
argument  @ 51 @ argument  @ 62 @ 
operator: &  @ 32 @ operator: &  @ 35 @ 
expr  @ 48 @ expr  @ 56 @ 
argument  @ 31 @ argument  @ 34 @ 
argument_list  @ 104 @ argument_list  @ 133 @ 
operator: +  @ 146 @ operator: +  @ 176 @ 
block  @ 74 @ block  @ 86 @ 
literal: 1  @ 156 @ literal: 1  @ 186 @ 
operator: ++  @ 45 @ operator: ++  @ 50 @ 
argument_list  @ 49 @ argument_list  @ 57 @ 
call  @ 87 @ call  @ 105 @ 
expr_stmt  @ 64 @ expr_stmt  @ 1 @ 
call  @ 60 @ call  @ 66 @ 
specifier: const  @ 36 @ specifier: const  @ 39 @ 
return  @ 21 @ return  @ 23 @ 
operator: >  @ 111 @ operator: >  @ 141 @ 
expr  @ 119 @ expr  @ 149 @ 
argument_list  @ 14 @ argument_list  @ 15 @ 
name  @ 120 @ name  @ 150 @ 
type  @ 87 @ type  @ 105 @ 
literal: 0  @ 136 @ literal: 0  @ 166 @ 
block  @ 147 @ block  @ 177 @ 
name: shape  @ 56 @ name: shape  @ 78 @ 
operator: <=  @ 70 @ operator: <=  @ 82 @ 
name: int  @ 40 @ name: int  @ 43 @ 
argument  @ 9 @ argument  @ 10 @ 
for  @ 119 @ for  @ 149 @ 
name: append  @ 137 @ name: append  @ 167 @ 
expr  @ 74 @ expr  @ 86 @ 
expr  @ 48 @ expr  @ 56 @ 
name: prev_split  @ 43 @ name: prev_split  @ 46 @ 
operator: (  @ 110 @ operator: (  @ 140 @ 
operator: )  @ 110 @ operator: )  @ 140 @ 
expr  @ 142 @ expr  @ 172 @ 
expr  @ 60 @ expr  @ 66 @ 
expr  @ 44 @ expr  @ 48 @ 
expr  @ 48 @ expr  @ 53 @ 
expr  @ 105 @ expr  @ 135 @ 
argument_list  @ 29 @ argument_list  @ 32 @ 
name: allocate_output  @ 56 @ name: allocate_output  @ 78 @ 
name: auto  @ 97 @ name: auto  @ 126 @ 
operator: ::  @ 109 @ operator: ::  @ 139 @ 
name: auto  @ 83 @ name: auto  @ 98 @ 
call  @ 47 @ call  @ 52 @ 
expr_stmt  @ 47 @ expr_stmt  @ 52 @ 
name: n  @ 119 @ name: n  @ 149 @ 
expr  @ 96 @ expr  @ 125 @ 
control  @ 83 @ control  @ 100 @ 
name: i  @ 84 @ name: i  @ 101 @ 
operator: ==  @ 60 @ operator: ==  @ 66 @ 
expr  @ 84 @ expr  @ 101 @ 
range  @ 5 @ range  @ 6 @ 
argument_list  @ 87 @ argument_list  @ 105 @ 
name: ngram_index  @ 105 @ name: ngram_index  @ 135 @ 
expr  @ 62 @ expr  @ 69 @ 
argument_list  @ 109 @ argument_list  @ 139 @ 
name  @ 40 @ name  @ 43 @ 
operator: <  @ 36 @ operator: <  @ 39 @ 
name: splits  @ 36 @ name: splits  @ 39 @ 
expr  @ 104 @ expr  @ 133 @ 
name: OP_REQUIRES_OK  @ 31 @ name: OP_REQUIRES_OK  @ 34 @ 
expr  @ 115 @ expr  @ 145 @ 
expr  @ 87 @ expr  @ 105 @ 
name: ngram_width  @ 96 @ name: ngram_width  @ 125 @ 
init  @ 88 @ init  @ 106 @ 
expr  @ 126 @ expr  @ 156 @ 
name: right_padding  @ 125 @ name: right_padding  @ 155 @ 
name: GetAttr  @ 10 @ name: GetAttr  @ 11 @ 
name: prev_split  @ 44 @ name: prev_split  @ 49 @ 
literal: 0  @ 44 @ literal: 0  @ 47 @ 
argument_list  @ 117 @ argument_list  @ 147 @ 
name: right_pad_  @ 171 @ name: right_pad_  @ 201 @ 
name: i  @ 46 @ name: i  @ 51 @ 
decl_stmt  @ 171 @ decl_stmt  @ 201 @ 
call  @ 41 @ call  @ 44 @ 
specifier: const  @ 41 @ specifier: const  @ 44 @ 
literal: 0  @ 72 @ literal: 0  @ 84 @ 
name: pad_width  @ 26 @ name: pad_width  @ 29 @ 
call  @ 57 @ call  @ 79 @ 
argument_list  @ 123 @ argument_list  @ 153 @ 
type  @ 88 @ type  @ 106 @ 
argument_list  @ 17 @ argument_list  @ 19 @ 
control  @ 45 @ control  @ 50 @ 
block  @ 105 @ block  @ 135 @ 
operator: (  @ 83 @ operator: (  @ 98 @ 
expr  @ 51 @ expr  @ 59 @ 
operator: ->  @ 137 @ operator: ->  @ 167 @ 
literal: "pad_width"  @ 13 @ literal: "pad_width"  @ 14 @ 
operator: >  @ 40 @ operator: >  @ 43 @ 
block  @ 5 @ block  @ 6 @ 
name: int  @ 119 @ name: int  @ 149 @ 
operator: >  @ 60 @ operator: >  @ 66 @ 
argument  @ 49 @ argument  @ 57 @ 
type  @ 72 @ type  @ 84 @ 
expr  @ 99 @ expr  @ 128 @ 
name: append  @ 146 @ name: append  @ 176 @ 
argument_list  @ 56 @ argument_list  @ 78 @ 
expr  @ 104 @ expr  @ 133 @ 
name: i  @ 71 @ name: i  @ 83 @ 
block  @ 75 @ block  @ 87 @ 
argument  @ 137 @ argument  @ 167 @ 
name  @ 62 @ name  @ 69 @ 
operator: +  @ 96 @ operator: +  @ 125 @ 
macro  @ 82 @ macro  @ 94 @ 
expr  @ 48 @ expr  @ 53 @ 
expr  @ 110 @ expr  @ 140 @ 
literal: 0  @ 62 @ literal: 0  @ 69 @ 
name: int  @ 177 @ name: int  @ 207 @ 
call  @ 133 @ call  @ 163 @ 
name: ngrams_splits_data  @ 78 @ name: ngrams_splits_data  @ 90 @ 
operator: ->  @ 133 @ operator: ->  @ 163 @ 
name: tstring  @ 32 @ name: tstring  @ 35 @ 
decl  @ 87 @ decl  @ 105 @ 
expr_stmt  @ 90 @ expr_stmt  @ 108 @ 
name: context  @ 13 @ name: context  @ 14 @ 
decl_stmt  @ 96 @ decl_stmt  @ 125 @ 
name: int  @ 63 @ name: int  @ 116 @ 
name: right_padding  @ 110 @ name: right_padding  @ 140 @ 
type  @ 71 @ type  @ 83 @ 
call  @ 62 @ call  @ 69 @ 
name  @ 10 @ name  @ 11 @ 
decl  @ 88 @ decl  @ 106 @ 
expr  @ 73 @ expr  @ 85 @ 
argument_list  @ 132 @ argument_list  @ 162 @ 
decl  @ 71 @ decl  @ 83 @ 
decl  @ 173 @ decl  @ 203 @ 
name  @ 56 @ name  @ 78 @ 
name: int  @ 73 @ name: int  @ 85 @ 
expr  @ 9 @ expr  @ 10 @ 
name: tstring  @ 40 @ name: tstring  @ 43 @ 
name: splits_vec  @ 71 @ name: splits_vec  @ 83 @ 
expr  @ 71 @ expr  @ 83 @ 
type  @ 177 @ type  @ 207 @ 
name: data_start  @ 99 @ name: data_start  @ 128 @ 
name: length  @ 126 @ name: length  @ 156 @ 
literal: 0  @ 131 @ literal: 0  @ 161 @ 
argument_list  @ 21 @ argument_list  @ 23 @ 
operator: ++  @ 156 @ operator: ++  @ 186 @ 
index  @ 84 @ index  @ 101 @ 
argument  @ 8 @ argument  @ 9 @ 
decl_stmt  @ 115 @ decl_stmt  @ 145 @ 
name: int  @ 17 @ name: int  @ 19 @ 
name: tstring  @ 104 @ name: tstring  @ 133 @ 
argument_list  @ 120 @ argument_list  @ 150 @ 
name: typename  @ 5 @ name: typename  @ 5 @ 
literal: "]"  @ 48 @ literal: "]"  @ 56 @ 
expr  @ 64 @ expr  @ 115 @ 
name: length  @ 117 @ name: length  @ 147 @ 
expr  @ 51 @ expr  @ 61 @ 
control  @ 147 @ control  @ 177 @ 
decl  @ 2 @ decl  @ 2 @ 
operator: .  @ 60 @ operator: .  @ 66 @ 
name: auto  @ 32 @ name: auto  @ 35 @ 
decl  @ 131 @ decl  @ 161 @ 
name: length  @ 123 @ name: length  @ 153 @ 
name: ngram_width  @ 73 @ name: ngram_width  @ 85 @ 
operator: *  @ 104 @ operator: *  @ 133 @ 
expr  @ 123 @ expr  @ 153 @ 
name: tensorflow  @ 81 @ name: tensorflow  @ 93 @ 
name: i  @ 70 @ name: i  @ 82 @ 
name: min  @ 21 @ name: min  @ 23 @ 
expr  @ 99 @ expr  @ 128 @ 
call  @ 83 @ call  @ 98 @ 
argument_list  @ 48 @ argument_list  @ 55 @ 
operator: ->  @ 62 @ operator: ->  @ 69 @ 
name: num_tokens  @ 146 @ name: num_tokens  @ 176 @ 
name: context  @ 35 @ name: context  @ 38 @ 
expr  @ 51 @ expr  @ 62 @ 
init  @ 83 @ init  @ 100 @ 
decl_stmt  @ 88 @ decl_stmt  @ 106 @ 
call  @ 48 @ call  @ 54 @ 
literal: 1  @ 70 @ literal: 1  @ 82 @ 
literal: 0  @ 115 @ literal: 0  @ 145 @ 
literal: 2  @ 96 @ literal: 2  @ 125 @ 
argument  @ 165 @ argument  @ 195 @ 
literal: 0  @ 21 @ literal: 0  @ 23 @ 
name: input_data  @ 84 @ name: input_data  @ 101 @ 
argument  @ 56 @ argument  @ 78 @ 
literal: 1  @ 45 @ literal: 1  @ 50 @ 
call  @ 74 @ call  @ 86 @ 
name: ngram_size  @ 117 @ name: ngram_size  @ 147 @ 
operator: -  @ 71 @ operator: -  @ 83 @ 
argument  @ 44 @ argument  @ 47 @ 
operator: *  @ 123 @ operator: *  @ 153 @ 
operator: ->  @ 149 @ operator: ->  @ 179 @ 
name  @ 64 @ name  @ 115 @ 
expr  @ 78 @ expr  @ 90 @ 
decl_stmt  @ 71 @ decl_stmt  @ 83 @ 
name: size  @ 60 @ name: size  @ 66 @ 
expr  @ 51 @ expr  @ 62 @ 
operator: <  @ 40 @ operator: <  @ 43 @ 
name: SPLITS_TYPE  @ 36 @ name: SPLITS_TYPE  @ 39 @ 
name: i  @ 47 @ name: i  @ 52 @ 
expr  @ 148 @ expr  @ 178 @ 
expr  @ 89 @ expr  @ 107 @ 
argument  @ 21 @ argument  @ 24 @ 
argument_list  @ 12 @ argument_list  @ 13 @ 
init  @ 131 @ init  @ 161 @ 
operator: +  @ 137 @ operator: +  @ 167 @ 
operator: :  @ 21 @ operator: :  @ 23 @ 
argument  @ 62 @ argument  @ 69 @ 
name: ngram_width  @ 74 @ name: ngram_width  @ 86 @ 
name: ngram  @ 130 @ name: ngram  @ 160 @ 
argument  @ 17 @ argument  @ 19 @ 
name: separator_  @ 169 @ name: separator_  @ 199 @ 
expr  @ 63 @ expr  @ 71 @ 
argument  @ 44 @ argument  @ 47 @ 
argument  @ 14 @ argument  @ 15 @ 
operator: ::  @ 8 @ operator: ::  @ 9 @ 
expr  @ 158 @ expr  @ 188 @ 
name: empty  @ 61 @ name: empty  @ 67 @ 
name: string  @ 169 @ name: string  @ 199 @ 
comment: // has been the separator from the left padding loop above. Hence,  @ 153 @ comment: // has been the separator from the left padding loop above. Hence,  @ 183 @ 
name: pad_width_  @ 96 @ name: pad_width_  @ 125 @ 
name: num_ngrams  @ 88 @ name: num_ngrams  @ 106 @ 
operator: <  @ 60 @ operator: <  @ 66 @ 
expr  @ 136 @ expr  @ 166 @ 
control  @ 136 @ control  @ 166 @ 
if  @ 142 @ if  @ 172 @ 
expr  @ 26 @ expr  @ 29 @ 
name: OP_REQUIRES_OK  @ 9 @ name: OP_REQUIRES_OK  @ 10 @ 
name: void  @ 29 @ name: void  @ 32 @ 
name  @ 41 @ name  @ 44 @ 
name: separator_  @ 133 @ name: separator_  @ 163 @ 
operator: )  @ 109 @ operator: )  @ 139 @ 
argument_list  @ 99 @ argument_list  @ 128 @ 
comment: // padding, not a separator.  @ 155 @ comment: // padding, not a separator.  @ 185 @ 
operator: (  @ 32 @ operator: (  @ 35 @ 
type  @ 108 @ type  @ 138 @ 
init  @ 73 @ init  @ 85 @ 
name  @ 60 @ name  @ 66 @ 
expr  @ 78 @ expr  @ 90 @ 
name: Tensor  @ 34 @ name: Tensor  @ 37 @ 
expr  @ 63 @ expr  @ 81 @ 
operator: ->  @ 158 @ operator: ->  @ 188 @ 
call  @ 87 @ call  @ 105 @ 
init  @ 85 @ init  @ 102 @ 
comment: // Calculate the total expected size of the ngram so we can reserve the  @ 113 @ comment: // Calculate the total expected size of the ngram so we can reserve the  @ 143 @ 
comment: // ngram.  @ 164 @ comment: // ngram.  @ 194 @ 
block_content  @ 43 @ block_content  @ 46 @ 
name: flat  @ 60 @ name: flat  @ 66 @ 
name: ngram_size  @ 120 @ name: ngram_size  @ 150 @ 
name: data  @ 57 @ name: data  @ 79 @ 
argument_list  @ 60 @ argument_list  @ 66 @ 
init  @ 43 @ init  @ 46 @ 
expr  @ 137 @ expr  @ 167 @ 
condition  @ 105 @ condition  @ 135 @ 
argument  @ 21 @ argument  @ 23 @ 
init  @ 156 @ init  @ 186 @ 
operator: ::  @ 55 @ operator: ::  @ 76 @ 
decl_stmt  @ 1 @ decl_stmt  @ 1 @ 
decl  @ 170 @ decl  @ 200 @ 
argument  @ 13 @ argument  @ 14 @ 
name: max  @ 109 @ name: max  @ 139 @ 
argument  @ 12 @ argument  @ 13 @ 
for  @ 147 @ for  @ 177 @ 
init  @ 70 @ init  @ 82 @ 
name: length  @ 88 @ name: length  @ 106 @ 
argument_list  @ 10 @ argument_list  @ 11 @ 
decl  @ 156 @ decl  @ 186 @ 
expr_stmt  @ 132 @ expr_stmt  @ 162 @ 
expr  @ 46 @ expr  @ 51 @ 
incr  @ 105 @ incr  @ 135 @ 
expr  @ 146 @ expr  @ 176 @ 
name: n  @ 156 @ name: n  @ 186 @ 
decl  @ 86 @ decl  @ 104 @ 
literal: 0  @ 60 @ literal: 0  @ 66 @ 
argument_list  @ 148 @ argument_list  @ 178 @ 
operator: &  @ 9 @ operator: &  @ 10 @ 
call  @ 10 @ call  @ 11 @ 
condition  @ 136 @ condition  @ 166 @ 
decl_stmt  @ 174 @ decl_stmt  @ 204 @ 
type  @ 97 @ type  @ 126 @ 
operator: ->  @ 130 @ operator: ->  @ 160 @ 
operator: &  @ 14 @ operator: &  @ 16 @ 
argument  @ 46 @ argument  @ 51 @ 
argument  @ 62 @ argument  @ 69 @ 
operator: >  @ 142 @ operator: >  @ 172 @ 
expr  @ 131 @ expr  @ 161 @ 
init  @ 96 @ init  @ 125 @ 
call  @ 25 @ call  @ 28 @ 
operator: (  @ 47 @ operator: (  @ 52 @ 
argument  @ 157 @ argument  @ 187 @ 
argument  @ 44 @ argument  @ 49 @ 
call  @ 146 @ call  @ 176 @ 
name: string  @ 170 @ name: string  @ 200 @ 
type  @ 110 @ type  @ 140 @ 
name: splits_vec  @ 41 @ name: splits_vec  @ 44 @ 
name: output  @ 129 @ name: output  @ 159 @ 
argument  @ 62 @ argument  @ 68 @ 
operator: (  @ 109 @ operator: (  @ 139 @ 
expr_stmt  @ 51 @ expr_stmt  @ 59 @ 
name: data_start_index  @ 120 @ name: data_start_index  @ 150 @ 
decl_stmt  @ 173 @ decl_stmt  @ 203 @ 
incr  @ 83 @ incr  @ 100 @ 
name: int  @ 45 @ name: int  @ 50 @ 
name: i  @ 48 @ name: i  @ 55 @ 
name: append  @ 160 @ name: append  @ 190 @ 
block  @ 60 @ block  @ 66 @ 
operator: )  @ 109 @ operator: )  @ 139 @ 
expr  @ 136 @ expr  @ 166 @ 
expr  @ 12 @ expr  @ 13 @ 
argument_list  @ 88 @ argument_list  @ 106 @ 
argument  @ 104 @ argument  @ 133 @ 
name: length  @ 26 @ name: length  @ 29 @ 
call  @ 12 @ call  @ 13 @ 
call  @ 35 @ call  @ 38 @ 
name  @ 35 @ name  @ 38 @ 
name: i  @ 45 @ name: i  @ 50 @ 
decl  @ 97 @ decl  @ 126 @ 
name: append  @ 158 @ name: append  @ 188 @ 
call  @ 35 @ call  @ 38 @ 
expr  @ 13 @ expr  @ 14 @ 
expr  @ 105 @ expr  @ 135 @ 
block_content  @ 46 @ block_content  @ 51 @ 
expr  @ 48 @ expr  @ 56 @ 
name: int  @ 131 @ name: int  @ 161 @ 
name: separator_  @ 126 @ name: separator_  @ 156 @ 
argument  @ 109 @ argument  @ 139 @ 
argument_list  @ 62 @ argument_list  @ 69 @ 
call  @ 48 @ call  @ 55 @ 
decl  @ 115 @ decl  @ 145 @ 
name: int  @ 88 @ name: int  @ 106 @ 
operator: )  @ 60 @ operator: )  @ 66 @ 
name: tstring  @ 60 @ name: tstring  @ 66 @ 
operator: ++  @ 136 @ operator: ++  @ 166 @ 
argument  @ 7 @ argument  @ 8 @ 
name: ngram_index  @ 111 @ name: ngram_index  @ 141 @ 
if  @ 75 @ if  @ 87 @ 
comment: // the right padding that follows, to ensure ngram ends either with the  @ 144 @ comment: // the right padding that follows, to ensure ngram ends either with the  @ 174 @ 
name: use_pad_  @ 172 @ name: use_pad_  @ 202 @ 
name: data  @ 31 @ name: data  @ 34 @ 
operator: .  @ 41 @ operator: .  @ 44 @ 
decl  @ 177 @ decl  @ 207 @ 
argument  @ 160 @ argument  @ 190 @ 
expr  @ 71 @ expr  @ 83 @ 
index  @ 129 @ index  @ 159 @ 
comment: // If we don't have tokens, then the last item inserted into the ngram  @ 152 @ comment: // If we don't have tokens, then the last item inserted into the ngram  @ 182 @ 
name: std  @ 21 @ name: std  @ 23 @ 
name: prev_split  @ 44 @ name: prev_split  @ 47 @ 
index  @ 64 @ index  @ 115 @ 
argument_list  @ 60 @ argument_list  @ 66 @ 
name: i  @ 63 @ name: context  @ 71 @ 
name: left_pad_  @ 11 @ name: left_pad_  @ 12 @ 
name: input_data_size  @ 40 @ name: input_data_size  @ 43 @ 
comment: // Size of the separators.  @ 124 @ comment: // Size of the separators.  @ 154 @ 
operator: -  @ 125 @ operator: -  @ 155 @ 
literal: "data"  @ 31 @ literal: "data"  @ 34 @ 
condition  @ 45 @ condition  @ 50 @ 
expr_stmt  @ 62 @ expr_stmt  @ 68 @ 
argument  @ 48 @ argument  @ 54 @ 
expr  @ 44 @ expr  @ 48 @ 
name: context  @ 62 @ name: context  @ 69 @ 
name: get_pad_width  @ 106 @ name: get_pad_width  @ 136 @ 
if_stmt  @ 142 @ if_stmt  @ 172 @ 
operator: <  @ 119 @ operator: <  @ 149 @ 
operator: =  @ 32 @ operator: =  @ 35 @ 
name: output_start  @ 97 @ name: output_start  @ 126 @ 
expr  @ 105 @ expr  @ 135 @ 
name: pad_width_  @ 13 @ name: pad_width_  @ 14 @ 
call  @ 157 @ call  @ 187 @ 
name  @ 31 @ name  @ 34 @ 
operator: =  @ 78 @ operator: =  @ 90 @ 
argument  @ 106 @ argument  @ 136 @ 
ternary  @ 111 @ ternary  @ 141 @ 
decl_stmt  @ 2 @ decl_stmt  @ 2 @ 
name: context  @ 9 @ name: context  @ 10 @ 
name: ngram_widths_  @ 176 @ name: ngram_widths_  @ 206 @ 
name: void  @ 104 @ name: void  @ 133 @ 
name: ngram  @ 137 @ name: ngram  @ 167 @ 
expr  @ 156 @ expr  @ 186 @ 
type  @ 83 @ type  @ 98 @ 
literal: 0  @ 105 @ literal: 0  @ 135 @ 
literal: 0  @ 63 @ literal: 0  @ 81 @ 
operator: ,  @ 51 @ operator: ,  @ 59 @ 
argument  @ 130 @ argument  @ 160 @ 
type  @ 136 @ type  @ 166 @ 
expr  @ 44 @ expr  @ 49 @ 
expr_stmt  @ 176 @ expr_stmt  @ 206 @ 
argument  @ 11 @ argument  @ 12 @ 
decl_stmt  @ 104 @ decl_stmt  @ 133 @ 
literal: 1  @ 78 @ literal: 1  @ 90 @ 
name: data  @ 104 @ name: data  @ 133 @ 
argument  @ 31 @ argument  @ 34 @ 
index  @ 97 @ index  @ 126 @ 
operator: =  @ 49 @ operator: =  @ 57 @ 
then  @ 111 @ then  @ 141 @ 
decl_stmt  @ 86 @ decl_stmt  @ 104 @ 
operator: ->  @ 132 @ operator: ->  @ 162 @ 
decl  @ 107 @ decl  @ 137 @ 
argument_list  @ 84 @ argument_list  @ 101 @ 
operator: -  @ 156 @ operator: -  @ 186 @ 
name: int  @ 104 @ name: int  @ 133 @ 
expr  @ 14 @ expr  @ 15 @ 
call  @ 31 @ call  @ 34 @ 
init  @ 105 @ init  @ 135 @ 
operator: +  @ 125 @ operator: +  @ 155 @ 
operator: ,  @ 51 @ operator: ,  @ 59 @ 
name: public  @ 5 @ name: public  @ 6 @ 
expr_stmt  @ 48 @ expr_stmt  @ 53 @ 
argument_list  @ 165 @ argument_list  @ 195 @ 
name: left_padding  @ 111 @ name: left_padding  @ 141 @ 
name: num_ngrams  @ 98 @ name: num_ngrams  @ 127 @ 
name: n  @ 119 @ name: n  @ 149 @ 
specifier: const  @ 40 @ specifier: const  @ 43 @ 
for  @ 131 @ for  @ 161 @ 
name: InvalidArgument  @ 51 @ name: InvalidArgument  @ 60 @ 
argument  @ 146 @ argument  @ 176 @ 
operator: +=  @ 117 @ operator: +=  @ 147 @ 
control  @ 119 @ control  @ 149 @ 
operator: &  @ 36 @ operator: &  @ 39 @ 
decl_stmt  @ 72 @ decl_stmt  @ 84 @ 
expr  @ 136 @ expr  @ 166 @ 
block  @ 70 @ block  @ 82 @ 
block_content  @ 105 @ block_content  @ 135 @ 
call  @ 132 @ call  @ 162 @ 
control  @ 105 @ control  @ 135 @ 
argument  @ 74 @ argument  @ 86 @ 
name: int  @ 147 @ name: int  @ 177 @ 
name: n  @ 131 @ name: n  @ 161 @ 
type  @ 104 @ type  @ 133 @ 
literal: 0  @ 26 @ literal: 0  @ 29 @ 
block_content  @ 2 @ block_content  @ 2 @ 
expr  @ 21 @ expr  @ 24 @ 
name  @ 32 @ name  @ 35 @ 
name: data_start_index  @ 137 @ name: data_start_index  @ 167 @ 
argument  @ 35 @ argument  @ 38 @ 
name: auto  @ 36 @ name: auto  @ 39 @ 
name: n  @ 137 @ name: n  @ 167 @ 
operator: .  @ 32 @ operator: .  @ 35 @ 
block_content  @ 4 @ block_content  @ 4 @ 
literal: ", "  @ 48 @ literal: ", "  @ 56 @ 
name: int  @ 105 @ name: int  @ 135 @ 
operator: )  @ 26 @ operator: )  @ 29 @ 
expr  @ 10 @ expr  @ 11 @ 
comment: // In debug mode only: validate that we've reserved enough space for the  @ 163 @ comment: // In debug mode only: validate that we've reserved enough space for the  @ 193 @ 
decl  @ 70 @ decl  @ 82 @ 
name: Tensor  @ 55 @ name: Tensor  @ 76 @ 
expr_stmt  @ 158 @ expr_stmt  @ 188 @ 
name: output_start_idx  @ 86 @ name: output_start_idx  @ 104 @ 
index  @ 78 @ index  @ 90 @ 
name: int  @ 111 @ name: int  @ 141 @ 
expr  @ 146 @ expr  @ 176 @ 
name: input_data_size  @ 51 @ name: input_data_size  @ 62 @ 
name: ngram_widths_  @ 73 @ name: ngram_widths_  @ 85 @ 
expr_stmt  @ 44 @ expr_stmt  @ 47 @ 
name  @ 62 @ name  @ 69 @ 
expr  @ 83 @ expr  @ 98 @ 
operator: ::  @ 44 @ operator: ::  @ 48 @ 
operator: )  @ 26 @ operator: )  @ 29 @ 
name: ngrams_splits  @ 57 @ name: ngrams_splits  @ 79 @ 
control  @ 70 @ control  @ 82 @ 
argument  @ 149 @ argument  @ 179 @ 
operator: <  @ 105 @ operator: <  @ 135 @ 
name: i  @ 64 @ name: i  @ 115 @ 
expr  @ 104 @ expr  @ 134 @ 
name: left_pad_  @ 170 @ name: left_pad_  @ 200 @ 
name: pad_width  @ 25 @ name: pad_width  @ 28 @ 
init  @ 136 @ init  @ 166 @ 
if  @ 42 @ if  @ 45 @ 
decl_stmt  @ 111 @ decl_stmt  @ 141 @ 
argument_list  @ 62 @ argument_list  @ 69 @ 
expr  @ 129 @ expr  @ 159 @ 
argument_list  @ 138 @ argument_list  @ 168 @ 
name: data  @ 32 @ name: data  @ 35 @ 
name: num_tokens  @ 125 @ name: num_tokens  @ 155 @ 
expr  @ 88 @ expr  @ 106 @ 
name: splits  @ 56 @ name: splits  @ 78 @ 
condition  @ 70 @ condition  @ 82 @ 
incr  @ 119 @ incr  @ 149 @ 
name  @ 12 @ name  @ 13 @ 
decl_stmt  @ 84 @ decl_stmt  @ 101 @ 
call  @ 32 @ call  @ 35 @ 
for  @ 45 @ for  @ 50 @ 
name: i  @ 63 @ name: empty  @ 71 @ 
type  @ 156 @ type  @ 186 @ 
call  @ 44 @ call  @ 47 @ 
type  @ 85 @ type  @ 102 @ 
name: num_ngrams  @ 99 @ name: num_ngrams  @ 128 @ 
block_content  @ 5 @ block_content  @ 5 @ 
expr  @ 35 @ expr  @ 38 @ 
condition  @ 42 @ condition  @ 45 @ 
name: size  @ 60 @ name: size  @ 66 @ 
name: override  @ 29 @ name: override  @ 32 @ 
call  @ 138 @ call  @ 168 @ 
block  @ 29 @ block  @ 32 @ 
argument  @ 43 @ argument  @ 46 @ 
argument_list  @ 56 @ argument_list  @ 78 @ 
name: n  @ 136 @ name: n  @ 166 @ 
name: get_num_ngrams  @ 74 @ name: get_num_ngrams  @ 86 @ 
name: preserve_short_  @ 14 @ name: preserve_short_  @ 16 @ 
name: preserve_short_  @ 75 @ name: preserve_short_  @ 87 @ 
operator: &&  @ 75 @ operator: &&  @ 87 @ 
type  @ 169 @ type  @ 199 @ 
name: namespace  @ 4 @ name: namespace  @ 4 @ 
decl_stmt  @ 177 @ decl_stmt  @ 207 @ 
expr  @ 146 @ expr  @ 176 @ 
return  @ 26 @ return  @ 29 @ 
expr  @ 109 @ expr  @ 139 @ 
operator: ->  @ 56 @ operator: ->  @ 78 @ 
operator: -  @ 146 @ operator: -  @ 176 @ 
init  @ 115 @ init  @ 145 @ 
literal: 1  @ 109 @ literal: 1  @ 139 @ 
literal: 0  @ 111 @ literal: 0  @ 141 @ 
expr  @ 42 @ expr  @ 45 @ 
operator: <  @ 136 @ operator: <  @ 166 @ 
argument_list  @ 7 @ argument_list  @ 8 @ 
name: i  @ 83 @ name: i  @ 100 @ 
argument  @ 11 @ argument  @ 12 @ 
argument_list  @ 71 @ argument_list  @ 83 @ 
expr  @ 9 @ expr  @ 10 @ 
operator: <  @ 147 @ operator: <  @ 177 @ 
operator: *  @ 7 @ operator: *  @ 8 @ 
expr  @ 89 @ expr  @ 107 @ 
name: int  @ 108 @ name: int  @ 138 @ 
expr  @ 56 @ expr  @ 78 @ 
call  @ 107 @ call  @ 137 @ 
type  @ 115 @ type  @ 145 @ 
call  @ 84 @ call  @ 101 @ 
name  @ 9 @ name  @ 10 @ 
comment: // output right pad and separator and make sure to finish with a  @ 154 @ comment: // output right pad and separator and make sure to finish with a  @ 184 @ 
expr  @ 43 @ expr  @ 46 @ 
name: left_pad_  @ 132 @ name: left_pad_  @ 162 @ 
type  @ 84 @ type  @ 101 @ 
name: i  @ 83 @ name: i  @ 100 @ 
expr  @ 147 @ expr  @ 177 @ 
expr  @ 106 @ expr  @ 136 @ 
literal: 1  @ 26 @ literal: 1  @ 29 @ 
name: data  @ 137 @ name: data  @ 167 @ 
block  @ 2 @ block  @ 2 @ 
operator: >  @ 75 @ operator: >  @ 87 @ 
expr  @ 12 @ expr  @ 13 @ 
expr  @ 119 @ expr  @ 149 @ 
name  @ 126 @ name  @ 156 @ 
name: GetAttr  @ 11 @ name: GetAttr  @ 12 @ 
name: std  @ 26 @ name: std  @ 29 @ 
operator: ->  @ 165 @ operator: ->  @ 195 @ 
argument_list  @ 62 @ argument_list  @ 68 @ 
operator: >=  @ 46 @ operator: >=  @ 51 @ 
type  @ 98 @ type  @ 127 @ 
operator: ::  @ 176 @ operator: ::  @ 206 @ 
expr_stmt  @ 148 @ expr_stmt  @ 178 @ 
type  @ 129 @ type  @ 159 @ 
name: length  @ 71 @ name: length  @ 83 @ 
name: input_data  @ 32 @ name: input_data  @ 35 @ 
name: tensorflow  @ 5 @ name: tensorflow  @ 6 @ 
argument_list  @ 43 @ argument_list  @ 46 @ 
name: class  @ 5 @ name: class  @ 6 @ 
name: extend_pad_  @ 173 @ name: extend_pad_  @ 203 @ 
operator: *  @ 26 @ operator: *  @ 29 @ 
name: ngram_index  @ 105 @ name: ngram_index  @ 135 @ 
name: errors  @ 44 @ name: errors  @ 48 @ 
type  @ 119 @ type  @ 149 @ 
argument  @ 9 @ argument  @ 10 @ 
decl_stmt  @ 108 @ decl_stmt  @ 138 @ 
name: data_start  @ 84 @ name: data_start  @ 101 @ 
expr  @ 14 @ expr  @ 16 @ 
init  @ 131 @ init  @ 161 @ 
expr  @ 55 @ expr  @ 76 @ 
incr  @ 147 @ incr  @ 177 @ 
block_content  @ 148 @ block_content  @ 178 @ 
index  @ 146 @ index  @ 176 @ 
decl_stmt  @ 172 @ decl_stmt  @ 202 @ 
expr  @ 44 @ expr  @ 47 @ 
name: int  @ 107 @ name: int  @ 137 @ 
init  @ 147 @ init  @ 177 @ 
argument  @ 12 @ argument  @ 13 @ 
name: ngram_size  @ 126 @ name: ngram_size  @ 156 @ 
name: ngram_width  @ 104 @ name: ngram_width  @ 134 @ 
operator: )  @ 47 @ operator: )  @ 52 @ 
name: flat  @ 83 @ name: flat  @ 98 @ 
init  @ 45 @ init  @ 50 @ 
name  @ 56 @ name  @ 78 @ 
operator: +=  @ 120 @ operator: +=  @ 150 @ 
name: right_pad_  @ 12 @ name: right_pad_  @ 13 @ 
expr  @ 70 @ expr  @ 82 @ 
expr_stmt  @ 123 @ expr_stmt  @ 153 @ 
operator: <  @ 83 @ operator: <  @ 100 @ 
name: context  @ 31 @ name: context  @ 34 @ 
type  @ 111 @ type  @ 141 @ 
argument_list  @ 57 @ argument_list  @ 79 @ 
expr  @ 98 @ expr  @ 127 @ 
specifier: const  @ 104 @ specifier: const  @ 133 @ 
name: valid_splits  @ 47 @ name: valid_splits  @ 52 @ 
argument  @ 87 @ argument  @ 105 @ 
operator: -  @ 109 @ operator: -  @ 139 @ 
name: right_pad_  @ 149 @ name: right_pad_  @ 179 @ 
name: preserve_short_  @ 174 @ name: preserve_short_  @ 204 @ 
name  @ 148 @ name  @ 178 @ 
operator: ->  @ 13 @ operator: ->  @ 14 @ 
control  @ 85 @ control  @ 103 @ 
name: num_tokens  @ 119 @ name: num_tokens  @ 149 @ 
decl  @ 83 @ decl  @ 100 @ 
name: context  @ 14 @ name: context  @ 15 @ 
expr  @ 14 @ expr  @ 15 @ 
type  @ 63 @ type  @ 116 @ 
name: ngram_widths_  @ 85 @ name: ngram_widths_  @ 103 @ 
argument  @ 14 @ argument  @ 16 @ 
operator: *  @ 104 @ operator: *  @ 133 @ 
operator: ->  @ 160 @ operator: ->  @ 190 @ 
init  @ 119 @ init  @ 149 @ 
expr  @ 48 @ expr  @ 55 @ 
name: context  @ 12 @ name: context  @ 13 @ 
expr  @ 120 @ expr  @ 150 @ 
name: num_ngrams  @ 76 @ name: num_ngrams  @ 88 @ 
name: ngram_width  @ 21 @ name: ngram_width  @ 23 @ 
expr  @ 11 @ expr  @ 12 @ 
name: context  @ 10 @ name: context  @ 11 @ 
argument_list  @ 41 @ argument_list  @ 44 @ 
literal: "preserve_short_sequences"  @ 14 @ literal: "preserve_short_sequences"  @ 15 @ 
expr  @ 10 @ expr  @ 11 @ 
name: i  @ 45 @ name: i  @ 50 @ 
expr  @ 61 @ expr  @ 67 @ 
expr  @ 87 @ expr  @ 105 @ 
init  @ 97 @ init  @ 126 @ 
init  @ 83 @ init  @ 98 @ 
argument  @ 48 @ argument  @ 53 @ 
name: prev_split  @ 48 @ name: prev_split  @ 56 @ 
call  @ 43 @ call  @ 46 @ 
argument  @ 48 @ argument  @ 53 @ 
name: pad_width_  @ 21 @ name: pad_width_  @ 23 @ 
expr  @ 76 @ expr  @ 88 @ 
operator: ++  @ 63 @ operator: &  @ 71 @ 
operator: <  @ 45 @ operator: <  @ 50 @ 
name: num_batch_items  @ 70 @ name: num_batch_items  @ 82 @ 
range  @ 73 @ range  @ 85 @ 
literal: 1  @ 136 @ literal: 1  @ 166 @ 
decl  @ 169 @ decl  @ 199 @ 
operator: ::  @ 107 @ operator: ::  @ 137 @ 
control  @ 131 @ control  @ 161 @ 
block  @ 8 @ block  @ 9 @ 
name: output_start_idx  @ 90 @ name: output_start_idx  @ 108 @ 
expr  @ 83 @ expr  @ 100 @ 
argument  @ 104 @ argument  @ 134 @ 
argument  @ 10 @ argument  @ 11 @ 
argument  @ 48 @ argument  @ 56 @ 
decl_stmt  @ 46 @ decl_stmt  @ 51 @ 
name: pad_width_  @ 177 @ name: pad_width_  @ 207 @ 
decl  @ 46 @ decl  @ 51 @ 
expr  @ 131 @ expr  @ 161 @ 
decl_stmt  @ 129 @ decl_stmt  @ 159 @ 
name: ngram_size  @ 165 @ name: ngram_size  @ 195 @ 
operator: )  @ 83 @ operator: )  @ 98 @ 
name: ngram  @ 165 @ name: ngram  @ 195 @ 
expr  @ 165 @ expr  @ 195 @ 
call  @ 88 @ call  @ 106 @ 
expr  @ 109 @ expr  @ 139 @ 
condition  @ 75 @ condition  @ 87 @ 
init  @ 84 @ init  @ 101 @ 
expr_stmt  @ 165 @ expr_stmt  @ 195 @ 
name: tstring  @ 129 @ name: tstring  @ 159 @ 

