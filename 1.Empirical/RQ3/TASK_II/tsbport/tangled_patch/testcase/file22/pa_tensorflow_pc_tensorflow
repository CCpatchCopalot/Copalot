call  @ 19 @ call  @ 19 @ 
name  @ 82 @ name  @ 61 @ 
name: current_dir  @ 94 @ name: current_dir  @ 67 @ 
name: pair  @ 58 @ name: deque  @ 43 @ 
argument  @ 26 @ argument  @ 27 @ 
name: CANCELLED  @ 96 @ name: CANCELLED  @ 71 @ 
argument_list  @ 88 @ argument_list  @ 50 @ 
argument_list  @ 104 @ argument_list  @ 64 @ 
name: vector  @ 26 @ name: vector  @ 27 @ 
expr_stmt  @ 55 @ expr_stmt  @ 44 @ 
name  @ 94 @ name  @ 67 @ 
literal: "ForEach"  @ 17 @ literal: "ForEach"  @ 17 @ 
operator: .  @ 82 @ operator: .  @ 61 @ 
literal: 0  @ 106 @ literal: 0  @ 77 @ 
name: fixed_prefix  @ 32 @ name: fixed_prefix  @ 30 @ 
name: last  @ 18 @ name: last  @ 18 @ 
type  @ 34 @ type  @ 33 @ 
name: string  @ 107 @ name: string  @ 78 @ 
argument_list  @ 39 @ argument_list  @ 38 @ 
expr  @ 96 @ expr  @ 71 @ 
argument_list  @ 17 @ argument_list  @ 17 @ 
name: emplace_back  @ 55 @ name: push_back  @ 44 @ 
argument_list  @ 91 @ argument_list  @ 63 @ 
block  @ 12 @ block  @ 12 @ 
expr  @ 19 @ expr  @ 19 @ 
expr  @ 16 @ expr  @ 16 @ 
if  @ 109 @ if  @ 80 @ 
argument  @ 88 @ argument  @ 50 @ 
name: last  @ 10 @ name: last  @ 10 @ 
expr  @ 26 @ expr  @ 26 @ 
argument_list  @ 95 @ argument_list  @ 70 @ 
expr  @ 125 @ expr  @ 93 @ 
argument  @ 115 @ argument  @ 85 @ 
expr  @ 18 @ expr  @ 18 @ 
name: OK  @ 101 @ name: push_back  @ 87 @ 
expr  @ 55 @ expr  @ 44 @ 
decl  @ 34 @ decl  @ 33 @ 
name  @ 115 @ name  @ 85 @ 
expr  @ 34 @ expr  @ 33 @ 
name: int  @ 10 @ name: int  @ 10 @ 
name: j  @ 106 @ name: i  @ 77 @ 
argument  @ 19 @ argument  @ 19 @ 
name: eval_pattern  @ 48 @ name: eval_pattern  @ 93 @ 
name: i  @ 13 @ name: i  @ 13 @ 
condition  @ 82 @ condition  @ 61 @ 
name: fs  @ 26 @ name: fs  @ 26 @ 
argument  @ 40 @ argument  @ 39 @ 
operator: =  @ 96 @ operator: =  @ 71 @ 
name: at  @ 73 @ name: pop_front  @ 53 @ 
argument  @ 32 @ argument  @ 30 @ 
operator: ::  @ 88 @ operator: ::  @ 50 @ 
call  @ 19 @ call  @ 19 @ 
operator: (  @ 93 @ operator: (  @ 66 @ 
name: io  @ 39 @ name: io  @ 38 @ 
argument  @ 13 @ argument  @ 13 @ 
expr  @ 26 @ expr  @ 27 @ 
argument_list  @ 127 @ argument_list  @ 94 @ 
block  @ 10 @ block  @ 10 @ 
operator: )  @ 10 @ operator: )  @ 10 @ 
name: dir  @ 37 @ name: dir  @ 36 @ 
operator: =  @ 39 @ operator: =  @ 38 @ 
call  @ 78 @ call  @ 57 @ 
name: int  @ 16 @ name: int  @ 16 @ 
name: Schedule  @ 19 @ name: Schedule  @ 19 @ 
operator: .  @ 106 @ operator: .  @ 77 @ 
expr  @ 127 @ expr  @ 94 @ 
argument_list  @ 19 @ argument_list  @ 19 @ 
macro  @ 4 @ macro  @ 4 @ 
expr  @ 115 @ expr  @ 85 @ 
name  @ 66 @ name  @ 51 @ 
expr  @ 12 @ expr  @ 12 @ 
name: i  @ 18 @ name: i  @ 18 @ 
argument  @ 40 @ argument  @ 39 @ 
argument_list  @ 73 @ argument_list  @ 53 @ 
argument  @ 10 @ argument  @ 10 @ 
argument_list  @ 115 @ argument_list  @ 85 @ 
expr_stmt  @ 1 @ expr_stmt  @ 1 @ 
operator: ::  @ 101 @ operator: .  @ 87 @ 
condition  @ 78 @ condition  @ 57 @ 
name  @ 101 @ name  @ 74 @ 
operator: .  @ 19 @ operator: .  @ 19 @ 
operator: ==  @ 109 @ operator: ==  @ 80 @ 
name: namespace  @ 1 @ name: namespace  @ 2 @ 
expr  @ 46 @ expr  @ 32 @ 
name  @ 27 @ name  @ 28 @ 
block_content  @ 13 @ block_content  @ 13 @ 
operator: ->  @ 27 @ operator: ->  @ 28 @ 
expr  @ 130 @ expr  @ 97 @ 
block_content  @ 67 @ block_content  @ 52 @ 
name: ret  @ 127 @ name: ret  @ 60 @ 
if_stmt  @ 78 @ if_stmt  @ 57 @ 
expr  @ 32 @ expr  @ 30 @ 
call  @ 40 @ call  @ 39 @ 
comment: // Status to return.  @ 61 @ comment: // Status to return.  @ 45 @ 
expr  @ 11 @ expr  @ 11 @ 
expr_stmt  @ 40 @ expr_stmt  @ 39 @ 
name: GetChildren  @ 76 @ name: GetChildren  @ 55 @ 
name: f  @ 19 @ name: f  @ 19 @ 
if_stmt  @ 37 @ if_stmt  @ 36 @ 
init  @ 32 @ init  @ 30 @ 
name: io  @ 40 @ name: io  @ 39 @ 
call  @ 82 @ call  @ 61 @ 
type  @ 16 @ type  @ 16 @ 
argument  @ 17 @ argument  @ 17 @ 
expr  @ 38 @ expr  @ 37 @ 
expr  @ 32 @ expr  @ 30 @ 
name: JoinPath  @ 39 @ name: JoinPath  @ 38 @ 
argument  @ 39 @ argument  @ 38 @ 
operator: ::  @ 96 @ operator: ::  @ 71 @ 
name: children_dir_status  @ 88 @ name: children_dir_status  @ 50 @ 
expr  @ 96 @ expr  @ 71 @ 
name: children_dir_status  @ 109 @ name: children_dir_status  @ 80 @ 
argument  @ 39 @ argument  @ 38 @ 
expr  @ 75 @ expr  @ 54 @ 
name: size  @ 106 @ name: size  @ 77 @ 
call  @ 32 @ call  @ 30 @ 
argument  @ 10 @ argument  @ 10 @ 
argument  @ 104 @ argument  @ 64 @ 
name: threads  @ 19 @ name: threads  @ 19 @ 
operator: ,  @ 92 @ operator: ,  @ 65 @ 
return  @ 130 @ return  @ 97 @ 
name: f  @ 13 @ name: f  @ 13 @ 
condition  @ 95 @ condition  @ 70 @ 
name: Match  @ 95 @ name: StartsWith  @ 70 @ 
name: int  @ 18 @ name: int  @ 18 @ 
init  @ 12 @ init  @ 12 @ 
argument  @ 26 @ argument  @ 27 @ 
expr  @ 66 @ expr  @ 51 @ 
name: std  @ 26 @ name: std  @ 27 @ 
operator: .  @ 37 @ operator: .  @ 36 @ 
operator: ::  @ 78 @ operator: ::  @ 57 @ 
name  @ 109 @ name  @ 80 @ 
name: dirs  @ 55 @ name: dir_q  @ 44 @ 
if_stmt  @ 82 @ if_stmt  @ 61 @ 
expr  @ 92 @ expr  @ 65 @ 
name: dir  @ 39 @ name: dir  @ 38 @ 
type  @ 32 @ type  @ 30 @ 
operator: ::  @ 78 @ operator: ::  @ 57 @ 
name: string  @ 26 @ name: string  @ 26 @ 
block  @ 82 @ block  @ 61 @ 
argument  @ 76 @ argument  @ 55 @ 
condition  @ 37 @ condition  @ 36 @ 
literal: 0  @ 104 @ literal: 0  @ 64 @ 
name: children_dir_status  @ 98 @ name: children_dir_status  @ 74 @ 
expr_stmt  @ 46 @ expr_stmt  @ 32 @ 
expr  @ 91 @ expr  @ 63 @ 
argument_list  @ 46 @ argument_list  @ 32 @ 
decl_stmt  @ 2 @ decl_stmt  @ 2 @ 
decl  @ 61 @ decl  @ 45 @ 
name: Dirname  @ 34 @ name: Dirname  @ 33 @ 
name: ret  @ 61 @ name: ret  @ 45 @ 
name: j  @ 106 @ name: i  @ 77 @ 
operator: .  @ 91 @ operator: .  @ 63 @ 
operator: <  @ 18 @ operator: <  @ 18 @ 
argument  @ 95 @ argument  @ 70 @ 
operator: &  @ 93 @ operator: &  @ 66 @ 
operator: !  @ 95 @ operator: !  @ 70 @ 
name  @ 78 @ name  @ 57 @ 
call  @ 125 @ call  @ 93 @ 
name: children  @ 82 @ name: children  @ 61 @ 
operator: *  @ 26 @ operator: *  @ 27 @ 
name  @ 104 @ name  @ 64 @ 
name: i  @ 12 @ name: i  @ 12 @ 
operator: ++  @ 12 @ operator: ++  @ 12 @ 
while  @ 66 @ while  @ 51 @ 
expr  @ 76 @ expr  @ 55 @ 
argument  @ 34 @ argument  @ 33 @ 
argument  @ 76 @ argument  @ 55 @ 
if  @ 78 @ if  @ 57 @ 
name: Status  @ 76 @ name: Status  @ 55 @ 
name: dir_q  @ 127 @ name: f  @ 94 @ 
block_content  @ 12 @ block_content  @ 12 @ 
name: substr  @ 32 @ name: substr  @ 30 @ 
operator: ::  @ 17 @ operator: ::  @ 17 @ 
name: children  @ 106 @ name: children  @ 77 @ 
name  @ 100 @ name  @ 78 @ 
argument  @ 55 @ argument  @ 44 @ 
name  @ 88 @ name  @ 50 @ 
operator: ==  @ 78 @ operator: ==  @ 57 @ 
operator: ++  @ 18 @ operator: ++  @ 18 @ 
argument  @ 19 @ argument  @ 19 @ 
expr  @ 19 @ expr  @ 19 @ 
name: ThreadPool  @ 17 @ name: ThreadPool  @ 17 @ 
expr  @ 73 @ expr  @ 53 @ 
argument_list  @ 82 @ argument_list  @ 61 @ 
name: results  @ 27 @ name: results  @ 28 @ 
argument  @ 125 @ argument  @ 93 @ 
operator: *  @ 26 @ operator: *  @ 26 @ 
operator: ::  @ 94 @ operator: ::  @ 67 @ 
argument_list  @ 13 @ argument_list  @ 13 @ 
operator: .  @ 55 @ operator: .  @ 44 @ 
expr  @ 34 @ expr  @ 33 @ 
name: j  @ 98 @ name: i  @ 74 @ 
expr_stmt  @ 88 @ expr_stmt  @ 50 @ 
name: current_dir  @ 76 @ name: current_dir  @ 55 @ 
expr  @ 10 @ expr  @ 10 @ 
name: string  @ 33 @ name: string  @ 31 @ 
expr  @ 94 @ expr  @ 67 @ 
block  @ 113 @ block  @ 84 @ 
name: dirs  @ 46 @ name: all_files  @ 32 @ 
expr  @ 96 @ expr  @ 72 @ 
name  @ 73 @ name  @ 53 @ 
name: fs  @ 76 @ name: fs  @ 55 @ 
argument  @ 46 @ argument  @ 32 @ 
index  @ 100 @ index  @ 78 @ 
decl  @ 1 @ decl  @ 1 @ 
argument  @ 17 @ argument  @ 17 @ 
name  @ 19 @ name  @ 19 @ 
name: fixed_prefix  @ 34 @ name: fixed_prefix  @ 33 @ 
expr  @ 88 @ expr  @ 50 @ 
operator: .  @ 66 @ operator: .  @ 51 @ 
name: int  @ 6 @ name: int  @ 6 @ 
name: FileSystem  @ 26 @ name: FileSystem  @ 26 @ 
condition  @ 66 @ condition  @ 51 @ 
expr  @ 16 @ expr  @ 16 @ 
expr  @ 101 @ expr  @ 80 @ 
expr_stmt  @ 58 @ expr_stmt  @ 43 @ 
argument_list  @ 75 @ argument_list  @ 54 @ 
argument_list  @ 26 @ argument_list  @ 27 @ 
name: JoinPath  @ 40 @ name: JoinPath  @ 39 @ 
argument  @ 72 @ argument  @ 78 @ 
expr  @ 69 @ expr  @ 65 @ 
name: fixed_prefix  @ 39 @ name: fixed_prefix  @ 38 @ 
expr_stmt  @ 17 @ expr_stmt  @ 17 @ 
name: dir_q  @ 58 @ name: dir_q  @ 43 @ 
call  @ 109 @ call  @ 80 @ 
block  @ 95 @ block  @ 70 @ 
else  @ 15 @ else  @ 15 @ 
expr  @ 18 @ expr  @ 18 @ 
literal: "."  @ 38 @ literal: "."  @ 37 @ 
operator: )  @ 93 @ operator: )  @ 66 @ 
type  @ 33 @ type  @ 31 @ 
expr  @ 39 @ expr  @ 38 @ 
call  @ 72 @ call  @ 52 @ 
name: Status  @ 96 @ name: Status  @ 71 @ 
expr_stmt  @ 38 @ expr_stmt  @ 37 @ 
operator: .  @ 91 @ operator: .  @ 63 @ 
name  @ 119 @ name  @ 87 @ 
argument  @ 32 @ argument  @ 30 @ 
index  @ 92 @ index  @ 65 @ 
name  @ 72 @ name  @ 52 @ 
condition  @ 101 @ condition  @ 80 @ 
name: int  @ 12 @ name: int  @ 12 @ 
name: empty  @ 37 @ name: empty  @ 36 @ 
operator: .  @ 127 @ operator: .  @ 60 @ 
name: namespace  @ 4 @ name: namespace  @ 4 @ 
name: dir_q  @ 73 @ name: dir_q  @ 53 @ 
name: Status  @ 61 @ name: Status  @ 45 @ 
name: j  @ 96 @ name: i  @ 71 @ 
operator: ::  @ 39 @ operator: ::  @ 38 @ 
argument_list  @ 94 @ argument_list  @ 67 @ 
comment: // In case PERMISSION_DENIED is encountered, we bail here.  @ 77 @ comment: // In case PERMISSION_DENIED is encountered, we bail here.  @ 56 @ 
name: vector  @ 88 @ name: vector  @ 50 @ 
name: j  @ 93 @ name: i  @ 66 @ 
expr  @ 48 @ expr  @ 93 @ 
name  @ 96 @ name  @ 71 @ 
operator: .  @ 109 @ operator: .  @ 80 @ 
block_content  @ 2 @ block_content  @ 2 @ 
argument  @ 17 @ argument  @ 17 @ 
name: Env  @ 26 @ name: Env  @ 26 @ 
argument_list  @ 27 @ argument_list  @ 28 @ 
name: string  @ 32 @ name: string  @ 30 @ 
name: children  @ 91 @ name: children  @ 63 @ 
block  @ 19 @ block  @ 19 @ 
operator: ->  @ 76 @ operator: ->  @ 55 @ 
expr  @ 101 @ expr  @ 74 @ 
operator: &  @ 92 @ operator: &  @ 65 @ 
name: string  @ 94 @ name: string  @ 67 @ 
expr  @ 39 @ expr  @ 38 @ 
call  @ 104 @ call  @ 64 @ 
expr  @ 37 @ expr  @ 36 @ 
decl_stmt  @ 26 @ decl_stmt  @ 26 @ 
argument_list  @ 109 @ argument_list  @ 80 @ 
name: i  @ 19 @ name: i  @ 19 @ 
name: vector  @ 75 @ name: vector  @ 54 @ 
expr  @ 26 @ expr  @ 26 @ 
operator: =  @ 40 @ operator: =  @ 39 @ 
argument_list  @ 32 @ argument_list  @ 30 @ 
name: std  @ 16 @ name: std  @ 16 @ 
block_content  @ 4 @ block_content  @ 4 @ 
index  @ 19 @ index  @ 19 @ 
argument  @ 104 @ argument  @ 64 @ 
expr  @ 58 @ expr  @ 43 @ 
expr  @ 33 @ expr  @ 31 @ 
name: JoinPath  @ 94 @ name: JoinPath  @ 67 @ 
name: ForEach  @ 125 @ name: MatchPath  @ 93 @ 
operator: ->  @ 101 @ operator: ->  @ 74 @ 
decl_stmt  @ 16 @ decl_stmt  @ 16 @ 
endif  @ 21 @ endif  @ 21 @ 
name: child_path  @ 94 @ name: child_path  @ 67 @ 
operator: ::  @ 75 @ operator: ::  @ 54 @ 
expr_stmt  @ 100 @ expr_stmt  @ 74 @ 
expr  @ 107 @ expr  @ 78 @ 
name  @ 75 @ name  @ 54 @ 
name  @ 127 @ name  @ 60 @ 
name: string  @ 46 @ name: string  @ 32 @ 
call  @ 16 @ call  @ 16 @ 
expr  @ 127 @ expr  @ 94 @ 
continue  @ 110 @ continue  @ 58 @ 
expr  @ 82 @ expr  @ 61 @ 
name: emplace_back  @ 115 @ name: push_back  @ 85 @ 
expr  @ 10 @ expr  @ 10 @ 
name: Status  @ 88 @ name: Status  @ 50 @ 
expr  @ 46 @ expr  @ 32 @ 
control  @ 12 @ control  @ 12 @ 
expr  @ 55 @ expr  @ 44 @ 
decl  @ 6 @ decl  @ 6 @ 
name: children_dir_status  @ 93 @ name: children_dir_status  @ 66 @ 
block  @ 26 @ block  @ 27 @ 
name: env  @ 26 @ name: env  @ 26 @ 
block_content  @ 110 @ block_content  @ 58 @ 
name: void  @ 10 @ name: void  @ 10 @ 
expr  @ 19 @ expr  @ 19 @ 
expr  @ 10 @ expr  @ 10 @ 
argument  @ 96 @ argument  @ 71 @ 
type  @ 12 @ type  @ 12 @ 
type  @ 61 @ type  @ 45 @ 
name: first  @ 12 @ name: first  @ 12 @ 
for  @ 18 @ for  @ 18 @ 
name: children  @ 76 @ name: children  @ 55 @ 
name: int  @ 93 @ name: int  @ 66 @ 
argument_list  @ 78 @ argument_list  @ 57 @ 
name: fixed_prefix  @ 39 @ name: fixed_prefix  @ 38 @ 
operator: .  @ 78 @ operator: .  @ 57 @ 
name: dir  @ 40 @ name: dir  @ 39 @ 
call  @ 17 @ call  @ 17 @ 
name: error  @ 78 @ name: error  @ 57 @ 
name: threads  @ 17 @ name: threads  @ 17 @ 
name: vector  @ 46 @ name: vector  @ 32 @ 
comment: // on the iOS platform due to its problems with more than a few threads.  @ 9 @ comment: // on the iOS platform due to its problems with more than a few threads.  @ 9 @ 
name: first  @ 16 @ name: first  @ 16 @ 
expr  @ 107 @ expr  @ 78 @ 
expr  @ 94 @ expr  @ 67 @ 
name: dir_q  @ 125 @ name: f  @ 93 @ 
expr  @ 39 @ expr  @ 38 @ 
name: size  @ 91 @ name: size  @ 63 @ 
operator: .  @ 115 @ operator: .  @ 85 @ 
name: void  @ 10 @ name: void  @ 10 @ 
block  @ 4 @ block  @ 4 @ 
if_stmt  @ 109 @ if_stmt  @ 80 @ 
name: children_dir_status  @ 96 @ name: children_dir_status  @ 71 @ 
name: error  @ 96 @ name: error  @ 71 @ 
if_stmt  @ 95 @ if_stmt  @ 70 @ 
name  @ 91 @ name  @ 63 @ 
name: code  @ 78 @ name: code  @ 57 @ 
name: eval_pattern  @ 40 @ name: pattern  @ 39 @ 
name: string  @ 26 @ name: string  @ 27 @ 
call  @ 91 @ call  @ 63 @ 
name: Update  @ 127 @ name: Update  @ 60 @ 
name: i  @ 73 @ name: i  @ 67 @ 
expr  @ 32 @ expr  @ 30 @ 
name: children  @ 75 @ name: children  @ 54 @ 
argument  @ 34 @ argument  @ 33 @ 
name: kNumThreads  @ 6 @ name: kNumThreads  @ 6 @ 
name  @ 76 @ name  @ 55 @ 
name: int  @ 10 @ name: int  @ 10 @ 
name: i  @ 12 @ name: i  @ 12 @ 
name: internal  @ 2 @ name: internal  @ 2 @ 
name: std  @ 46 @ name: std  @ 32 @ 
expr  @ 72 @ expr  @ 78 @ 
block_content  @ 100 @ block_content  @ 74 @ 
call  @ 106 @ call  @ 77 @ 
name: children  @ 92 @ name: children  @ 65 @ 
call  @ 119 @ call  @ 87 @ 
operator: <  @ 12 @ operator: <  @ 12 @ 
operator: ::  @ 16 @ operator: ::  @ 16 @ 
type  @ 69 @ type  @ 52 @ 
decl_stmt  @ 32 @ decl_stmt  @ 30 @ 
argument  @ 32 @ argument  @ 30 @ 
argument_list  @ 55 @ argument_list  @ 44 @ 
name: last  @ 12 @ name: last  @ 12 @ 
for  @ 12 @ for  @ 12 @ 
operator: ,  @ 92 @ operator: ,  @ 65 @ 
expr  @ 16 @ expr  @ 16 @ 
name: child_path  @ 95 @ name: child_path  @ 70 @ 
expr_stmt  @ 39 @ expr_stmt  @ 38 @ 
name: children_dir_status  @ 100 @ name: children  @ 78 @ 
operator: ::  @ 58 @ operator: ::  @ 43 @ 
expr  @ 75 @ expr  @ 54 @ 
expr  @ 78 @ expr  @ 57 @ 
operator: .  @ 104 @ operator: .  @ 64 @ 
call  @ 115 @ call  @ 85 @ 
comment: // Setup a parallel BFS to explore everything under dir.  @ 57 @ comment: // Setup a BFS to explore everything under dir.  @ 42 @ 
expr  @ 104 @ expr  @ 64 @ 
name: int  @ 10 @ name: int  @ 10 @ 
comment: // This IsDirectory call can be expensive for some FS. Parallelizing it.  @ 90 @ comment: // This IsDirectory call can be expensive for some FS. Parallelizing it.  @ 62 @ 
operator: ::  @ 46 @ operator: ::  @ 32 @ 
decl  @ 26 @ decl  @ 26 @ 
argument_list  @ 32 @ argument_list  @ 30 @ 
incr  @ 12 @ incr  @ 12 @ 
if  @ 82 @ if  @ 61 @ 
name: std  @ 88 @ name: std  @ 50 @ 
name: i  @ 18 @ name: i  @ 18 @ 
name: i  @ 12 @ name: i  @ 12 @ 
name: PERMISSION_DENIED  @ 78 @ name: PERMISSION_DENIED  @ 57 @ 
name: empty  @ 82 @ name: empty  @ 61 @ 
expr  @ 104 @ expr  @ 64 @ 
name: dir_index  @ 92 @ name: fixed_prefix  @ 65 @ 
name: ForEach  @ 10 @ name: ForEach  @ 10 @ 
expr  @ 119 @ expr  @ 87 @ 
decl_stmt  @ 10 @ decl_stmt  @ 10 @ 
argument_list  @ 10 @ argument_list  @ 10 @ 
name: code  @ 109 @ name: code  @ 80 @ 
block_content  @ 38 @ block_content  @ 37 @ 
operator: <  @ 106 @ operator: <  @ 77 @ 
operator: .  @ 32 @ operator: .  @ 30 @ 
argument_list  @ 58 @ argument_list  @ 43 @ 
call  @ 96 @ call  @ 71 @ 
expr  @ 96 @ expr  @ 71 @ 
name: string  @ 75 @ name: string  @ 54 @ 
argument  @ 91 @ argument  @ 63 @ 
operator: &  @ 92 @ operator: &  @ 65 @ 
name: ret  @ 130 @ name: ret  @ 97 @ 
argument_list  @ 76 @ argument_list  @ 55 @ 
type  @ 18 @ type  @ 18 @ 
block_content  @ 27 @ block_content  @ 28 @ 
block_content  @ 6 @ block_content  @ 6 @ 
if  @ 95 @ if  @ 70 @ 
name: next_dir_q  @ 69 @ name: current_dir  @ 52 @ 
directive: endif  @ 21 @ directive: endif  @ 21 @ 
name  @ 106 @ name  @ 77 @ 
name: io  @ 34 @ name: io  @ 33 @ 
name: dir_q  @ 72 @ name: dir_q  @ 52 @ 
name  @ 10 @ name  @ 10 @ 
init  @ 12 @ init  @ 12 @ 
name: current_dir  @ 107 @ name: current_dir  @ 78 @ 
name  @ 58 @ name  @ 43 @ 
name: thread  @ 17 @ name: thread  @ 17 @ 
operator: =  @ 94 @ operator: =  @ 67 @ 
name  @ 98 @ name  @ 74 @ 
argument  @ 26 @ argument  @ 26 @ 
name: string  @ 58 @ name: string  @ 43 @ 
name: results  @ 26 @ name: results  @ 27 @ 
expr  @ 91 @ expr  @ 63 @ 
specifier: const  @ 107 @ specifier: const  @ 78 @ 
name: children  @ 104 @ name: children  @ 64 @ 
operator: &  @ 76 @ operator: &  @ 55 @ 
expr  @ 17 @ expr  @ 17 @ 
control  @ 18 @ control  @ 18 @ 
argument  @ 10 @ argument  @ 10 @ 
name: eval_pattern  @ 33 @ name: eval_pattern  @ 31 @ 
name: empty  @ 66 @ name: empty  @ 51 @ 
decl_stmt  @ 33 @ decl_stmt  @ 31 @ 
name: i  @ 18 @ name: i  @ 18 @ 
name: Status  @ 101 @ name: all_files  @ 87 @ 
operator: ::  @ 109 @ operator: ::  @ 80 @ 
name: size_t  @ 106 @ name: int  @ 77 @ 
name  @ 32 @ name  @ 30 @ 
index  @ 94 @ index  @ 67 @ 
argument_list  @ 10 @ argument_list  @ 10 @ 
name: tensorflow  @ 1 @ name: tensorflow  @ 1 @ 
argument  @ 48 @ argument  @ 93 @ 
expr  @ 58 @ expr  @ 43 @ 
if  @ 37 @ if  @ 36 @ 
expr  @ 32 @ expr  @ 30 @ 
argument_list  @ 96 @ argument_list  @ 71 @ 
operator: !  @ 66 @ operator: !  @ 51 @ 
operator: ::  @ 109 @ operator: ::  @ 80 @ 
operator: ++  @ 106 @ operator: ++  @ 77 @ 
name: fs  @ 95 @ name: absl  @ 70 @ 
operator: ->  @ 95 @ operator: ::  @ 70 @ 
operator: =  @ 38 @ operator: =  @ 37 @ 
expr  @ 40 @ expr  @ 39 @ 
argument_list  @ 119 @ argument_list  @ 87 @ 
argument_list  @ 91 @ argument_list  @ 63 @ 
name: std  @ 75 @ name: std  @ 54 @ 
comment: // Run a function in parallel using a ThreadPool, but skip the ThreadPool  @ 8 @ comment: // Run a function in parallel using a ThreadPool, but skip the ThreadPool  @ 8 @ 
argument  @ 96 @ argument  @ 72 @ 
name: io  @ 94 @ name: io  @ 67 @ 
name: std  @ 10 @ name: std  @ 10 @ 
call  @ 107 @ call  @ 78 @ 
operator: -  @ 16 @ operator: -  @ 16 @ 
decl  @ 18 @ decl  @ 18 @ 
name: dir  @ 34 @ name: dir  @ 33 @ 
name: auto  @ 92 @ name: ForEach  @ 64 @ 
call  @ 39 @ call  @ 38 @ 
block  @ 2 @ block  @ 2 @ 
expr  @ 95 @ expr  @ 70 @ 
argument_list  @ 101 @ argument_list  @ 74 @ 
expr  @ 19 @ expr  @ 19 @ 
expr  @ 26 @ expr  @ 27 @ 
name: Env  @ 17 @ name: Env  @ 17 @ 
argument  @ 94 @ argument  @ 67 @ 
name: f  @ 19 @ name: f  @ 19 @ 
argument  @ 26 @ argument  @ 26 @ 
decl  @ 2 @ decl  @ 2 @ 
literal: "*?[\\"  @ 32 @ literal: "*?[\\"  @ 30 @ 
name: GetMatchingPaths  @ 26 @ name: GetMatchingPaths  @ 26 @ 
call  @ 127 @ call  @ 94 @ 
name  @ 26 @ name  @ 27 @ 
call  @ 101 @ call  @ 74 @ 
name: clear  @ 27 @ name: clear  @ 28 @ 
name: last  @ 16 @ name: last  @ 16 @ 
name  @ 37 @ name  @ 36 @ 
type  @ 26 @ type  @ 26 @ 
operator: ,  @ 92 @ operator: ,  @ 65 @ 
literal: "Operation not needed"  @ 96 @ literal: "Operation not needed"  @ 72 @ 
argument_list  @ 34 @ argument_list  @ 33 @ 
call  @ 37 @ call  @ 36 @ 
index  @ 109 @ index  @ 80 @ 
decl  @ 32 @ decl  @ 30 @ 
name: function  @ 10 @ name: function  @ 10 @ 
decl_stmt  @ 61 @ decl_stmt  @ 45 @ 
operator: ::  @ 107 @ operator: ::  @ 78 @ 
block  @ 18 @ block  @ 18 @ 
name: tensorflow  @ 96 @ name: tensorflow  @ 71 @ 
expr  @ 6 @ expr  @ 6 @ 
expr  @ 17 @ expr  @ 17 @ 
argument  @ 26 @ argument  @ 26 @ 
name: j  @ 106 @ name: i  @ 77 @ 
argument_list  @ 16 @ argument_list  @ 16 @ 
name: pattern  @ 33 @ name: pattern  @ 31 @ 
name: child_path  @ 119 @ name: child_path  @ 87 @ 
name: dir  @ 55 @ name: dir  @ 44 @ 
operator: &  @ 26 @ operator: &  @ 26 @ 
name: children_dir_status  @ 91 @ name: children_dir_status  @ 63 @ 
decl  @ 12 @ decl  @ 12 @ 
block_content  @ 96 @ block_content  @ 71 @ 
name: first  @ 18 @ name: first  @ 18 @ 
argument_list  @ 72 @ argument_list  @ 52 @ 
condition  @ 12 @ condition  @ 12 @ 
name: dir_index  @ 95 @ name: fixed_prefix  @ 70 @ 
index  @ 96 @ index  @ 71 @ 
expr  @ 18 @ expr  @ 18 @ 
argument  @ 95 @ argument  @ 70 @ 
expr  @ 40 @ expr  @ 39 @ 
name: auto  @ 69 @ name: string  @ 52 @ 
argument  @ 16 @ argument  @ 16 @ 
name: fs  @ 69 @ name: fs  @ 65 @ 
argument  @ 58 @ argument  @ 43 @ 
block  @ 1 @ block  @ 1 @ 
name: pattern  @ 32 @ name: pattern  @ 30 @ 
expr  @ 94 @ expr  @ 67 @ 
expr  @ 13 @ expr  @ 13 @ 
expr  @ 98 @ expr  @ 74 @ 
expr  @ 125 @ expr  @ 93 @ 
operator: (  @ 10 @ operator: (  @ 10 @ 
call  @ 13 @ call  @ 13 @ 
name: dir  @ 38 @ name: dir  @ 37 @ 
operator: =  @ 98 @ operator: =  @ 74 @ 
argument_list  @ 17 @ argument_list  @ 17 @ 
argument_list  @ 34 @ argument_list  @ 33 @ 
expr_stmt  @ 13 @ expr_stmt  @ 13 @ 
specifier: const  @ 26 @ specifier: const  @ 26 @ 
name: f  @ 10 @ name: f  @ 10 @ 
expr  @ 73 @ expr  @ 67 @ 
comment: // If dir is empty then we need to fix up fixed_prefix and eval_pattern to  @ 35 @ comment: // If dir is empty then we need to fix up fixed_prefix and eval_pattern to  @ 34 @ 
name: CANCELLED  @ 109 @ name: CANCELLED  @ 80 @ 
argument  @ 107 @ argument  @ 78 @ 
expr  @ 12 @ expr  @ 12 @ 
name: is_directory  @ 101 @ name: i  @ 80 @ 
directive: if  @ 11 @ directive: if  @ 11 @ 
block_content  @ 19 @ block_content  @ 19 @ 
argument  @ 101 @ argument  @ 74 @ 
operator: *  @ 26 @ operator: *  @ 26 @ 
name: resize  @ 91 @ name: resize  @ 63 @ 
name: Status  @ 26 @ name: Status  @ 26 @ 
expr  @ 88 @ expr  @ 50 @ 
operator: ,  @ 92 @ operator: ,  @ 65 @ 
operator: ::  @ 17 @ operator: ::  @ 17 @ 
expr  @ 76 @ expr  @ 55 @ 
expr_stmt  @ 91 @ expr_stmt  @ 63 @ 
expr  @ 27 @ expr  @ 28 @ 
name: fs  @ 101 @ name: fs  @ 74 @ 
argument  @ 119 @ argument  @ 87 @ 
name: namespace  @ 2 @ name: namespace  @ 1 @ 
operator: .  @ 72 @ operator: .  @ 52 @ 
call  @ 91 @ call  @ 63 @ 
name: dir_q  @ 66 @ name: dir_q  @ 51 @ 
name  @ 55 @ name  @ 44 @ 
name: current_dir  @ 92 @ name: current_dir  @ 65 @ 
name: Default  @ 17 @ name: Default  @ 17 @ 
name: string  @ 34 @ name: string  @ 33 @ 
expr  @ 17 @ expr  @ 17 @ 
argument_list  @ 26 @ argument_list  @ 26 @ 
block  @ 66 @ block  @ 51 @ 
argument_list  @ 66 @ argument_list  @ 51 @ 
name  @ 32 @ name  @ 30 @ 
name: first  @ 10 @ name: first  @ 10 @ 
decl_stmt  @ 6 @ decl_stmt  @ 6 @ 
comment: // If the IsDirectory call was cancelled we bail.  @ 108 @ comment: // If the IsDirectory call was cancelled we bail.  @ 79 @ 
if  @ 11 @ if  @ 11 @ 
expr_stmt  @ 96 @ expr_stmt  @ 71 @ 
argument_list  @ 107 @ argument_list  @ 78 @ 
argument  @ 127 @ argument  @ 94 @ 
name: TARGET_OS_IPHONE  @ 11 @ name: TARGET_OS_IPHONE  @ 11 @ 
unit  @ 1 @ unit  @ 1 @ 
operator: ::  @ 34 @ operator: ::  @ 33 @ 
expr  @ 95 @ expr  @ 70 @ 
expr  @ 98 @ expr  @ 74 @ 
name: next_dir_q  @ 115 @ name: dir_q  @ 85 @ 
call  @ 32 @ call  @ 30 @ 
call  @ 34 @ call  @ 33 @ 
operator: ::  @ 40 @ operator: ::  @ 39 @ 
type  @ 6 @ type  @ 6 @ 
name: children  @ 94 @ name: children  @ 67 @ 
name: size  @ 104 @ name: size  @ 64 @ 
expr_stmt  @ 19 @ expr_stmt  @ 19 @ 
name: io  @ 107 @ name: io  @ 78 @ 
block  @ 97 @ block  @ 73 @ 
name: tensorflow  @ 109 @ name: tensorflow  @ 80 @ 
type  @ 1 @ type  @ 2 @ 
block_content  @ 82 @ block_content  @ 61 @ 
name: s  @ 76 @ name: s  @ 55 @ 
operator: ,  @ 19 @ operator: ,  @ 19 @ 
operator: .  @ 32 @ operator: .  @ 30 @ 
call  @ 73 @ call  @ 53 @ 
decl  @ 10 @ decl  @ 10 @ 
comment: // include . as the top level directory.  @ 36 @ comment: // include . as the top level directory.  @ 35 @ 
name: pattern  @ 32 @ name: pattern  @ 30 @ 
expr  @ 10 @ expr  @ 10 @ 
call  @ 76 @ call  @ 55 @ 
decl  @ 16 @ decl  @ 16 @ 
block  @ 37 @ block  @ 36 @ 
literal: 0  @ 32 @ literal: 0  @ 30 @ 
expr_stmt  @ 27 @ expr_stmt  @ 28 @ 
name: num_threads  @ 17 @ name: num_threads  @ 17 @ 
argument_list  @ 19 @ argument_list  @ 19 @ 
name: std  @ 58 @ name: std  @ 43 @ 
operator: ::  @ 10 @ operator: ::  @ 10 @ 
init  @ 18 @ init  @ 18 @ 
argument  @ 10 @ argument  @ 10 @ 
incr  @ 18 @ incr  @ 18 @ 
decl  @ 33 @ decl  @ 31 @ 
expr  @ 72 @ expr  @ 52 @ 
name: child_path  @ 101 @ name: child_path  @ 74 @ 
comment: // namespace  @ 24 @ comment: // namespace  @ 24 @ 
expr  @ 13 @ expr  @ 13 @ 
name: error  @ 109 @ name: error  @ 80 @ 
argument  @ 75 @ argument  @ 54 @ 
type  @ 10 @ type  @ 10 @ 
expr  @ 101 @ expr  @ 85 @ 
specifier: const  @ 10 @ specifier: const  @ 10 @ 
init  @ 6 @ init  @ 6 @ 
name: s  @ 78 @ name: s  @ 57 @ 
name: find_first_of  @ 32 @ name: find_first_of  @ 30 @ 
init  @ 18 @ init  @ 18 @ 
name: child_path  @ 107 @ name: child_path  @ 78 @ 
argument_list  @ 48 @ argument_list  @ 93 @ 
name: child_path  @ 115 @ name: child_path  @ 85 @ 
argument  @ 73 @ argument  @ 67 @ 
decl_stmt  @ 1 @ decl_stmt  @ 1 @ 
expr  @ 17 @ expr  @ 17 @ 
argument_list  @ 37 @ argument_list  @ 36 @ 
expr  @ 95 @ expr  @ 70 @ 
argument_list  @ 40 @ argument_list  @ 39 @ 
name  @ 46 @ name  @ 32 @ 
operator: ::  @ 26 @ operator: ::  @ 27 @ 
expr  @ 40 @ expr  @ 39 @ 
block  @ 109 @ block  @ 57 @ 
call  @ 55 @ call  @ 44 @ 
name: i  @ 19 @ name: i  @ 19 @ 
expr  @ 26 @ expr  @ 26 @ 
name: num_threads  @ 16 @ name: num_threads  @ 16 @ 
argument_list  @ 106 @ argument_list  @ 77 @ 
init  @ 16 @ init  @ 16 @ 
name: pattern  @ 26 @ name: pattern  @ 26 @ 
block  @ 93 @ block  @ 66 @ 
operator: .  @ 73 @ operator: .  @ 53 @ 
name: min  @ 16 @ name: min  @ 16 @ 
condition  @ 18 @ condition  @ 18 @ 
expr  @ 19 @ expr  @ 19 @ 
name: tensorflow  @ 78 @ name: tensorflow  @ 57 @ 
name: i  @ 72 @ name: i  @ 78 @ 
argument  @ 16 @ argument  @ 16 @ 
operator: &  @ 10 @ operator: &  @ 10 @ 
expr  @ 109 @ expr  @ 80 @ 
index  @ 98 @ index  @ 74 @ 
name  @ 91 @ name  @ 63 @ 
decl_stmt  @ 34 @ decl_stmt  @ 33 @ 
operator: &  @ 92 @ operator: &  @ 65 @ 
call  @ 94 @ call  @ 67 @ 
name: at  @ 72 @ name: front  @ 52 @ 
expr  @ 76 @ expr  @ 55 @ 
specifier: const  @ 94 @ specifier: const  @ 67 @ 
call  @ 66 @ call  @ 51 @ 
init  @ 33 @ init  @ 31 @ 
name: kNumThreads  @ 16 @ name: kNumThreads  @ 16 @ 
name: JoinPath  @ 107 @ name: JoinPath  @ 78 @ 
operator: ::  @ 96 @ operator: ::  @ 71 @ 
name: eval_pattern  @ 40 @ name: eval_pattern  @ 39 @ 
name: IsDirectory  @ 101 @ name: IsDirectory  @ 74 @ 
call  @ 27 @ call  @ 28 @ 
type  @ 2 @ type  @ 1 @ 
directive: else  @ 15 @ directive: else  @ 15 @ 
call  @ 17 @ call  @ 17 @ 
expr_stmt  @ 127 @ expr_stmt  @ 94 @ 
expr  @ 12 @ expr  @ 12 @ 

