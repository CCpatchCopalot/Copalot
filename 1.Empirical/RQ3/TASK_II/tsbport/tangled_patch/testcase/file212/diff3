177,178d
<    byte *in =
<        (byte *) gs_malloc(pdev->memory, in_size + 1, 1,
181,182c181,182
<    byte *out =
<        (byte *) gs_malloc(pdev->memory, out_size + 1, 1,
---
>byte *in;
>byte *out;
185,190c185,189
<    char start_graphics = (char)
<        ((y_24pin ? graphics_modes_24 : graphics_modes_9)[x_dpi / 60]);
<    int first_pass = (start_graphics & DD ? 1 : 0);
<    int last_pass = first_pass * 2;
<    int dots_per_space = x_dpi / 10;    /* pica space = 1/10" */
<    int bytes_per_space = dots_per_space * y_mult;
---
>    char start_graphics;
>    int first_pass;
>    int last_pass;
>    int dots_per_space; 
>    int bytes_per_space;
196,197c196,211
<    int spare_bits = (pdev->width % 8); /* left over bits to go to margin */
<    int whole_bits = pdev->width - spare_bits;
---
>    int spare_bits;
>    int whole_bits;
>    int max_dpi = 60 * ((y_24pin) ?sizeof(graphics_modes_24) / sizeof(graphics_modes_24[0]):sizeof(graphics_modes_9) / sizeof(graphics_modes_9[0]))
>            - 1;
>    if (x_dpi > max_dpi) {
>        return_error(gs_error_rangecheck);
>    }
>    in =(byte *) gs_malloc(pdev->memoryout_size, in_size + 1, 1, "epsc_print_page(in)");
>    out =(byte *) gs_malloc(pdev->memoryout_size, out_size + 1, 1, "epsc_print_page(out)");
>    start_graphics = (char)((y_24pin ? graphics_modes_24 : graphics_modes_9)[x_dpi / 60]);
>    first_pass = (start_graphics & DD ? 1 : 0);
>    last_pass = first_pass * 2;
>    dots_per_space = x_dpi / 10;    /* pica space = 1/10" */
>    bytes_per_space = dots_per_space * y_mult;
>    spare_bits = (pdev->width % 8); /* left over bits to go to margin */
>    whole_bits = pdev->width - spare_bits;
