name: fracp  @ 40 @ name: fracp  @ 41 @ 
type  @ 1 @ type  @ 1 @ 
literal: 12  @ 17 @ literal: 12  @ 18 @ 
expr  @ 17 @ expr  @ 18 @ 
operator: *  @ 47 @ operator: *  @ 48 @ 
operator: &&  @ 38 @ operator: &&  @ 39 @ 
literal: '0'  @ 19 @ literal: '0'  @ 20 @ 
init  @ 40 @ init  @ 41 @ 
operator: )  @ 57 @ operator: )  @ 61 @ 
expr  @ 53 @ expr  @ 54 @ 
init  @ 8 @ init  @ 8 @ 
name  @ 25 @ name  @ 26 @ 
expr  @ 57 @ expr  @ 61 @ 
literal: 1  @ 25 @ literal: 1  @ 26 @ 
operator: >=  @ 45 @ operator: >=  @ 46 @ 
name  @ 22 @ name  @ 23 @ 
literal: ""  @ 8 @ literal: ""  @ 8 @ 
literal: '0'  @ 38 @ literal: '0'  @ 39 @ 
expr  @ 22 @ expr  @ 23 @ 
name: curl_maprintf  @ 57 @ name: curl_maprintf  @ 58 @ 
operator: =  @ 40 @ operator: =  @ 41 @ 
name: fracl  @ 40 @ name: fracl  @ 41 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
operator: =  @ 19 @ operator: =  @ 20 @ 
for  @ 12 @ for  @ 13 @ 
empty_stmt  @ 46 @ empty_stmt  @ 47 @ 
for  @ 40 @ for  @ 41 @ 
name: sec1  @ 57 @ name: sec1  @ 60 @ 
expr_stmt  @ 16 @ expr_stmt  @ 17 @ 
name  @ 40 @ name  @ 41 @ 
incr  @ 40 @ incr  @ 41 @ 
name: fracp  @ 34 @ name: fracp  @ 35 @ 
operator: -  @ 56 @ operator: -  @ 57 @ 
expr_stmt  @ 22 @ expr_stmt  @ 23 @ 
index  @ 22 @ index  @ 23 @ 
type  @ 5 @ type  @ 5 @ 
operator: =  @ 16 @ operator: =  @ 17 @ 
comment: /* Convert an ASN.1 Generalized time to a printable string. Return the dynamically allocated string, or NULL if an error occurs. */  @ 10 @ comment: /* Convert an ASN.1 Generalized time to a printable string.
     Return the dynamically allocated string, or NULL if an error occurs. */  @ 10 @ 
argument  @ 57 @ argument  @ 59 @ 
name: tzp  @ 40 @ name: tzp  @ 41 @ 
expr  @ 47 @ expr  @ 48 @ 
operator: (  @ 34 @ operator: (  @ 35 @ 
expr  @ 57 @ expr  @ 62 @ 
operator: &&  @ 38 @ operator: &&  @ 39 @ 
name: fracl  @ 40 @ name: fracl  @ 41 @ 
decl_stmt  @ 5 @ decl_stmt  @ 5 @ 
condition  @ 12 @ condition  @ 13 @ 
name: sec1  @ 16 @ name: sec1  @ 17 @ 
argument  @ 57 @ argument  @ 60 @ 
expr  @ 57 @ expr  @ 61 @ 
argument  @ 57 @ argument  @ 62 @ 
break  @ 20 @ break  @ 21 @ 
decl  @ 4 @ decl  @ 4 @ 
decl  @ 6 @ decl  @ 6 @ 
operator: +  @ 57 @ operator: +  @ 60 @ 
operator: <  @ 12 @ operator: <  @ 13 @ 
expr  @ 8 @ expr  @ 8 @ 
name: fracp  @ 35 @ name: fracp  @ 36 @ 
operator: >=  @ 38 @ operator: >=  @ 39 @ 
type  @ 3 @ type  @ 3 @ 
literal: 1  @ 24 @ literal: 1  @ 25 @ 
block  @ 47 @ block  @ 48 @ 
parameter_list  @ 1 @ parameter_list  @ 1 @ 
decl_stmt  @ 3 @ decl_stmt  @ 3 @ 
condition  @ 34 @ condition  @ 35 @ 
expr  @ 57 @ expr  @ 61 @ 
operator: ++  @ 35 @ operator: ++  @ 36 @ 
name: fracp  @ 4 @ name: fracp  @ 4 @ 
expr  @ 49 @ expr  @ 50 @ 
operator: =  @ 49 @ operator: =  @ 50 @ 
name: GTime2str  @ 1 @ name: GTime2str  @ 1 @ 
operator: =  @ 32 @ operator: =  @ 33 @ 
empty_stmt  @ 13 @ empty_stmt  @ 14 @ 
name: tzl  @ 7 @ name: tzl  @ 7 @ 
decl  @ 3 @ decl  @ 3 @ 
operator: +  @ 57 @ operator: +  @ 60 @ 
decl  @ 8 @ decl  @ 8 @ 
operator: *  @ 34 @ operator: *  @ 35 @ 
expr  @ 40 @ expr  @ 41 @ 
specifier: const  @ 8 @ specifier: const  @ 8 @ 
operator: -  @ 17 @ operator: -  @ 18 @ 
name: fracp  @ 25 @ name: fracp  @ 26 @ 
argument  @ 57 @ argument  @ 61 @ 
expr  @ 57 @ expr  @ 58 @ 
literal: " GMT"  @ 48 @ literal: " GMT"  @ 49 @ 
else  @ 57 @ else  @ 61 @ 
operator: -  @ 17 @ operator: -  @ 18 @ 
name: tzl  @ 57 @ name: tzl  @ 62 @ 
expr  @ 57 @ expr  @ 59 @ 
init  @ 12 @ init  @ 13 @ 
do  @ 36 @ do  @ 37 @ 
index  @ 25 @ index  @ 26 @ 
name: fracl  @ 33 @ name: fracl  @ 34 @ 
condition  @ 17 @ condition  @ 18 @ 
name: tzl  @ 56 @ name: tzl  @ 57 @ 
specifier: const  @ 1 @ specifier: const  @ 1 @ 
name: end  @ 12 @ name: end  @ 13 @ 
name: tzp  @ 38 @ name: tzp  @ 39 @ 
decl  @ 7 @ decl  @ 7 @ 
operator: =  @ 22 @ operator: =  @ 23 @ 
literal: ','  @ 34 @ literal: ','  @ 35 @ 
name: char  @ 5 @ name: char  @ 5 @ 
expr  @ 57 @ expr  @ 60 @ 
decl  @ 5 @ decl  @ 5 @ 
name: end  @ 45 @ name: end  @ 46 @ 
operator: ++  @ 53 @ operator: ++  @ 54 @ 
incr  @ 12 @ incr  @ 13 @ 
expr  @ 56 @ expr  @ 57 @ 
block  @ 51 @ block  @ 52 @ 
argument  @ 57 @ argument  @ 62 @ 
break  @ 26 @ break  @ 27 @ 
name: fracp  @ 34 @ name: fracp  @ 35 @ 
expr  @ 19 @ expr  @ 20 @ 
expr  @ 57 @ expr  @ 62 @ 
expr_stmt  @ 52 @ expr_stmt  @ 53 @ 
literal: 4  @ 57 @ literal: 4  @ 59 @ 
name: char  @ 4 @ name: char  @ 4 @ 
argument_list  @ 57 @ argument_list  @ 58 @ 
operator: &&  @ 40 @ operator: &&  @ 41 @ 
condition  @ 47 @ condition  @ 48 @ 
condition  @ 57 @ condition  @ 61 @ 
expr  @ 25 @ expr  @ 26 @ 
operator: ==  @ 34 @ operator: ==  @ 35 @ 
block  @ 13 @ block  @ 14 @ 
name: fracl  @ 40 @ name: fracl  @ 41 @ 
operator: =  @ 25 @ operator: =  @ 26 @ 
comment: /* Process timezone. */  @ 44 @ comment: /* Process timezone. */  @ 45 @ 
block_content  @ 13 @ block_content  @ 14 @ 
expr  @ 21 @ expr  @ 22 @ 
literal: 1  @ 40 @ literal: 1  @ 41 @ 
expr  @ 32 @ expr  @ 33 @ 
index  @ 40 @ index  @ 41 @ 
literal: 'Z'  @ 47 @ literal: 'Z'  @ 48 @ 
return  @ 28 @ return  @ 29 @ 
name: tzp  @ 53 @ name: tzp  @ 54 @ 
operator: *  @ 38 @ operator: *  @ 39 @ 
comment: /* Nothing to do. */  @ 46 @ comment: /* Nothing to do. */  @ 47 @ 
name: beg  @ 57 @ name: beg  @ 59 @ 
name: size_t  @ 7 @ name: size_t  @ 7 @ 
name: fracp  @ 32 @ name: fracp  @ 33 @ 
literal: '9'  @ 38 @ literal: '9'  @ 39 @ 
name: beg  @ 57 @ name: beg  @ 59 @ 
operator: *  @ 12 @ operator: *  @ 13 @ 
block  @ 17 @ block  @ 18 @ 
expr  @ 40 @ expr  @ 41 @ 
name: tzp  @ 49 @ name: tzp  @ 50 @ 
specifier: static  @ 1 @ specifier: static  @ 1 @ 
operator: -  @ 40 @ operator: -  @ 41 @ 
name: fracp  @ 12 @ name: fracp  @ 13 @ 
argument  @ 57 @ argument  @ 61 @ 
argument  @ 57 @ argument  @ 58 @ 
expr_stmt  @ 19 @ expr_stmt  @ 20 @ 
expr_stmt  @ 37 @ expr_stmt  @ 38 @ 
type  @ 4 @ type  @ 4 @ 
expr  @ 57 @ expr  @ 59 @ 
ternary  @ 57 @ ternary  @ 61 @ 
name: fracl  @ 6 @ name: fracl  @ 6 @ 
name: fracp  @ 17 @ name: fracp  @ 18 @ 
switch  @ 17 @ switch  @ 18 @ 
default  @ 27 @ default  @ 28 @ 
literal: '0'  @ 40 @ literal: '0'  @ 41 @ 
operator: +  @ 57 @ operator: +  @ 59 @ 
name: sec1  @ 22 @ name: sec1  @ 23 @ 
operator: &&  @ 12 @ operator: &&  @ 13 @ 
case  @ 24 @ case  @ 25 @ 
operator: -  @ 40 @ operator: -  @ 41 @ 
expr  @ 52 @ expr  @ 53 @ 
type  @ 8 @ type  @ 8 @ 
modifier: *  @ 4 @ modifier: *  @ 4 @ 
if  @ 47 @ if  @ 48 @ 
literal: " "  @ 52 @ literal: " "  @ 53 @ 
operator: =  @ 52 @ operator: =  @ 53 @ 
parameter  @ 1 @ parameter  @ 1 @ 
literal: "."  @ 57 @ literal: "."  @ 61 @ 
name: tzp  @ 48 @ name: tzp  @ 49 @ 
name: fracp  @ 12 @ name: fracp  @ 13 @ 
operator: *  @ 12 @ operator: *  @ 13 @ 
call  @ 57 @ call  @ 58 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
operator: -  @ 40 @ operator: -  @ 41 @ 
operator: =  @ 33 @ operator: =  @ 34 @ 
operator: (  @ 57 @ operator: (  @ 62 @ 
comment: /* Get seconds digits. */  @ 15 @ comment: /* Get seconds digits. */  @ 16 @ 
return  @ 57 @ return  @ 58 @ 
name: tzp  @ 45 @ name: tzp  @ 46 @ 
expr  @ 25 @ expr  @ 26 @ 
expr  @ 28 @ expr  @ 29 @ 
block_content  @ 35 @ block_content  @ 36 @ 
expr  @ 37 @ expr  @ 38 @ 
operator: <  @ 38 @ operator: <  @ 39 @ 
operator: (  @ 57 @ operator: (  @ 61 @ 
name: tzp  @ 56 @ name: tzp  @ 57 @ 
expr  @ 57 @ expr  @ 58 @ 
argument  @ 57 @ argument  @ 59 @ 
argument  @ 57 @ argument  @ 59 @ 
expr  @ 57 @ expr  @ 60 @ 
operator: -  @ 22 @ operator: -  @ 23 @ 
block  @ 41 @ block  @ 42 @ 
argument  @ 57 @ argument  @ 62 @ 
name: fracl  @ 57 @ name: fracl  @ 61 @ 
expr  @ 34 @ expr  @ 35 @ 
decl_stmt  @ 6 @ decl_stmt  @ 6 @ 
literal: '9'  @ 12 @ literal: '9'  @ 13 @ 
operator: <=  @ 38 @ operator: <=  @ 39 @ 
literal: 2  @ 21 @ literal: 2  @ 22 @ 
expr_stmt  @ 48 @ expr_stmt  @ 49 @ 
decl_stmt  @ 7 @ decl_stmt  @ 7 @ 
block_content  @ 48 @ block_content  @ 49 @ 
literal: ""  @ 57 @ literal: ""  @ 61 @ 
control  @ 40 @ control  @ 41 @ 
literal: 10  @ 57 @ literal: 10  @ 60 @ 
block_content  @ 3 @ block_content  @ 3 @ 
literal: 1  @ 40 @ literal: 1  @ 41 @ 
name: tzp  @ 57 @ name: tzp  @ 62 @ 
name: char  @ 1 @ name: char  @ 1 @ 
name: sec1  @ 5 @ name: sec1  @ 5 @ 
operator: <=  @ 12 @ operator: <=  @ 13 @ 
expr  @ 57 @ expr  @ 61 @ 
literal: '0'  @ 16 @ literal: '0'  @ 17 @ 
name: end  @ 49 @ name: end  @ 50 @ 
operator: )  @ 34 @ operator: )  @ 35 @ 
name: sec2  @ 19 @ name: sec2  @ 20 @ 
condition  @ 40 @ condition  @ 41 @ 
literal: 0  @ 33 @ literal: 0  @ 34 @ 
expr  @ 24 @ expr  @ 25 @ 
expr  @ 12 @ expr  @ 13 @ 
block_content  @ 52 @ block_content  @ 53 @ 
operator: &&  @ 34 @ operator: &&  @ 35 @ 
expr  @ 22 @ expr  @ 23 @ 
specifier: const  @ 4 @ specifier: const  @ 4 @ 
block_content  @ 37 @ block_content  @ 38 @ 
then  @ 57 @ then  @ 61 @ 
name: fracp  @ 57 @ name: fracp  @ 61 @ 
operator: -  @ 25 @ operator: -  @ 26 @ 
name: char  @ 3 @ name: char  @ 3 @ 
name: char  @ 1 @ name: char  @ 1 @ 
comment: /* Strip leading zeroes in fractional seconds. */  @ 39 @ comment: /* Strip leading zeroes in fractional seconds. */  @ 40 @ 
name: tzp  @ 38 @ name: tzp  @ 39 @ 
expr  @ 48 @ expr  @ 49 @ 
expr_stmt  @ 33 @ expr_stmt  @ 34 @ 
operator: =  @ 56 @ operator: =  @ 57 @ 
name: fracp  @ 22 @ name: fracp  @ 23 @ 
block  @ 46 @ block  @ 47 @ 
operator: =  @ 48 @ operator: =  @ 49 @ 
parameter  @ 1 @ parameter  @ 1 @ 
name: tzp  @ 47 @ name: tzp  @ 48 @ 
literal: 4  @ 49 @ literal: 4  @ 50 @ 
block  @ 2 @ block  @ 2 @ 
name: beg  @ 57 @ name: beg  @ 59 @ 
expr  @ 57 @ expr  @ 62 @ 
comment: /* Scan for timezone, measure fractional seconds. */  @ 31 @ comment: /* Scan for timezone, measure fractional seconds. */  @ 32 @ 
operator: ++  @ 37 @ operator: ++  @ 38 @ 
name: tzp  @ 37 @ name: tzp  @ 38 @ 
name: beg  @ 17 @ name: beg  @ 18 @ 
expr  @ 12 @ expr  @ 13 @ 
operator: --  @ 40 @ operator: --  @ 41 @ 
specifier: const  @ 1 @ specifier: const  @ 1 @ 
name: tzp  @ 32 @ name: tzp  @ 33 @ 
case  @ 18 @ case  @ 19 @ 
name: tzp  @ 3 @ name: tzp  @ 3 @ 
name: NULL  @ 28 @ name: NULL  @ 29 @ 
name: fracp  @ 40 @ name: fracp  @ 41 @ 
operator: )  @ 57 @ operator: )  @ 62 @ 
literal: '0'  @ 12 @ literal: '0'  @ 13 @ 
name: tzp  @ 38 @ name: tzp  @ 39 @ 
literal: 2  @ 22 @ literal: 2  @ 23 @ 
unit  @ 1 @ unit  @ 1 @ 
operator: *  @ 38 @ operator: *  @ 39 @ 
block  @ 34 @ block  @ 35 @ 
block  @ 37 @ block  @ 38 @ 
type  @ 1 @ type  @ 1 @ 
name: sec2  @ 57 @ name: sec2  @ 60 @ 
name: fracl  @ 57 @ name: fracl  @ 61 @ 
operator: ==  @ 40 @ operator: ==  @ 41 @ 
name: fracp  @ 12 @ name: fracp  @ 13 @ 
expr_stmt  @ 56 @ expr_stmt  @ 57 @ 
modifier: *  @ 3 @ modifier: *  @ 3 @ 
decl  @ 1 @ decl  @ 1 @ 
expr  @ 57 @ expr  @ 61 @ 
name: end  @ 38 @ name: end  @ 39 @ 
name: sec2  @ 5 @ name: sec2  @ 5 @ 
expr  @ 40 @ expr  @ 41 @ 
expr  @ 18 @ expr  @ 19 @ 
name: char  @ 1 @ name: char  @ 1 @ 
argument  @ 57 @ argument  @ 60 @ 
name: fracp  @ 12 @ name: fracp  @ 13 @ 
name: char  @ 8 @ name: char  @ 8 @ 
name: fracp  @ 34 @ name: fracp  @ 35 @ 
operator: *  @ 34 @ operator: *  @ 35 @ 
type  @ 6 @ type  @ 6 @ 
expr  @ 57 @ expr  @ 59 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
if_stmt  @ 34 @ if_stmt  @ 35 @ 
name: end  @ 56 @ name: end  @ 57 @ 
name: sep  @ 52 @ name: sep  @ 53 @ 
expr_stmt  @ 53 @ expr_stmt  @ 54 @ 
name: sec2  @ 25 @ name: sec2  @ 26 @ 
expr  @ 57 @ expr  @ 61 @ 
name: fracl  @ 40 @ name: fracl  @ 41 @ 
operator: ==  @ 47 @ operator: ==  @ 48 @ 
literal: "%.4s-%.2s-%.2s %.2s:%.2s:%c%c%s%.*s%s%.*s"  @ 57 @ literal: "%.4s-%.2s-%.2s %.2s:%.2s:%c%c%s%.*s%s%.*s"  @ 58 @ 
argument  @ 57 @ argument  @ 60 @ 
if  @ 45 @ if  @ 46 @ 
literal: 0  @ 18 @ literal: 0  @ 19 @ 
operator: ||  @ 34 @ operator: ||  @ 35 @ 
expr  @ 40 @ expr  @ 41 @ 
operator: =  @ 12 @ operator: =  @ 13 @ 
block_content  @ 18 @ block_content  @ 19 @ 
decl_stmt  @ 4 @ decl_stmt  @ 4 @ 
expr_stmt  @ 35 @ expr_stmt  @ 36 @ 
if_stmt  @ 45 @ if_stmt  @ 46 @ 
control  @ 12 @ control  @ 13 @ 
expr  @ 45 @ expr  @ 46 @ 
expr  @ 35 @ expr  @ 36 @ 
block_content  @ 41 @ block_content  @ 42 @ 
literal: '.'  @ 34 @ literal: '.'  @ 35 @ 
if  @ 34 @ if  @ 35 @ 
expr  @ 38 @ expr  @ 39 @ 
name: size_t  @ 6 @ name: size_t  @ 6 @ 
decl  @ 1 @ decl  @ 1 @ 
name: end  @ 34 @ name: end  @ 35 @ 
operator: +  @ 57 @ operator: +  @ 59 @ 
type  @ 5 @ type  @ 5 @ 
literal: 8  @ 57 @ literal: 8  @ 60 @ 
literal: 6  @ 57 @ literal: 6  @ 59 @ 
operator: ==  @ 34 @ operator: ==  @ 35 @ 
specifier: const  @ 3 @ specifier: const  @ 3 @ 
name: fracp  @ 12 @ name: fracp  @ 13 @ 
expr_stmt  @ 32 @ expr_stmt  @ 33 @ 
function  @ 1 @ function  @ 1 @ 
operator: &&  @ 12 @ operator: &&  @ 13 @ 
expr  @ 33 @ expr  @ 34 @ 
expr_stmt  @ 25 @ expr_stmt  @ 26 @ 
name: beg  @ 57 @ name: beg  @ 60 @ 
name: beg  @ 12 @ name: beg  @ 13 @ 
operator: >=  @ 12 @ operator: >=  @ 13 @ 
name: beg  @ 57 @ name: beg  @ 60 @ 
modifier: *  @ 8 @ modifier: *  @ 8 @ 
argument  @ 57 @ argument  @ 61 @ 
condition  @ 45 @ condition  @ 46 @ 
operator: +  @ 49 @ operator: +  @ 50 @ 
argument  @ 57 @ argument  @ 60 @ 
decl  @ 5 @ decl  @ 5 @ 
expr  @ 16 @ expr  @ 17 @ 
name: beg  @ 1 @ name: beg  @ 1 @ 
expr_stmt  @ 49 @ expr_stmt  @ 50 @ 
type  @ 1 @ type  @ 1 @ 
expr  @ 57 @ expr  @ 60 @ 
block_content  @ 46 @ block_content  @ 47 @ 
name: sep  @ 8 @ name: sep  @ 8 @ 
operator: <  @ 34 @ operator: <  @ 35 @ 
operator: ++  @ 12 @ operator: ++  @ 13 @ 
type  @ 7 @ type  @ 7 @ 
expr  @ 57 @ expr  @ 60 @ 
name: sep  @ 57 @ name: sep  @ 62 @ 
empty_stmt  @ 41 @ empty_stmt  @ 42 @ 
expr  @ 12 @ expr  @ 13 @ 
specifier: const  @ 1 @ specifier: const  @ 1 @ 
decl_stmt  @ 8 @ decl_stmt  @ 8 @ 
condition  @ 38 @ condition  @ 39 @ 
case  @ 21 @ case  @ 22 @ 
else  @ 51 @ else  @ 52 @ 
name: int  @ 57 @ name: int  @ 61 @ 
name: int  @ 57 @ name: int  @ 62 @ 
name: end  @ 1 @ name: end  @ 1 @ 

