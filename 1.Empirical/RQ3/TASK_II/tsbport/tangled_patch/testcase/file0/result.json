{
    "testcase": {
        "file0": {
            "match_message": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "Edit": "change",
                        "L1": "99 -> -1",
                        "L2": "101 -> -1",
                        "debug": {
                            "runtime info": "True,{'state': 'ignore', 'type': 'unknown', 'info': 'missing change/delete counterpart'}",
                            "verify location": "-1",
                            "output location": "-1",
                            "verify result": "True"
                        },
                        "type": "unknown",
                        "raw_match_info": {
                            "state": "ignore",
                            "type": "unknown",
                            "info": "missing change/delete counterpart"
                        }
                    }
                },
                "Same: checkInkNamesString -> checkInkNamesString": {
                    "Seg_1": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 103 -> 147",
                        "L2": "3: Unique Matched by Source code 106 -> 150"
                    },
                    "Seg_2": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 109 -> 153",
                        "L2": "3: Unique Matched by Source code 109 -> 153"
                    },
                    "Seg_3": {
                        "Edit": "change",
                        "L1": "6: Matched by Text Context Similarity from Source Code 114->158",
                        "L2": "3: Unique Matched by Source code 115 -> 159"
                    },
                    "Seg_4": {
                        "Edit": "change",
                        "L1": "5: Matched by Syntax(AST) similarity 118->162",
                        "L2": "5: Matched by Syntax(AST) similarity 118->162"
                    }
                },
                "Same: _TIFFVSetField -> _TIFFVSetField": {
                    "Seg_5": {
                        "Edit": "add",
                        "L1": "3: Unique Matched by Source code 398 -> 479",
                        "L2": "6: Matched by Text Context Similarity from Source Code 399->480 ([[480, 1.0], [269, 0.5140388768898488], [256, 0.5074626865671642], [490, 0.497737556561086], [361, 0.4963235294117647], [262, 0.4873949579831933], [229, 0.4844961240310077], [349, 0.48], [420, 0.476], [431, 0.47410358565737054]])"
                    },
                    "Seg_6": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 401 -> 482",
                        "L2": "3: Unique Matched by Source code 403 -> 484"
                    },
                    "Seg_7": {
                        "Edit": "add",
                        "L1": "3: Unique Matched by Source code 405 -> 486",
                        "L2": "6: Matched by Text Context Similarity from Source Code 406->487"
                    }
                },
                "Same: _TIFFVGetField -> _TIFFVGetField": {
                    "Seg_8": {
                        "Edit": "delete",
                        "L1": "3: Unique Matched by Source code 808 -> 913",
                        "L2": "6: Matched by Text Context Similarity from Source Code 833->940"
                    },
                    "Seg_9": {
                        "Edit": "add",
                        "L1": "3: Unique Matched by Source code 1010 -> 1119",
                        "L2": "6: Matched by Text Context Similarity from Source Code 1011->1120 ([[1120, 1.0], [1117, 0.7903225806451613], [1017, 0.6262626262626263], [1014, 0.625], [1020, 0.6240409207161126], [1065, 0.6237623762376238], [947, 0.6218905472636815], [1068, 0.6212121212121212], [1011, 0.619718309859155], [1023, 0.6180904522613065], [953, 0.6176470588235294], [956, 0.6157635467980296], [1071, 0.615], [950, 0.6142506142506142], [971, 0.6135265700483092], [965, 0.6119402985074627], [1090, 0.6094182825484764], [977, 0.6091127098321343], [968, 0.6048780487804878], [962, 0.6039603960396039], [959, 0.5980392156862745], [1114, 0.5974025974025974], [944, 0.5945945945945945], [1093, 0.5944700460829493], [974, 0.5865384615384616], [1087, 0.574585635359116], [1026, 0.5739910313901345], [980, 0.5587583148558759], [1100, 0.5557894736842105], [1097, 0.5552825552825553], [1062, 0.5441176470588236], [1053, 0.5202863961813842], [1008, 0.5157894736842106], [1030, 0.5076586433260394], [1034, 0.5032258064516129], [1058, 0.49891540130151846], [1039, 0.49237472766884527], [1104, 0.4736842105263158], [994, 0.4418052256532067], [1046, 0.4337349397590361]])"
                    }
                }
            },
            "verify_message": {},
            "prepare_info": [
                [
                    "Seg_0",
                    {
                        "Edit": "change",
                        "add_location": -1,
                        "add_hunk": [
                            "static uint16_t\n",
                            "countInkNamesString(TIFF *tif, uint32_t slen, const char *s)\n"
                        ],
                        "delete_location": [
                            -1,
                            -1
                        ],
                        "delete_hunk": [
                            " * End:\n"
                        ]
                    }
                ],
                [
                    "Seg_1",
                    {
                        "Edit": "change",
                        "add_location": 147,
                        "add_hunk": [
                            "\tuint16_t i = 0;\n"
                        ],
                        "delete_location": [
                            147,
                            150
                        ],
                        "delete_hunk": [
                            "\tTIFFDirectory* td = &tif->tif_dir;\n",
                            "\tuint16_t i = td->td_samplesperpixel;\n",
                            "\tif (slen > 0) {\n"
                        ]
                    }
                ],
                [
                    "Seg_2",
                    {
                        "Edit": "change",
                        "add_location": 153,
                        "add_hunk": [
                            "\tif (slen > 0) {\n",
                            "\t\tdo {\n"
                        ],
                        "delete_location": [
                            153,
                            153
                        ],
                        "delete_hunk": [
                            "\t\tfor (; i > 0; i--) {\n"
                        ]
                    }
                ],
                [
                    "Seg_3",
                    {
                        "Edit": "change",
                        "add_location": 158,
                        "add_hunk": [
                            "\t\t\ti++;\n",
                            "\t\t} while (cp < ep);\n",
                            "\t\treturn (i);\n"
                        ],
                        "delete_location": [
                            158,
                            159
                        ],
                        "delete_hunk": [
                            "\t\t}\n",
                            "\t\treturn ((uint32_t)(cp - s));\n"
                        ]
                    }
                ],
                [
                    "Seg_4",
                    {
                        "Edit": "change",
                        "add_location": 162,
                        "add_hunk": [
                            "TIFFErrorExt(tif->tif_clientdata, \"TIFFSetField\",\"%s: Invalid InkNames value; no NUL at given buffer end location %\"PRIu32\", after %\"PRIu16\" ink\",tif->tif_name, slen, i);"
                        ],
                        "delete_location": [
                            162,
                            162
                        ],
                        "delete_hunk": [
                            "\tTIFFErrorExt(tif->tif_clientdata, \"TIFFSetField\",\n"
                        ]
                    }
                ],
                [
                    "Seg_5",
                    {
                        "Edit": "add",
                        "add_location": 479,
                        "add_hunk": [
                            "\t\t{\n"
                        ]
                    }
                ],
                [
                    "Seg_6",
                    {
                        "Edit": "change",
                        "add_location": 482,
                        "add_hunk": [
                            "\t\t\tuint16_t ninksinstring;\n",
                            "\t\t\tninksinstring = countInkNamesString(tif, v, s);\n",
                            "\t\t\tstatus = ninksinstring > 0;\n",
                            "\t\t\tif(ninksinstring > 0 ) {\n"
                        ],
                        "delete_location": [
                            482,
                            484
                        ],
                        "delete_hunk": [
                            "\t\tv = checkInkNamesString(tif, v, s);\n",
                            "\t\tstatus = v > 0;\n",
                            "\t\tif( v > 0 ) {\n"
                        ]
                    }
                ],
                [
                    "Seg_7",
                    {
                        "Edit": "add",
                        "add_location": 486,
                        "add_hunk": [
                            "\t\t\t\tif (TIFFFieldSet(tif, FIELD_NUMBEROFINKS))\n",
                            "\t\t\t\t{\n",
                            "\t\t\t\t\tif (td->td_numberofinks != ninksinstring) {\n",
                            "\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\"Warning %s; Tag %s:\\nValue %\"PRIu16\" of NumberOfInks is different from the number of inks %\"PRIu16\".\\n-> NumberOfInks value adapted to %\"PRIu16\"\",tif->tif_name, fip->field_name, td->td_numberofinks, ninksinstring, ninksinstring);\n",
                            "\t\t\t\t\t\ttd->td_numberofinks = ninksinstring;\n",
                            "\t\t\t\t\t}\n",
                            "\t\t\t\t} else {\n",
                            "\t\t\t\t\ttd->td_numberofinks = ninksinstring;\n",
                            "\t\t\t\t\tTIFFSetFieldBit(tif, FIELD_NUMBEROFINKS);\n",
                            "\t\t\t\t}\n",
                            "\t\t\t\tif (TIFFFieldSet(tif, FIELD_SAMPLESPERPIXEL))\n",
                            "\t\t\t\t{\n",
                            "\t\t\t\t\tif (td->td_numberofinks != td->td_samplesperpixel) {\n",
                            "\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\"Warning %s; Tag %s:\\nValue %\"PRIu16\" of NumberOfInks is different from the SamplesPerPixel value %\"PRIu16\"\",tif->tif_name, fip->field_name, td->td_numberofinks, td->td_samplesperpixel);\n",
                            "\t\t\t\t\t}\n",
                            "\t\t\t\t}\n",
                            "\t\t\t}\n",
                            "\t\t}\n",
                            "\t\tbreak;\n",
                            "\tcase TIFFTAG_NUMBEROFINKS:\n",
                            "\t\tv = (uint16_t)va_arg(ap, uint16_vap);\n",
                            "\t\tif (TIFFFieldSet(tif, FIELD_INKNAMES))\n",
                            "\t\t{\n",
                            "\t\t\tif (v != td->td_numberofinks) {\n",
                            "\t\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\"Error %s; Tag %s:\\nIt is not possible to set the value %\"PRIu32\" for NumberOfInks\\nwhich is different from the number of inks in the InkNames tag (%\"PRIu16\")\",tif->tif_name, fip->field_name, v, td->td_numberofinks);\n",
                            "\t\t\t\tstatus = 0;\n",
                            "\t\t\t}\n",
                            "\t\t} else {\n",
                            "\t\t\ttd->td_numberofinks = (uint16_t)v;\n",
                            "\t\t\tif (TIFFFieldSet(tif, FIELD_SAMPLESPERPIXEL))\n",
                            "\t\t\t{\n",
                            "\t\t\t\tif (td->td_numberofinks != td->td_samplesperpixel) {\n",
                            "\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\"Warning %s; Tag %s:\\nValue %\"PRIu32\" of NumberOfInks is different from the SamplesPerPixel value %\"PRIu16\"\",tif->tif_name, fip->field_name, v, td->td_samplesperpixel);\n",
                            "\t\t\t\t}\n",
                            "\t\t\t}\n"
                        ]
                    }
                ],
                [
                    "Seg_8",
                    {
                        "Edit": "delete",
                        "delete_location": [
                            913,
                            940
                        ],
                        "delete_hunk": [
                            "        if( standard_tag == TIFFTAG_NUMBEROFINKS )\n",
                            "        {\n",
                            "            int i;\n",
                            "            for (i = 0; i < td->td_customValueCount; i++) {\n",
                            "                uint16_t val;\n",
                            "                TIFFTagValue *tv = td->td_customValues + i;\n",
                            "                if (tv->info->field_tag != standard_tag)\n",
                            "                    continue;\n",
                            "                if( tv->value == NULL )\n",
                            "                    return 0;\n",
                            "                val = *(uint16_t *)tv->value;\n",
                            "                if( val > td->td_samplesperpixel )\n",
                            "                {\n",
                            "                    TIFFWarningExt(tif->tif_clientdata,\"_TIFFVGetField\",\n",
                            "                                   \"Truncating NumberOfInks from %u to %\"PRIu16,\n",
                            "                                   val, td->td_samplesperpixel);\n",
                            "                    val = td->td_samplesperpixel;\n",
                            "                }\n",
                            "                *va_arg(ap, uint16_t*) = val;\n",
                            "                return 1;\n",
                            "            }\n",
                            "            return 0;\n",
                            "        }\n"
                        ]
                    }
                ],
                [
                    "Seg_9",
                    {
                        "Edit": "add",
                        "add_location": 1119,
                        "add_hunk": [
                            "\t\t\tbreak;\n",
                            "\t\tcase TIFFTAG_NUMBEROFINKS:\n",
                            "\t\t\t*va_arg(ap, uint16_t *) = td->td_numberofinks;\n"
                        ]
                    }
                ]
            ],
            "semanic_check": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "type": "out func",
                        "state": "success",
                        "info": [
                            "unknown",
                            "unknown"
                        ]
                    }
                },
                "Same: checkInkNamesString -> checkInkNamesString": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Same: _TIFFVSetField -> _TIFFVSetField": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Same: _TIFFVGetField -> _TIFFVGetField": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                }
            },
            "verify_patch": null,
            "patch_types": [
                "other",
                "change_value",
                "sanity_check",
                "change_type",
                "Func_Invocation",
                "in_loop",
                "Func_Definition",
                "function_call",
                "control_flow"
            ]
        }
    }
}