49a50,57
>  int64_t nnz = a_indices->dim_size(0);
>  int64_t ndims = a_indices->dim_size(1);
>  if (a_values->dim_size(0) != nnz) {  // Critical validation
>    return errors::InvalidArgument("Dimensions ", nnz, " and ", a_values->dim_size(0), " are not compatible");
>  }
>  if (a_shape->dim_size(0) != ndims) {  // Critical validation
>    return errors::InvalidArgument("Dimensions ", ndims, " and ", a_shape->dim_size(0), " are not compatible");
>  }
59a60,68
>    }
>  }
>  const auto a_indices_mat = a_indices->flat_inner_dims<Index>();
>  for (int64_t zidx = 0; zidx < nnz; ++zidx) {
>    for (int64_t didx = 0; didx < ndims; ++didx) {
>      const Index idx = a_indices_mat(zidx, didx);
>      if (idx < 0 || idx >= a_shape_flat(didx)) {  // Bounds check
>        return errors::InvalidArgument("Sparse tensor has an invalid index on dimension ", didx,": ""a_indices(",zidx, ",", didx, ") = ", idx,", dense tensor shape: ", a_shape_flat);
>      }
