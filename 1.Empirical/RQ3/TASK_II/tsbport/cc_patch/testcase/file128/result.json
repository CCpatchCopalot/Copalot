{
    "testcase": {
        "file128": {
            "match_message": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "Edit": "delete",
                        "L1": "166 -> -1",
                        "L2": "166 -> -1",
                        "debug": {
                            "runtime info": "True,{'state': 'ignore', 'type': 'unknown', 'info': 'missing change/delete counterpart'}",
                            "verify location": "-1",
                            "output location": "-1",
                            "verify result": "True"
                        },
                        "type": "unknown",
                        "raw_match_info": {
                            "state": "ignore",
                            "type": "unknown",
                            "info": "missing change/delete counterpart"
                        }
                    },
                    "Seg_1": {
                        "Edit": "change",
                        "L1": "402 -> -1",
                        "L2": "402 -> -1",
                        "debug": {
                            "runtime info": "True,{'state': 'ignore', 'type': 'src:decl', 'info': 'missing change/delete counterpart'}",
                            "verify location": "-1",
                            "output location": "-1",
                            "verify result": "True"
                        },
                        "type": "src:decl",
                        "raw_match_info": {
                            "state": "ignore",
                            "type": "src:decl",
                            "info": "missing change/delete counterpart"
                        }
                    }
                },
                "Same: correct_orientation -> correct_orientation": {
                    "Seg_2": {
                        "Edit": "change",
                        "L1": "5: Matched by Syntax(AST) similarity 6038->6314",
                        "L2": "6: Matched by Text Context Similarity from Source Code 6039->6315"
                    }
                },
                "Same: processCropSelections -> processCropSelections": {
                    "Seg_3": {
                        "Edit": "change",
                        "L1": "7: Context line (Ignored) is empty or comment 7111",
                        "L2": "7: Context line (Ignored) is empty or comment 7111"
                    },
                    "Seg_4": {
                        "Edit": "change",
                        "L1": "7: Context line (Ignored) is empty or comment 7214",
                        "L2": "7: Context line (Ignored) is empty or comment 7214"
                    }
                },
                "Same: createCroppedImage -> createCroppedImage": {
                    "Seg_5": {
                        "Edit": "change",
                        "L1": "7: Context line (Ignored) is empty or comment 7330",
                        "L2": "7: Context line (Ignored) is empty or comment 7330"
                    }
                },
                "Same: rotateImage -> rotateImage": {
                    "Seg_6": {
                        "Edit": "add",
                        "L1": "5: Matched by Syntax(AST) similarity 8175->8599",
                        "L2": "5: Matched by Syntax(AST) similarity 8176->8600"
                    },
                    "Seg_7": {
                        "Edit": "add",
                        "L1": "5: Matched by Syntax(AST) similarity 8180->8604",
                        "L2": "5: Matched by Syntax(AST) similarity 8181->8605"
                    },
                    "Seg_8": {
                        "Edit": "add",
                        "L1": "5: Matched by Syntax(AST) similarity 8253->8676",
                        "L2": "5: Matched by Syntax(AST) similarity 8254->8677"
                    },
                    "Seg_9": {
                        "Edit": "add",
                        "L1": "5: Matched by Syntax(AST) similarity 8258->8681",
                        "L2": "5: Matched by Syntax(AST) similarity 8259->8682"
                    }
                }
            },
            "verify_message": {},
            "prepare_info": [
                [
                    "Seg_0",
                    {
                        "Edit": "delete",
                        "delete_location": [
                            -1,
                            -1
                        ],
                        "delete_hunk": [
                            " * End:\n"
                        ]
                    }
                ],
                [
                    "Seg_1",
                    {
                        "Edit": "change",
                        "add_location": -1,
                        "add_hunk": [
                            "static int rotateImage(uint16_t, struct image_data *, uint32_t *, uint32_t *,unsigned char **, size_t *, int);\n"
                        ],
                        "delete_location": [
                            -1,
                            -1
                        ],
                        "delete_hunk": [
                            " * End:\n"
                        ]
                    }
                ],
                [
                    "Seg_3",
                    {
                        "Edit": "change",
                        "add_hunk": [
                            "            if (rotateImage(crop->rotation, image, &crop->combined_width,&crop->combined_length, &crop_buff, &rot_buf_size, FALSE))\n"
                        ]
                    }
                ],
                [
                    "Seg_4",
                    {
                        "Edit": "change",
                        "add_hunk": [
                            "                if (rotateImage(crop->rotation, image, &crop->regionlist[i].width,&crop->regionlist[i].length, &crop_buff, &rot_buf_size, FALSE))\n"
                        ]
                    }
                ],
                [
                    "Seg_5",
                    {
                        "Edit": "add",
                        "add_location": 137,
                        "add_hunk": [
                            "        if (rotateImage(crop->rotation, image, &crop->combined_width,&crop->combined_length, crop_buff_ptr, NULL, TRUE))\n"
                        ]
                    }
                ],
                [
                    "Seg_2",
                    {
                        "Edit": "change",
                        "add_location": 6314,
                        "add_hunk": [
                            "uint32_t width = image->width;",
                            "uint32_t length = image->length;",
                            "if (rotateImage(rotation, image, &width, &length, work_buff_ptr, TRUE) )\n",
                            "      \n",
                            "\t"
                        ],
                        "delete_location": [
                            6314,
                            6315
                        ],
                        "delete_hunk": [
                            "    if (rotateImage(rotation, image, &image->width, &image->length, work_buff_ptr))\n",
                            "      {\n"
                        ]
                    }
                ],
                [
                    "Seg_6",
                    {
                        "Edit": "add",
                        "add_location": 8599,
                        "add_hunk": [
                            "            if (rot_image_params)\n",
                            "            {\n"
                        ]
                    }
                ],
                [
                    "Seg_7",
                    {
                        "Edit": "add",
                        "add_location": 8604,
                        "add_hunk": [
                            "            }\n"
                        ]
                    }
                ],
                [
                    "Seg_8",
                    {
                        "Edit": "add",
                        "add_location": 8676,
                        "add_hunk": [
                            "            if (rot_image_params)\n",
                            "            {\n"
                        ]
                    }
                ],
                [
                    "Seg_9",
                    {
                        "Edit": "add",
                        "add_location": 8681,
                        "add_hunk": [
                            "            }\n"
                        ]
                    }
                ]
            ],
            "semanic_check": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "type": "out func",
                        "state": "fail",
                        "info": "local variable 'pa_add_hunk' referenced before assignment"
                    },
                    "Seg_1": {
                        "type": "out func",
                        "state": "success",
                        "info": [
                            "src:decl"
                        ]
                    }
                },
                "Same: correct_orientation -> correct_orientation": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Same: processCropSelections -> processCropSelections": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Same: createCroppedImage -> createCroppedImage": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Same: rotateImage -> rotateImage": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                }
            },
            "verify_patch": null,
            "patch_types": [
                "sanity_check",
                "function_definition",
                "change_type"
            ]
        }
    }
}