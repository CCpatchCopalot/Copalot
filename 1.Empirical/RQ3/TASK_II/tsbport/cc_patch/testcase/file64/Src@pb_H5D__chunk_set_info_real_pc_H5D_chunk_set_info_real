static herr_t
H5D__chunk_set_info_real(H5O_layout_chunk_t *layout, unsigned ndims,const hsize_t *curr_dims, const hsize_t *max_dims)
{
    unsigned u;                 /* Local index variable */
    herr_t ret_value = SUCCEED; /* Return value */

    FUNC_ENTER_STATIC

    /* Sanity checks */
    HDassert(layout);
    HDassert(ndims > 0);
        /* Sanity check */
        HDassert(layout->dim[u] > 0);
    HDassert(curr_dims);

    /* Compute the # of chunks in dataset dimensions */
    for(u = 0, layout->nchunks = 1, layout->max_nchunks = 1; u < ndims; u++) {
        /* Round up to the next integer # of chunks, to accommodate partial chunks */
        layout->chunks[u] = ((curr_dims[u] + layout->dim[u]) - 1) / layout->dim[u];
        if(H5S_UNLIMITED == max_dims[u])
            layout->max_chunks[u] = H5S_UNLIMITED;
        else
            layout->max_chunks[u] = ((max_dims[u] + layout->dim[u]) - 1) / layout->dim[u];

        /* Accumulate the # of chunks */
        layout->nchunks *= layout->chunks[u];
        layout->max_nchunks *= layout->max_chunks[u];
    } /* end for */

    /* Get the "down" sizes for each dimension */
    if(H5VM_array_down(ndims, layout->chunks, layout->down_chunks) < 0)
        HGOTO_ERROR(H5E_DATASET, H5E_CANTSET, FAIL, "can't compute 'down' chunk size value")
    if(H5VM_array_down(ndims, layout->max_chunks, layout->max_down_chunks) < 0)
        HGOTO_ERROR(H5E_DATASET, H5E_CANTSET, FAIL, "can't compute 'down' chunk size value")

done:
    FUNC_LEAVE_NOAPI(ret_value)
} /* end H5D__chunk_set_info_real() */
