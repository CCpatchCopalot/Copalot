decl  @ 1 @ decl  @ 1 @ 
operator: -=  @ 38 @ operator: -=  @ 35 @ 
operator: -  @ 20 @ operator: -  @ 19 @ 
decl_stmt  @ 17 @ decl_stmt  @ 16 @ 
literal: 2  @ 11 @ literal: 2  @ 6 @ 
name: int  @ 6 @ name: int  @ 5 @ 
expr_stmt  @ 34 @ expr_stmt  @ 31 @ 
expr  @ 16 @ expr  @ 15 @ 
decl  @ 20 @ decl  @ 19 @ 
operator: (  @ 7 @ operator: (  @ 6 @ 
expr  @ 7 @ expr  @ 6 @ 
argument_list  @ 30 @ argument_list  @ 27 @ 
type  @ 20 @ type  @ 19 @ 
name: tl  @ 33 @ name: tl  @ 30 @ 
expr_stmt  @ 10 @ expr_stmt  @ 9 @ 
name: tl  @ 16 @ name: tl  @ 15 @ 
argument  @ 7 @ argument  @ 6 @ 
comment: /* result is first operand */  @ 10 @ comment: /* result is first operand */  @ 9 @ 
name: L  @ 8 @ name: L  @ 7 @ 
argument  @ 16 @ argument  @ 15 @ 
operator: ->  @ 39 @ operator: ->  @ 36 @ 
name: char  @ 28 @ name: char  @ 25 @ 
name: luaS_createlngstrobj  @ 33 @ name: luaS_createlngstrobj  @ 30 @ 
block  @ 27 @ block  @ 24 @ 
decl_stmt  @ 5 @ decl_stmt  @ 4 @ 
argument_list  @ 21 @ argument_list  @ 20 @ 
operator: -  @ 12 @ operator: -  @ 11 @ 
block_content  @ 33 @ block_content  @ 30 @ 
operator: -  @ 38 @ operator: -  @ 35 @ 
expr_stmt  @ 8 @ expr_stmt  @ 7 @ 
expr  @ 27 @ expr  @ 24 @ 
type  @ 28 @ type  @ 25 @ 
name: size_t  @ 16 @ name: size_t  @ 15 @ 
condition  @ 7 @ condition  @ 6 @ 
incr  @ 19 @ incr  @ 18 @ 
operator: -  @ 39 @ operator: -  @ 36 @ 
name: L  @ 33 @ name: L  @ 30 @ 
expr  @ 12 @ expr  @ 11 @ 
expr  @ 19 @ expr  @ 18 @ 
literal: "string length overflow"  @ 23 @ literal: "string length overflow"  @ 21 @ 
name: ts  @ 30 @ name: ts  @ 27 @ 
argument  @ 29 @ argument  @ 26 @ 
call  @ 12 @ call  @ 11 @ 
operator: -  @ 20 @ operator: -  @ 19 @ 
decl  @ 16 @ decl  @ 15 @ 
argument  @ 30 @ argument  @ 27 @ 
operator: -  @ 19 @ operator: -  @ 18 @ 
type  @ 6 @ type  @ 5 @ 
name: ts  @ 17 @ name: ts  @ 16 @ 
type  @ 1 @ type  @ 1 @ 
condition  @ 9 @ condition  @ 8 @ 
argument_list  @ 20 @ argument_list  @ 19 @ 
expr  @ 36 @ expr  @ 33 @ 
expr  @ 7 @ expr  @ 6 @ 
name: total  @ 2 @ name: total  @ 2 @ 
call  @ 36 @ call  @ 33 @ 
call  @ 20 @ call  @ 19 @ 
name: tostring  @ 19 @ name: tostring  @ 18 @ 
name: void  @ 1 @ name: void  @ 1 @ 
sizeof  @ 21 @ sizeof  @ 20 @ 
argument  @ 9 @ argument  @ 8 @ 
init  @ 16 @ init  @ 15 @ 
name: top  @ 20 @ name: top  @ 19 @ 
expr  @ 19 @ expr  @ 18 @ 
expr  @ 23 @ expr  @ 21 @ 
operator: -=  @ 39 @ operator: -=  @ 36 @ 
name: buff  @ 28 @ name: buff  @ 25 @ 
name: StkId  @ 5 @ name: StkId  @ 4 @ 
argument  @ 10 @ argument  @ 9 @ 
expr  @ 30 @ expr  @ 27 @ 
expr  @ 7 @ expr  @ 10 @ 
argument_list  @ 12 @ argument_list  @ 11 @ 
condition  @ 40 @ condition  @ 37 @ 
name: n  @ 38 @ name: n  @ 35 @ 
expr  @ 12 @ expr  @ 11 @ 
expr  @ 33 @ expr  @ 30 @ 
argument  @ 11 @ argument  @ 6 @ 
call  @ 10 @ call  @ 9 @ 
expr  @ 30 @ expr  @ 27 @ 
name: setsvalue2s  @ 36 @ name: setsvalue2s  @ 33 @ 
literal: 1  @ 7 @ literal: 1  @ 6 @ 
name: n  @ 34 @ name: n  @ 31 @ 
expr  @ 36 @ expr  @ 33 @ 
expr  @ 39 @ expr  @ 36 @ 
comment: /* second operand is empty? */  @ 9 @ comment: /* second operand is empty? */  @ 8 @ 
expr  @ 38 @ expr  @ 35 @ 
literal: 2  @ 10 @ literal: 2  @ 9 @ 
block_content  @ 5 @ block_content  @ 4 @ 
operator: +=  @ 25 @ operator: +=  @ 22 @ 
operator: >=  @ 21 @ operator: >=  @ 20 @ 
name: s2v  @ 11 @ name: cvt2str  @ 6 @ 
expr  @ 28 @ expr  @ 25 @ 
name: top  @ 5 @ name: top  @ 4 @ 
expr  @ 12 @ expr  @ 11 @ 
expr  @ 9 @ expr  @ 8 @ 
operator: )  @ 7 @ operator: )  @ 6 @ 
if_stmt  @ 21 @ if_stmt  @ 20 @ 
expr  @ 23 @ expr  @ 21 @ 
name: n  @ 36 @ name: n  @ 33 @ 
operator: -  @ 36 @ operator: -  @ 33 @ 
argument  @ 23 @ argument  @ 21 @ 
operator: )  @ 21 @ operator: )  @ 20 @ 
operator: -  @ 7 @ operator: -  @ 6 @ 
literal: 2  @ 7 @ literal: 2  @ 6 @ 
expr  @ 30 @ expr  @ 27 @ 
decl  @ 17 @ decl  @ 16 @ 
name: buff  @ 30 @ name: buff  @ 27 @ 
argument_list  @ 29 @ argument_list  @ 26 @ 
name: L  @ 1 @ name: L  @ 1 @ 
name: getstr  @ 34 @ name: getstr  @ 31 @ 
argument  @ 36 @ argument  @ 33 @ 
block  @ 11 @ block  @ 10 @ 
unit  @ 1 @ unit  @ 1 @ 
name: n  @ 19 @ name: n  @ 18 @ 
name: copy2buff  @ 34 @ name: copy2buff  @ 31 @ 
name: L  @ 36 @ name: L  @ 33 @ 
argument  @ 7 @ argument  @ 6 @ 
block_content  @ 2 @ block_content  @ 2 @ 
name: L  @ 5 @ name: L  @ 4 @ 
expr  @ 29 @ expr  @ 26 @ 
expr  @ 20 @ expr  @ 19 @ 
literal: 1  @ 38 @ literal: 1  @ 35 @ 
expr  @ 10 @ expr  @ 9 @ 
literal: 1  @ 40 @ literal: 1  @ 37 @ 
expr  @ 34 @ expr  @ 31 @ 
decl  @ 1 @ decl  @ 1 @ 
name: L  @ 19 @ name: L  @ 18 @ 
condition  @ 19 @ condition  @ 18 @ 
operator: (  @ 21 @ operator: (  @ 20 @ 
argument  @ 7 @ argument  @ 10 @ 
expr  @ 10 @ expr  @ 9 @ 
expr  @ 29 @ expr  @ 26 @ 
name: top  @ 9 @ name: top  @ 8 @ 
comment: /* first operand is empty string? */  @ 11 @ comment: /* first operand is an empty string? */  @ 10 @ 
if_stmt  @ 27 @ if_stmt  @ 24 @ 
name: L  @ 23 @ name: L  @ 21 @ 
name: n  @ 19 @ name: n  @ 18 @ 
argument_list  @ 34 @ argument_list  @ 31 @ 
index  @ 28 @ index  @ 25 @ 
operator: -  @ 19 @ operator: -  @ 18 @ 
literal: 1  @ 9 @ literal: 1  @ 8 @ 
comment: /* result is second op. */  @ 12 @ comment: /* result is second op. */  @ 11 @ 
argument  @ 12 @ argument  @ 11 @ 
argument_list  @ 11 @ argument_list  @ 6 @ 
expr  @ 33 @ expr  @ 30 @ 
name  @ 5 @ name  @ 4 @ 
block  @ 4 @ block  @ 3 @ 
name: luaS_newlstr  @ 30 @ name: luaS_newlstr  @ 27 @ 
argument  @ 7 @ argument  @ 6 @ 
name: copy2buff  @ 29 @ name: copy2buff  @ 26 @ 
argument  @ 36 @ argument  @ 33 @ 
literal: 1  @ 19 @ literal: 1  @ 18 @ 
name: total  @ 1 @ name: total  @ 1 @ 
block  @ 32 @ block  @ 29 @ 
expr_stmt  @ 23 @ expr_stmt  @ 21 @ 
name: s2v  @ 9 @ name: isemptystr  @ 8 @ 
call  @ 19 @ call  @ 18 @ 
call  @ 8 @ call  @ 7 @ 
comment: /* create result */  @ 36 @ comment: /* create result */  @ 33 @ 
if  @ 9 @ if  @ 8 @ 
name: tl  @ 25 @ name: tl  @ 22 @ 
name: tostring  @ 10 @ name: tostring  @ 9 @ 
name: n  @ 19 @ name: n  @ 18 @ 
expr_stmt  @ 12 @ expr_stmt  @ 11 @ 
block_content  @ 8 @ block_content  @ 7 @ 
name: n  @ 20 @ name: n  @ 19 @ 
argument_list  @ 10 @ argument_list  @ 9 @ 
comment: /* got 'n' strings to create 1 new */  @ 38 @ comment: /* got 'n' strings to create 1 new */  @ 35 @ 
literal: 2  @ 12 @ literal: 2  @ 11 @ 
modifier: *  @ 1 @ modifier: *  @ 1 @ 
operator: &&  @ 19 @ operator: &&  @ 18 @ 
argument  @ 23 @ argument  @ 21 @ 
block_content  @ 10 @ block_content  @ 9 @ 
name: luaG_runerror  @ 23 @ name: luaG_runerror  @ 21 @ 
name: top  @ 12 @ name: top  @ 11 @ 
literal: 2  @ 7 @ literal: 2  @ 10 @ 
expr  @ 25 @ expr  @ 22 @ 
operator: !  @ 7 @ operator: !  @ 6 @ 
argument  @ 21 @ argument  @ 20 @ 
expr  @ 34 @ expr  @ 31 @ 
condition  @ 11 @ condition  @ 10 @ 
init  @ 20 @ init  @ 19 @ 
operator: =  @ 33 @ operator: =  @ 30 @ 
init  @ 19 @ init  @ 18 @ 
block  @ 14 @ block  @ 13 @ 
name: TString  @ 17 @ name: TString  @ 16 @ 
operator: /  @ 21 @ operator: /  @ 20 @ 
name: n  @ 19 @ name: n  @ 18 @ 
name: s2v  @ 16 @ name: vslen  @ 15 @ 
condition  @ 21 @ condition  @ 20 @ 
call  @ 7 @ call  @ 6 @ 
argument  @ 34 @ argument  @ 31 @ 
name: s2v  @ 7 @ name: ttisstring  @ 6 @ 
name: s2v  @ 7 @ name: isemptystr  @ 10 @ 
expr  @ 19 @ expr  @ 18 @ 
expr  @ 36 @ expr  @ 33 @ 
comment: /* number of elements handled in this pass (at least 2) */  @ 6 @ comment: /* number of elements handled in this pass (at least 2) */  @ 5 @ 
call  @ 16 @ call  @ 15 @ 
expr_stmt  @ 29 @ expr_stmt  @ 26 @ 
argument_list  @ 7 @ argument_list  @ 6 @ 
call  @ 33 @ call  @ 30 @ 
block_content  @ 12 @ block_content  @ 11 @ 
decl_stmt  @ 28 @ decl_stmt  @ 25 @ 
expr  @ 40 @ expr  @ 37 @ 
name: l  @ 25 @ name: l  @ 22 @ 
operator: !  @ 7 @ operator: !  @ 6 @ 
argument  @ 33 @ argument  @ 30 @ 
comment: /* popped 'n' strings and pushed one */  @ 39 @ comment: /* popped 'n' strings and pushed one */  @ 36 @ 
argument_list  @ 33 @ argument_list  @ 30 @ 
expr  @ 19 @ expr  @ 18 @ 
call  @ 11 @ call  @ 6 @ 
decl  @ 5 @ decl  @ 4 @ 
name: luaT_tryconcatTM  @ 8 @ name: luaT_trybinTM  @ 7 @ 
argument  @ 34 @ argument  @ 31 @ 
expr  @ 36 @ expr  @ 33 @ 
block  @ 19 @ block  @ 18 @ 
operator: =  @ 19 @ operator: =  @ 18 @ 
control  @ 19 @ control  @ 18 @ 
name: s2v  @ 20 @ name: vslen  @ 19 @ 
expr  @ 8 @ expr  @ 7 @ 
operator: -  @ 16 @ operator: -  @ 15 @ 
block_content  @ 16 @ block_content  @ 15 @ 
name: char  @ 21 @ name: char  @ 20 @ 
operator: -  @ 10 @ operator: -  @ 9 @ 
expr  @ 5 @ expr  @ 4 @ 
operator: -  @ 7 @ operator: -  @ 10 @ 
argument  @ 36 @ argument  @ 33 @ 
expr_stmt  @ 30 @ expr_stmt  @ 27 @ 
name: size_t  @ 20 @ name: size_t  @ 19 @ 
decl_stmt  @ 6 @ decl_stmt  @ 5 @ 
call  @ 10 @ call  @ 9 @ 
if  @ 11 @ if  @ 10 @ 
expr  @ 21 @ expr  @ 20 @ 
expr  @ 19 @ expr  @ 18 @ 
comment: /* copy strings to buffer */  @ 29 @ comment: /* copy strings to buffer */  @ 26 @ 
argument  @ 30 @ argument  @ 27 @ 
operator: -  @ 12 @ operator: -  @ 11 @ 
name: n  @ 39 @ name: n  @ 36 @ 
expr  @ 21 @ expr  @ 20 @ 
name: lua_State  @ 1 @ name: lua_State  @ 1 @ 
call  @ 7 @ call  @ 10 @ 
name: L  @ 30 @ name: L  @ 27 @ 
name: top  @ 36 @ name: top  @ 33 @ 
block_content  @ 20 @ block_content  @ 19 @ 
block_content  @ 22 @ block_content  @ 21 @ 
name: tl  @ 30 @ name: tl  @ 27 @ 
literal: 1  @ 19 @ literal: 1  @ 18 @ 
name: top  @ 10 @ name: top  @ 9 @ 
name: l  @ 21 @ name: l  @ 20 @ 
type  @ 1 @ type  @ 1 @ 
expr_stmt  @ 33 @ expr_stmt  @ 30 @ 
operator: -  @ 9 @ operator: -  @ 8 @ 
name: n  @ 6 @ name: n  @ 5 @ 
operator: -  @ 21 @ operator: -  @ 20 @ 
parameter  @ 1 @ parameter  @ 1 @ 
name: buff  @ 29 @ name: buff  @ 26 @ 
name: top  @ 5 @ name: top  @ 4 @ 
operator: >  @ 40 @ operator: >  @ 37 @ 
init  @ 6 @ init  @ 5 @ 
name: ts  @ 34 @ name: ts  @ 31 @ 
operator: =  @ 30 @ operator: =  @ 27 @ 
comment: /* repeat until only 1 result left */  @ 40 @ comment: /* repeat until only 1 result left */  @ 37 @ 
name: MAX_SIZE  @ 21 @ name: MAX_SIZE  @ 20 @ 
decl_stmt  @ 16 @ decl_stmt  @ 15 @ 
expr  @ 29 @ expr  @ 26 @ 
literal: 1  @ 2 @ literal: 2  @ 2 @ 
type  @ 5 @ type  @ 4 @ 
argument_list  @ 36 @ argument_list  @ 33 @ 
operator: -  @ 11 @ operator: -  @ 6 @ 
name: LUAI_MAXSHORTLEN  @ 27 @ name: LUAI_MAXSHORTLEN  @ 24 @ 
expr  @ 6 @ expr  @ 5 @ 
modifier: *  @ 17 @ modifier: *  @ 16 @ 
argument  @ 10 @ argument  @ 9 @ 
call  @ 7 @ call  @ 6 @ 
argument_list  @ 8 @ argument_list  @ 7 @ 
block  @ 21 @ block  @ 21 @ 
expr  @ 7 @ expr  @ 6 @ 
expr_stmt  @ 25 @ expr_stmt  @ 22 @ 
argument  @ 12 @ argument  @ 11 @ 
literal: 1  @ 20 @ literal: 1  @ 19 @ 
else  @ 14 @ else  @ 13 @ 
operator: <=  @ 27 @ operator: <=  @ 24 @ 
if_stmt  @ 7 @ if_stmt  @ 6 @ 
argument  @ 8 @ argument  @ 7 @ 
literal: 1  @ 39 @ literal: 1  @ 36 @ 
name: L  @ 7 @ name: L  @ 6 @ 
comment: /* long string; copy strings directly to final result */  @ 32 @ comment: /* long string; copy strings directly to final result */  @ 29 @ 
block  @ 10 @ block  @ 9 @ 
name: top  @ 7 @ name: top  @ 6 @ 
decl  @ 28 @ decl  @ 25 @ 
expr  @ 23 @ expr  @ 21 @ 
name: tl  @ 21 @ name: tl  @ 20 @ 
argument_list  @ 34 @ argument_list  @ 31 @ 
argument_list  @ 16 @ argument_list  @ 15 @ 
name: n  @ 29 @ name: n  @ 26 @ 
operator: -  @ 7 @ operator: -  @ 6 @ 
operator: <  @ 19 @ operator: <  @ 18 @ 
argument  @ 30 @ argument  @ 27 @ 
name: setobjs2s  @ 12 @ name: setobjs2s  @ 11 @ 
operator: ->  @ 5 @ operator: ->  @ 4 @ 
expr  @ 34 @ expr  @ 31 @ 
argument  @ 29 @ argument  @ 26 @ 
block_content  @ 28 @ block_content  @ 25 @ 
name: int  @ 1 @ name: int  @ 1 @ 
name: top  @ 11 @ name: top  @ 6 @ 
argument  @ 20 @ argument  @ 19 @ 
name  @ 28 @ name  @ 25 @ 
name: top  @ 7 @ name: top  @ 10 @ 
expr_stmt  @ 39 @ expr_stmt  @ 36 @ 
literal: 1  @ 12 @ literal: 1  @ 11 @ 
do  @ 4 @ do  @ 3 @ 
expr  @ 30 @ expr  @ 27 @ 
name: tl  @ 27 @ name: tl  @ 24 @ 
decl_stmt  @ 20 @ decl_stmt  @ 19 @ 
expr  @ 2 @ expr  @ 2 @ 
name: total  @ 38 @ name: total  @ 35 @ 
argument  @ 33 @ argument  @ 30 @ 
expr_stmt  @ 38 @ expr_stmt  @ 35 @ 
comment: /* is result a short string? */  @ 27 @ comment: /* is result a short string? */  @ 24 @ 
expr  @ 9 @ expr  @ 8 @ 
literal: 2  @ 6 @ literal: 2  @ 5 @ 
expr  @ 11 @ expr  @ 6 @ 
expr  @ 7 @ expr  @ 10 @ 
if  @ 21 @ if  @ 20 @ 
call  @ 30 @ call  @ 27 @ 
expr  @ 33 @ expr  @ 30 @ 
name: ts  @ 36 @ name: ts  @ 33 @ 
name: L  @ 10 @ name: L  @ 9 @ 
expr  @ 16 @ expr  @ 15 @ 
if  @ 7 @ if  @ 6 @ 
name: luaV_concat  @ 1 @ name: luaV_concat  @ 1 @ 
comment: /* collect total length and number of strings */  @ 18 @ comment: /* collect total length and number of strings */  @ 17 @ 
operator: ||  @ 7 @ operator: ||  @ 6 @ 
argument_list  @ 23 @ argument_list  @ 21 @ 
call  @ 9 @ call  @ 8 @ 
call  @ 34 @ call  @ 31 @ 
function  @ 1 @ function  @ 1 @ 
name: tostring  @ 7 @ name: tostring  @ 6 @ 
expr  @ 34 @ expr  @ 31 @ 
condition  @ 27 @ condition  @ 24 @ 
expr  @ 29 @ expr  @ 26 @ 
argument  @ 19 @ argument  @ 18 @ 
parameter  @ 1 @ parameter  @ 1 @ 
parameter_list  @ 1 @ parameter_list  @ 1 @ 
expr  @ 20 @ expr  @ 19 @ 
argument_list  @ 9 @ argument_list  @ 8 @ 
else  @ 32 @ else  @ 29 @ 
name: top  @ 34 @ name: top  @ 31 @ 
call  @ 23 @ call  @ 21 @ 
argument_list  @ 7 @ argument_list  @ 6 @ 
decl  @ 6 @ decl  @ 5 @ 
init  @ 5 @ init  @ 4 @ 
expr  @ 10 @ expr  @ 9 @ 
name  @ 39 @ name  @ 36 @ 
name: total  @ 19 @ name: total  @ 18 @ 
name: total  @ 40 @ name: total  @ 37 @ 
operator: ==  @ 2 @ operator: >=  @ 2 @ 
type  @ 1 @ type  @ 1 @ 
name: cast_void  @ 10 @ name: cast_void  @ 9 @ 
expr  @ 8 @ expr  @ 7 @ 
argument  @ 34 @ argument  @ 31 @ 
expr  @ 12 @ expr  @ 11 @ 
expr  @ 10 @ expr  @ 9 @ 
name: L  @ 12 @ name: L  @ 11 @ 
expr_stmt  @ 36 @ expr_stmt  @ 33 @ 
argument  @ 19 @ argument  @ 18 @ 
name: top  @ 7 @ name: top  @ 6 @ 
name: top  @ 19 @ name: top  @ 18 @ 
type  @ 17 @ type  @ 16 @ 
argument_list  @ 10 @ argument_list  @ 9 @ 
block  @ 1 @ block  @ 1 @ 
expr  @ 34 @ expr  @ 31 @ 
name: top  @ 12 @ name: top  @ 11 @ 
name: L  @ 39 @ name: L  @ 36 @ 
name: ts  @ 33 @ name: ts  @ 30 @ 
call  @ 29 @ call  @ 26 @ 
argument_list  @ 7 @ argument_list  @ 10 @ 
argument  @ 12 @ argument  @ 11 @ 
name: l  @ 20 @ name: l  @ 19 @ 
if  @ 27 @ if  @ 24 @ 
literal: 1  @ 16 @ literal: 1  @ 15 @ 
operator: ++  @ 19 @ operator: ++  @ 18 @ 
argument  @ 10 @ argument  @ 9 @ 
name: top  @ 16 @ name: top  @ 15 @ 
expr  @ 7 @ expr  @ 6 @ 
argument_list  @ 19 @ argument_list  @ 18 @ 
name: top  @ 29 @ name: top  @ 26 @ 
for  @ 19 @ for  @ 18 @ 
type  @ 16 @ type  @ 15 @ 
name: top  @ 39 @ name: top  @ 36 @ 
call  @ 34 @ call  @ 31 @ 
name: LUAI_MAXSHORTLEN  @ 28 @ name: LUAI_MAXSHORTLEN  @ 25 @ 
argument  @ 29 @ argument  @ 26 @ 
comment: /* at least two non-empty string values; get as many as possible */  @ 15 @ comment: /* at least two non-empty string values; get as many as possible */  @ 14 @ 
block  @ 8 @ block  @ 7 @ 
operator: ||  @ 7 @ operator: ||  @ 6 @ 
argument  @ 34 @ argument  @ 31 @ 

