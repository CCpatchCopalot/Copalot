{
    "testcase": {
        "file14": {
            "match_message": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "Edit": "add",
                        "L1": "10 -> 22",
                        "L2": "11 -> 23",
                        "debug": {
                            "runtime info": "True,{'state': 'success', 'type': 'cpp:include', 'info': ['precise context mattch']}",
                            "verify location": "-1",
                            "output location": "22",
                            "verify result": "False"
                        },
                        "type": "cpp:include",
                        "raw_match_info": {
                            "state": "success",
                            "type": "cpp:include",
                            "info": [
                                "precise context mattch"
                            ]
                        }
                    }
                },
                "Same: tensorflow -> tensorflow": {
                    "Seg_1": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 49 -> 96",
                        "L2": "3: Unique Matched by Source code 50 -> 97"
                    },
                    "Seg_2": {
                        "Edit": "add",
                        "L1": "6: Matched by Text Context Similarity from Source Code 62->90",
                        "L2": "6: Matched by Text Context Similarity from Source Code 63->91"
                    },
                    "Seg_3": {
                        "Edit": "change",
                        "L1": "7: Context line (Ignored) is empty or comment 73",
                        "L2": "3: Unique Matched by Source code 77 -> 135"
                    }
                },
                "Syntax: RunOnce -> tensorflow": {
                    "Seg_4": {
                        "Edit": "change",
                        "L1": "3: Unique Matched by Source code 101 -> 166",
                        "L2": "3: Unique Matched by Source code 103 -> 168"
                    }
                }
            },
            "verify_message": {},
            "prepare_info": [
                [
                    "Seg_0",
                    {
                        "Edit": "add",
                        "add_location": 22,
                        "add_hunk": [
                            "#include \"tensorflow/core/framework/function.pb.h\"\n"
                        ]
                    }
                ],
                [
                    "Seg_2",
                    {
                        "Edit": "add",
                        "add_location": 90,
                        "add_hunk": [
                            "    return Status::OK();\n",
                            "  }\n",
                            "static Status ValidateSavedTensors(const GraphDef& graph_def) {\n",
                            "  for (const auto& node : graph_def.node()) {\n",
                            "    TF_RETURN_IF_ERROR(ValidateNode(node));\n",
                            "  }\n",
                            "  if (graph_def.has_library()) {\n",
                            "    const FunctionDefLibrary& library = graph_def.library();\n",
                            "    for (const auto& function : library.function()) {for (const auto& node : function.node_def()) {\n",
                            "        TF_RETURN_IF_ERROR(ValidateNode(node));\n",
                            "      }\n",
                            "    }\n"
                        ]
                    }
                ],
                [
                    "Seg_1",
                    {
                        "Edit": "change",
                        "add_location": 96,
                        "add_hunk": [
                            "static Status ValidateNode(const NodeDef& node) {\n"
                        ],
                        "delete_location": [
                            96,
                            97
                        ],
                        "delete_hunk": [
                            "static Status ValidateSavedTensors(const GraphDef& graph_def) {\n",
                            "  for (const auto& node : graph_def.node()) {\n"
                        ]
                    }
                ],
                [
                    "Seg_3",
                    {
                        "Edit": "change",
                        "add_location": 134,
                        "add_hunk": [],
                        "delete_location": [
                            132,
                            135
                        ],
                        "delete_hunk": [
                            "  if (asset_file_defs.empty()) {\n",
                            "    return;\n",
                            "  }\n",
                            "  for (auto& asset_file_def : asset_file_defs) {\n"
                        ]
                    }
                ],
                [
                    "Seg_4",
                    {
                        "Edit": "change",
                        "add_location": 166,
                        "add_hunk": [
                            "  std::vector<Tensor> feed_tensors;*callable_options.mutable_run_options() = run_options;for (const auto& input : inputs) {\n"
                        ],
                        "delete_location": [
                            166,
                            168
                        ],
                        "delete_hunk": [
                            "  std::vector<Tensor> feed_tensors;\n",
                            "  *callable_options.mutable_run_options() = run_options;\n",
                            "  for (const auto& input : inputs) {\n"
                        ]
                    }
                ]
            ],
            "semanic_check": {
                "Coarse:[Pa_Macro_Definition]||[Pc_Macro_Definition]": {
                    "Seg_0": {
                        "type": "out func",
                        "state": "success",
                        "info": "cpp:include"
                    }
                },
                "Same: tensorflow -> tensorflow": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                },
                "Syntax: RunOnce -> tensorflow": {
                    "PDG_Mapping": "PDG Mapping Failed: Cannot load pdg dot file from pb and pc"
                }
            },
            "verify_patch": null,
            "patch_types": [
                "function_definition",
                "outside"
            ]
        }
    }
}