operator: +  @ 80 @ operator: +  @ 105 @ 
name: separator_  @ 126 @ name: separator_  @ 163 @ 
name: splits_vec  @ 80 @ name: splits_vec  @ 105 @ 
expr  @ 98 @ expr  @ 135 @ 
operator: .  @ 53 @ operator: .  @ 66 @ 
name: i  @ 76 @ name: i  @ 100 @ 
name: data_start_index  @ 104 @ name: data_start_index  @ 141 @ 
argument  @ 44 @ argument  @ 55 @ 
name: pad_width  @ 25 @ name: pad_width  @ 28 @ 
expr  @ 112 @ expr  @ 149 @ 
name: context  @ 35 @ name: context  @ 38 @ 
init  @ 90 @ init  @ 126 @ 
operator: ::  @ 100 @ operator: ::  @ 137 @ 
argument  @ 24 @ argument  @ 27 @ 
expr  @ 126 @ expr  @ 163 @ 
operator: .  @ 32 @ operator: .  @ 35 @ 
argument_list  @ 100 @ argument_list  @ 137 @ 
block  @ 76 @ block  @ 100 @ 
argument  @ 10 @ argument  @ 11 @ 
name: max  @ 26 @ name: max  @ 29 @ 
operator: -  @ 64 @ operator: -  @ 83 @ 
literal: 1  @ 47 @ literal: "Last split value must be data size. Expected "  @ 61 @ 
name: int  @ 124 @ name: int  @ 161 @ 
expr  @ 13 @ expr  @ 14 @ 
literal: 0  @ 57 @ literal: 0  @ 81 @ 
expr  @ 71 @ expr  @ 90 @ 
name: context  @ 55 @ name: context  @ 68 @ 
name: separator_  @ 144 @ name: separator_  @ 199 @ 
literal: 1  @ 49 @ literal: 1  @ 78 @ 
init  @ 76 @ init  @ 100 @ 
name: data  @ 39 @ name: data  @ 43 @ 
name: ngram_index  @ 98 @ name: ngram_index  @ 135 @ 
argument  @ 102 @ argument  @ 139 @ 
control  @ 41 @ control  @ 50 @ 
literal: 0  @ 104 @ literal: 0  @ 141 @ 
argument_list  @ 77 @ argument_list  @ 101 @ 
name  @ 126 @ name  @ 163 @ 
expr_stmt  @ 54 @ expr_stmt  @ 67 @ 
init  @ 100 @ init  @ 137 @ 
name: valid_splits  @ 43 @ name: valid_splits  @ 52 @ 
expr_stmt  @ 119 @ expr_stmt  @ 156 @ 
operator: ->  @ 9 @ operator: ->  @ 10 @ 
call  @ 10 @ call  @ 11 @ 
expr  @ 65 @ expr  @ 84 @ 
name: ngram_size  @ 113 @ name: ngram_size  @ 150 @ 
argument  @ 35 @ argument  @ 38 @ 
name  @ 57 @ name  @ 115 @ 
call  @ 76 @ call  @ 98 @ 
name: splits  @ 34 @ name: splits  @ 37 @ 
literal: "]"  @ 44 @ literal: "]"  @ 56 @ 
decl  @ 76 @ decl  @ 100 @ 
name: OP_REQUIRES  @ 44 @ name: OP_REQUIRES  @ 53 @ 
name  @ 9 @ name  @ 10 @ 
expr  @ 53 @ expr  @ 66 @ 
decl_stmt  @ 99 @ decl_stmt  @ 136 @ 
call  @ 13 @ call  @ 14 @ 
expr  @ 133 @ expr  @ 177 @ 
name: splits  @ 35 @ name: splits  @ 38 @ 
expr  @ 14 @ expr  @ 15 @ 
operator: <  @ 133 @ operator: <  @ 177 @ 
operator: &  @ 32 @ operator: &  @ 35 @ 
expr  @ 12 @ expr  @ 13 @ 
name: right_padding  @ 101 @ name: right_padding  @ 138 @ 
call  @ 67 @ call  @ 86 @ 
operator: )  @ 102 @ operator: )  @ 139 @ 
expr  @ 90 @ expr  @ 126 @ 
argument  @ 82 @ argument  @ 107 @ 
expr_stmt  @ 116 @ expr_stmt  @ 153 @ 
expr  @ 31 @ expr  @ 34 @ 
operator: ::  @ 30 @ operator: ::  @ 33 @ 
type  @ 42 @ type  @ 51 @ 
expr  @ 100 @ expr  @ 137 @ 
name: append  @ 135 @ name: append  @ 179 @ 
operator: +  @ 113 @ operator: +  @ 150 @ 
expr  @ 42 @ expr  @ 51 @ 
expr  @ 129 @ expr  @ 167 @ 
argument_list  @ 10 @ argument_list  @ 11 @ 
name: size  @ 40 @ name: size  @ 44 @ 
block  @ 41 @ block  @ 50 @ 
macro  @ 29 @ macro  @ 32 @ 
name: GetAttr  @ 11 @ name: GetAttr  @ 12 @ 
expr  @ 77 @ expr  @ 101 @ 
argument_list  @ 40 @ argument_list  @ 44 @ 
expr  @ 11 @ expr  @ 12 @ 
init  @ 101 @ init  @ 138 @ 
expr  @ 78 @ expr  @ 103 @ 
name: separator_  @ 9 @ name: separator_  @ 10 @ 
comment: // If we're preserving short sequences, check to see if no sequence was// generated by comparing the current output start idx to the original// one (ngram_splits_data). If no ngrams were generated, then they will// be equal (since we increment output_start_idx by num_ngrams every// time we create a set of ngrams.)if (preserve_short_&&output_start_idx == ngrams_splits_data[i]) {int data_length = splits_vec(i + 1) - splits_vec(i);// One legitimate reason to not have any ngrams when preserve_short_// is true is if the sequence itself is empty. In that case, move on.if (data_length == 0) {  @ 83 @ comment: // If we're preserving short sequences, check to see if no sequence was  @ 110 @ 
call  @ 26 @ call  @ 29 @ 
name: int  @ 101 @ name: int  @ 138 @ 
argument_list  @ 9 @ argument_list  @ 10 @ 
init  @ 81 @ init  @ 106 @ 
operator: ->  @ 132 @ operator: ->  @ 176 @ 
expr  @ 112 @ expr  @ 149 @ 
name: right_pad_  @ 135 @ name: right_pad_  @ 179 @ 
literal: 0  @ 112 @ literal: 0  @ 149 @ 
expr  @ 83 @ expr  @ 108 @ 
name: right_padding  @ 103 @ name: right_padding  @ 140 @ 
name: splits_vec_size  @ 40 @ name: splits_vec_size  @ 44 @ 
expr  @ 102 @ expr  @ 139 @ 
name: int  @ 100 @ name: int  @ 137 @ 
init  @ 122 @ init  @ 159 @ 
name: int  @ 97 @ name: int  @ 134 @ 
argument_list  @ 130 @ argument_list  @ 168 @ 
init  @ 41 @ init  @ 50 @ 
block_content  @ 98 @ block_content  @ 135 @ 
expr_stmt  @ 82 @ expr_stmt  @ 107 @ 
expr  @ 26 @ expr  @ 29 @ 
argument  @ 24 @ argument  @ 27 @ 
operator: *  @ 74 @ operator: *  @ 93 @ 
type  @ 76 @ type  @ 98 @ 
operator: (  @ 26 @ operator: (  @ 29 @ 
name: allocate_output  @ 49 @ name: allocate_output  @ 78 @ 
name: n  @ 124 @ name: n  @ 161 @ 
name: context  @ 14 @ name: context  @ 15 @ 
init  @ 112 @ init  @ 149 @ 
name: output  @ 122 @ name: output  @ 159 @ 
call  @ 39 @ call  @ 43 @ 
operator: <=  @ 43 @ operator: <=  @ 52 @ 
expr  @ 110 @ expr  @ 147 @ 
argument  @ 97 @ argument  @ 133 @ 
specifier: const  @ 97 @ specifier: const  @ 133 @ 
name: OP_REQUIRES_OK  @ 31 @ name: OP_REQUIRES_OK  @ 34 @ 
name: context  @ 31 @ name: context  @ 34 @ 
call  @ 53 @ call  @ 66 @ 
literal: 0  @ 65 @ literal: 0  @ 84 @ 
operator: *  @ 7 @ operator: *  @ 8 @ 
call  @ 25 @ call  @ 28 @ 
literal: 0  @ 68 @ literal: 0  @ 87 @ 
argument_list  @ 13 @ argument_list  @ 14 @ 
operator: +  @ 118 @ operator: +  @ 155 @ 
call  @ 123 @ call  @ 160 @ 
decl  @ 89 @ decl  @ 125 @ 
condition  @ 104 @ condition  @ 141 @ 
expr  @ 56 @ expr  @ 71 @ 
name: data_start_index  @ 132 @ name: data_start_index  @ 176 @ 
decl_stmt  @ 42 @ decl_stmt  @ 51 @ 
expr  @ 116 @ expr  @ 153 @ 
expr  @ 26 @ expr  @ 29 @ 
operator: <  @ 98 @ operator: <  @ 135 @ 
name: input_data  @ 32 @ name: input_data  @ 35 @ 
literal: 1  @ 118 @ literal: 1  @ 155 @ 
for  @ 128 @ for  @ 166 @ 
operator: -  @ 132 @ operator: -  @ 176 @ 
operator: .  @ 116 @ operator: .  @ 153 @ 
operator: <=  @ 63 @ operator: <=  @ 82 @ 
name: length  @ 116 @ name: length  @ 153 @ 
operator: ::  @ 151 @ operator: ::  @ 206 @ 
name  @ 5 @ name  @ 5 @ 
name: GetAttr  @ 14 @ name: GetAttr  @ 15 @ 
expr  @ 11 @ expr  @ 12 @ 
expr  @ 98 @ expr  @ 135 @ 
operator: -  @ 64 @ operator: -  @ 83 @ 
macro  @ 75 @ macro  @ 94 @ 
name: GetAttr  @ 12 @ name: GetAttr  @ 13 @ 
expr  @ 80 @ expr  @ 105 @ 
name: n  @ 128 @ name: n  @ 166 @ 
argument_list  @ 26 @ argument_list  @ 29 @ 
name: OP_REQUIRES_OK  @ 9 @ name: OP_REQUIRES_OK  @ 10 @ 
expr  @ 55 @ expr  @ 68 @ 
operator: ->  @ 76 @ operator: ->  @ 98 @ 
argument  @ 13 @ argument  @ 14 @ 
operator: >=  @ 42 @ operator: >=  @ 51 @ 
name: int  @ 81 @ name: int  @ 106 @ 
operator: (  @ 43 @ operator: (  @ 52 @ 
operator: ++  @ 63 @ operator: ++  @ 82 @ 
incr  @ 76 @ incr  @ 100 @ 
literal: "left_pad"  @ 11 @ literal: "left_pad"  @ 12 @ 
expr_stmt  @ 126 @ expr_stmt  @ 163 @ 
call  @ 44 @ call  @ 54 @ 
name: context  @ 13 @ name: context  @ 14 @ 
literal: "pad_width"  @ 13 @ literal: "pad_width"  @ 14 @ 
expr  @ 63 @ expr  @ 82 @ 
name: CreateNgrams  @ 82 @ name: CreateNgrams  @ 107 @ 
name: size  @ 39 @ name: size  @ 43 @ 
operator: ++  @ 133 @ operator: ++  @ 177 @ 
init  @ 108 @ init  @ 145 @ 
operator: +=  @ 67 @ operator: +=  @ 86 @ 
name: reserve  @ 123 @ name: reserve  @ 160 @ 
name: int  @ 108 @ name: int  @ 145 @ 
name: OP_REQUIRES_OK  @ 35 @ name: OP_REQUIRES_OK  @ 38 @ 
name: int  @ 99 @ name: int  @ 136 @ 
expr  @ 112 @ expr  @ 149 @ 
operator: +=  @ 110 @ operator: +=  @ 147 @ 
type  @ 76 @ type  @ 100 @ 
name: bool  @ 149 @ name: bool  @ 204 @ 
operator: ->  @ 140 @ operator: ->  @ 195 @ 
operator: ->  @ 126 @ operator: ->  @ 163 @ 
init  @ 56 @ init  @ 186 @ 
argument  @ 29 @ argument  @ 32 @ 
expr  @ 56 @ expr  @ 71 @ 
expr  @ 91 @ expr  @ 127 @ 
decl_stmt  @ 76 @ decl_stmt  @ 98 @ 
decl  @ 148 @ decl  @ 203 @ 
init  @ 124 @ init  @ 161 @ 
expr  @ 32 @ expr  @ 35 @ 
name: data  @ 132 @ name: data  @ 176 @ 
name: OpKernel  @ 8 @ name: OpKernel  @ 9 @ 
expr_stmt  @ 83 @ expr_stmt  @ 108 @ 
operator: .  @ 76 @ operator: .  @ 98 @ 
name: left_padding  @ 118 @ name: left_padding  @ 155 @ 
name: int  @ 25 @ name: int  @ 28 @ 
index  @ 122 @ index  @ 159 @ 
name: data  @ 113 @ name: data  @ 150 @ 
expr  @ 128 @ expr  @ 166 @ 
operator: +  @ 132 @ operator: +  @ 176 @ 
expr  @ 9 @ expr  @ 10 @ 
expr  @ 49 @ expr  @ 78 @ 
expr  @ 64 @ expr  @ 83 @ 
name: splits_vec  @ 80 @ name: splits_vec  @ 105 @ 
call  @ 40 @ call  @ 44 @ 
comment: // Size of the left padding.  @ 109 @ comment: // Size of the left padding.  @ 146 @ 
expr_stmt  @ 92 @ expr_stmt  @ 128 @ 
decl_stmt  @ 90 @ decl_stmt  @ 126 @ 
expr  @ 44 @ expr  @ 53 @ 
comment: // Validate that the splits are valid indices into data  @ 38 @ comment: // Validate that the splits are valid indices into data, only if there are  @ 41 @ 
name: data  @ 55 @ name: data  @ 69 @ 
decl  @ 63 @ decl  @ 82 @ 
init  @ 89 @ init  @ 125 @ 
expr  @ 81 @ expr  @ 106 @ 
argument_list  @ 113 @ argument_list  @ 150 @ 
operator: +  @ 71 @ operator: +  @ 90 @ 
expr  @ 81 @ expr  @ 106 @ 
decl  @ 147 @ decl  @ 202 @ 
literal: 2  @ 89 @ literal: 2  @ 125 @ 
expr  @ 151 @ expr  @ 206 @ 
name: ngram_index  @ 100 @ name: ngram_index  @ 137 @ 
call  @ 64 @ call  @ 83 @ 
name: int  @ 128 @ name: int  @ 166 @ 
argument  @ 102 @ argument  @ 139 @ 
operator: )  @ 53 @ operator: )  @ 66 @ 
expr_stmt  @ 44 @ expr_stmt  @ 53 @ 
decl_stmt  @ 152 @ decl_stmt  @ 207 @ 
name: shape  @ 49 @ name: shape  @ 78 @ 
argument  @ 80 @ argument  @ 105 @ 
name: CreateNgrams  @ 92 @ name: CreateNgrams  @ 128 @ 
name: tstring  @ 39 @ name: tstring  @ 43 @ 
argument_list  @ 151 @ argument_list  @ 206 @ 
comment: // ever be wider than 'ngram_width' - 1.  @ 20 @ comment: // ever be wider than 'ngram_width' - 1.  @ 22 @ 
argument  @ 64 @ argument  @ 83 @ 
name: num_ngrams  @ 69 @ name: num_ngrams  @ 88 @ 
name: context  @ 7 @ name: context  @ 8 @ 
name: preserve_short_  @ 149 @ name: preserve_short_  @ 204 @ 
decl  @ 56 @ decl  @ 186 @ 
expr  @ 97 @ expr  @ 133 @ 
init  @ 63 @ init  @ 82 @ 
name: context  @ 11 @ name: context  @ 12 @ 
expr_stmt  @ 130 @ expr_stmt  @ 168 @ 
decl_stmt  @ 122 @ decl_stmt  @ 159 @ 
expr  @ 44 @ expr  @ 54 @ 
call  @ 49 @ call  @ 78 @ 
name: append  @ 125 @ name: append  @ 162 @ 
name: OP_REQUIRES_OK  @ 12 @ name: OP_REQUIRES_OK  @ 13 @ 
block  @ 8 @ block  @ 9 @ 
argument  @ 97 @ argument  @ 133 @ 
expr  @ 74 @ expr  @ 93 @ 
name: data_start_index  @ 129 @ name: data_start_index  @ 167 @ 
if_stmt  @ 53 @ if_stmt  @ 66 @ 
argument  @ 55 @ argument  @ 68 @ 
name: OpKernelConstruction  @ 7 @ name: OpKernelConstruction  @ 8 @ 
name: data  @ 50 @ name: data  @ 79 @ 
name: output_start  @ 90 @ name: output_start  @ 126 @ 
operator: (  @ 102 @ operator: (  @ 139 @ 
name: get_pad_width  @ 17 @ name: get_pad_width  @ 19 @ 
operator: =  @ 32 @ operator: =  @ 35 @ 
argument  @ 67 @ argument  @ 86 @ 
name: ngram_width  @ 97 @ name: ngram_width  @ 134 @ 
decl  @ 149 @ decl  @ 204 @ 
expr  @ 11 @ expr  @ 12 @ 
init  @ 65 @ init  @ 84 @ 
decl  @ 78 @ decl  @ 102 @ 
init  @ 112 @ init  @ 149 @ 
literal: "right_pad"  @ 12 @ literal: "right_pad"  @ 13 @ 
name: length  @ 110 @ name: length  @ 147 @ 
expr  @ 128 @ expr  @ 166 @ 
expr  @ 78 @ expr  @ 102 @ 
name: i  @ 41 @ name: i  @ 50 @ 
name: tensorflow  @ 74 @ name: tensorflow  @ 93 @ 
init  @ 98 @ init  @ 135 @ 
operator: +=  @ 83 @ operator: +=  @ 108 @ 
name: flat  @ 36 @ name: flat  @ 39 @ 
name: ngram_width  @ 81 @ name: ngram_width  @ 106 @ 
name: get_pad_width  @ 99 @ name: get_pad_width  @ 136 @ 
expr  @ 55 @ expr  @ 69 @ 
literal: 0  @ 53 @ literal: 0  @ 66 @ 
block_content  @ 4 @ block_content  @ 4 @ 
operator: (  @ 32 @ operator: (  @ 35 @ 
expr_stmt  @ 55 @ expr_stmt  @ 68 @ 
type  @ 148 @ type  @ 203 @ 
index  @ 113 @ index  @ 150 @ 
name: num_ngrams  @ 102 @ name: num_ngrams  @ 139 @ 
argument  @ 49 @ argument  @ 78 @ 
name: ngram_width  @ 89 @ name: ngram_width  @ 125 @ 
operator: ::  @ 21 @ operator: ::  @ 23 @ 
type  @ 64 @ type  @ 83 @ 
literal: 0  @ 100 @ literal: 0  @ 137 @ 
argument  @ 67 @ argument  @ 86 @ 
name: splits_vec  @ 40 @ name: splits_vec  @ 44 @ 
name: GetAttr  @ 10 @ name: GetAttr  @ 11 @ 
name: context  @ 49 @ name: context  @ 78 @ 
name: bool  @ 148 @ name: bool  @ 203 @ 
name: ngram_index  @ 102 @ name: ngram_index  @ 139 @ 
name: output  @ 97 @ name: output  @ 133 @ 
name: pad_width_  @ 89 @ name: pad_width_  @ 125 @ 
else  @ 104 @ else  @ 141 @ 
index  @ 77 @ index  @ 101 @ 
name: tstring  @ 76 @ name: tstring  @ 98 @ 
name: int  @ 40 @ name: int  @ 44 @ 
call  @ 102 @ call  @ 139 @ 
expr  @ 100 @ expr  @ 137 @ 
name: output_start_idx  @ 78 @ name: output_start_idx  @ 102 @ 
operator: ::  @ 48 @ operator: ::  @ 76 @ 
call  @ 80 @ call  @ 105 @ 
argument  @ 31 @ argument  @ 34 @ 
empty_stmt  @ 75 @ empty_stmt  @ 97 @ 
literal: 0  @ 133 @ literal: 0  @ 177 @ 
return  @ 21 @ return  @ 23 @ 
literal: 0  @ 76 @ literal: 0  @ 100 @ 
operator: <  @ 76 @ operator: <  @ 98 @ 
call  @ 134 @ call  @ 178 @ 
init  @ 104 @ init  @ 141 @ 
block_content  @ 5 @ block_content  @ 5 @ 
type  @ 91 @ type  @ 127 @ 
name: splits_vec  @ 64 @ name: splits_vec  @ 83 @ 
operator: &  @ 36 @ operator: &  @ 39 @ 
control  @ 133 @ control  @ 177 @ 
name  @ 14 @ name  @ 15 @ 
comment: // was dynamic, every sequence would have had sufficient padding to  @ 87 @ comment: // was dynamic, every sequence would have had sufficient padding to  @ 123 @ 
literal: 0  @ 108 @ literal: 0  @ 145 @ 
name: get_pad_width  @ 25 @ name: get_pad_width  @ 28 @ 
operator: *  @ 48 @ operator: *  @ 76 @ 
name: flat  @ 32 @ name: flat  @ 35 @ 
decl  @ 112 @ decl  @ 149 @ 
name: separator_  @ 134 @ name: separator_  @ 178 @ 
block  @ 124 @ block  @ 161 @ 
operator: ::  @ 5 @ operator: ::  @ 6 @ 
name: ngrams_data  @ 79 @ name: ngrams_data  @ 104 @ 
operator: +  @ 89 @ operator: +  @ 125 @ 
argument  @ 82 @ argument  @ 107 @ 
expr  @ 99 @ expr  @ 136 @ 
block  @ 98 @ block  @ 135 @ 
call  @ 9 @ call  @ 10 @ 
for  @ 98 @ for  @ 135 @ 
call  @ 140 @ call  @ 195 @ 
operator: )  @ 26 @ operator: )  @ 29 @ 
expr  @ 92 @ expr  @ 128 @ 
init  @ 78 @ init  @ 103 @ 
argument  @ 7 @ argument  @ 8 @ 
type  @ 124 @ type  @ 161 @ 
decl  @ 145 @ decl  @ 200 @ 
expr  @ 57 @ expr  @ 115 @ 
expr_stmt  @ 129 @ expr_stmt  @ 167 @ 
name: i  @ 71 @ name: i  @ 90 @ 
operator: &  @ 10 @ operator: &  @ 11 @ 
expr_stmt  @ 69 @ expr_stmt  @ 88 @ 
type  @ 144 @ type  @ 199 @ 
decl  @ 5 @ decl  @ 5 @ 
block_content  @ 42 @ block_content  @ 51 @ 
literal: 1  @ 102 @ literal: 1  @ 139 @ 
for  @ 63 @ for  @ 82 @ 
name: ngram  @ 122 @ name: ngram  @ 159 @ 
name: OP_REQUIRES_OK  @ 55 @ name: OP_REQUIRES_OK  @ 68 @ 
name  @ 140 @ name  @ 195 @ 
name  @ 35 @ name  @ 38 @ 
name  @ 53 @ name  @ 66 @ 
literal: 1  @ 63 @ literal: 1  @ 82 @ 
init  @ 79 @ init  @ 104 @ 
expr  @ 42 @ expr  @ 51 @ 
expr  @ 92 @ expr  @ 128 @ 
name: i  @ 76 @ name: i  @ 100 @ 
expr  @ 44 @ expr  @ 53 @ 
expr  @ 97 @ expr  @ 134 @ 
name: splits_vec  @ 43 @ name: splits_vec  @ 52 @ 
argument  @ 81 @ argument  @ 106 @ 
name: separator_  @ 119 @ name: separator_  @ 156 @ 
name: class  @ 5 @ name: class  @ 6 @ 
operator: -  @ 102 @ operator: -  @ 139 @ 
name: ngram_width  @ 103 @ name: ngram_width  @ 140 @ 
operator: ++  @ 128 @ operator: ++  @ 166 @ 
operator: <  @ 128 @ operator: <  @ 166 @ 
decl  @ 78 @ decl  @ 103 @ 
name: append  @ 130 @ name: append  @ 168 @ 
expr  @ 49 @ expr  @ 77 @ 
name: num_ngrams  @ 81 @ name: num_ngrams  @ 106 @ 
expr  @ 36 @ expr  @ 39 @ 
name  @ 135 @ name  @ 179 @ 
name: errors  @ 44 @ name: errors  @ 54 @ 
name: int  @ 78 @ name: int  @ 103 @ 
argument_list  @ 44 @ argument_list  @ 54 @ 
init  @ 41 @ init  @ 50 @ 
expr  @ 134 @ expr  @ 178 @ 
name: int  @ 104 @ name: int  @ 141 @ 
name: ngram_widths_  @ 66 @ name: ngram_widths_  @ 85 @ 
expr  @ 49 @ expr  @ 78 @ 
expr_stmt  @ 43 @ expr_stmt  @ 52 @ 
name: data  @ 31 @ name: data  @ 34 @ 
decl  @ 122 @ decl  @ 159 @ 
name: n  @ 129 @ name: n  @ 167 @ 
expr  @ 140 @ expr  @ 195 @ 
name: context  @ 55 @ name: context  @ 69 @ 
argument  @ 55 @ argument  @ 69 @ 
decl  @ 99 @ decl  @ 136 @ 
argument  @ 10 @ argument  @ 11 @ 
name: i  @ 63 @ name: i  @ 82 @ 
name: pad_width  @ 99 @ name: pad_width  @ 136 @ 
init  @ 128 @ init  @ 166 @ 
name: num_tokens  @ 103 @ name: num_tokens  @ 140 @ 
expr  @ 69 @ expr  @ 88 @ 
operator: ->  @ 13 @ operator: ->  @ 14 @ 
operator: ->  @ 135 @ operator: ->  @ 179 @ 
name: left_pad_  @ 125 @ name: left_pad_  @ 162 @ 
name  @ 132 @ name  @ 176 @ 
name: string  @ 146 @ name: string  @ 201 @ 
expr  @ 76 @ expr  @ 98 @ 
name: ngrams_data  @ 90 @ name: ngrams_data  @ 126 @ 
operator: >  @ 32 @ operator: >  @ 35 @ 
decl_stmt  @ 104 @ decl_stmt  @ 141 @ 
condition  @ 41 @ condition  @ 50 @ 
argument  @ 13 @ argument  @ 14 @ 
decl  @ 91 @ decl  @ 127 @ 
name: i  @ 41 @ name: i  @ 50 @ 
expr  @ 132 @ expr  @ 176 @ 
argument_list  @ 44 @ argument_list  @ 55 @ 
macro  @ 4 @ macro  @ 4 @ 
control  @ 66 @ control  @ 85 @ 
argument  @ 97 @ argument  @ 134 @ 
name: i  @ 76 @ name: i  @ 100 @ 
argument  @ 55 @ argument  @ 69 @ 
decl  @ 101 @ decl  @ 138 @ 
decl  @ 42 @ decl  @ 51 @ 
call  @ 125 @ call  @ 162 @ 
argument_list  @ 10 @ argument_list  @ 11 @ 
expr  @ 5 @ expr  @ 6 @ 
operator: +  @ 102 @ operator: +  @ 139 @ 
name: left_padding  @ 104 @ name: left_padding  @ 141 @ 
name: extend_pad_  @ 148 @ name: extend_pad_  @ 203 @ 
init  @ 63 @ init  @ 82 @ 
literal: 1  @ 132 @ literal: 1  @ 176 @ 
decl_stmt  @ 100 @ decl_stmt  @ 137 @ 
name: n  @ 112 @ name: n  @ 149 @ 
operator: =  @ 43 @ operator: =  @ 52 @ 
name: ngram_width  @ 21 @ name: ngram_width  @ 24 @ 
for  @ 66 @ for  @ 85 @ 
name: int  @ 133 @ name: int  @ 177 @ 
literal: 1  @ 80 @ literal: 1  @ 105 @ 
name: num_ngrams  @ 91 @ name: num_ngrams  @ 127 @ 
operator: ->  @ 53 @ operator: ->  @ 66 @ 
expr  @ 56 @ expr  @ 186 @ 
expr  @ 76 @ expr  @ 100 @ 
name  @ 55 @ name  @ 69 @ 
name  @ 122 @ name  @ 159 @ 
argument  @ 44 @ argument  @ 55 @ 
operator: *  @ 54 @ operator: *  @ 67 @ 
name: left_padding  @ 124 @ name: left_padding  @ 161 @ 
name: int  @ 151 @ name: int  @ 206 @ 
expr  @ 41 @ expr  @ 50 @ 
expr  @ 31 @ expr  @ 34 @ 
expr  @ 132 @ expr  @ 176 @ 
expr  @ 10 @ expr  @ 11 @ 
name: empty  @ 55 @ name: empty  @ 69 @ 
call  @ 140 @ call  @ 195 @ 
name: ngram_size  @ 108 @ name: ngram_size  @ 145 @ 
operator: .  @ 53 @ operator: .  @ 66 @ 
decl_stmt  @ 149 @ decl_stmt  @ 204 @ 
operator: -  @ 71 @ operator: -  @ 90 @ 
name: left_padding  @ 100 @ name: left_padding  @ 137 @ 
block  @ 67 @ block  @ 86 @ 
decl_stmt  @ 103 @ decl_stmt  @ 140 @ 
name: std  @ 100 @ name: std  @ 137 @ 
name: n  @ 112 @ name: n  @ 149 @ 
name  @ 123 @ name  @ 160 @ 
operator: ::  @ 102 @ operator: ::  @ 139 @ 
name: std  @ 102 @ name: std  @ 139 @ 
argument  @ 26 @ argument  @ 29 @ 
comment: // In debug mode only: validate that we've reserved enough space for the  @ 138 @ comment: // In debug mode only: validate that we've reserved enough space for the  @ 193 @ 
name: pad_width_  @ 152 @ name: pad_width_  @ 207 @ 
comment: // ngram.  @ 139 @ comment: // ngram.  @ 194 @ 
expr_stmt  @ 132 @ expr_stmt  @ 176 @ 
literal: 0  @ 68 @ literal: 0  @ 87 @ 
name: Tensor  @ 48 @ name: Tensor  @ 76 @ 
operator: <  @ 21 @ operator: <  @ 23 @ 
expr  @ 123 @ expr  @ 160 @ 
argument_list  @ 53 @ argument_list  @ 66 @ 
macro  @ 24 @ macro  @ 27 @ 
operator: <  @ 53 @ operator: <  @ 66 @ 
name: int  @ 103 @ name: int  @ 140 @ 
call  @ 12 @ call  @ 13 @ 
operator: )  @ 102 @ operator: )  @ 139 @ 
decl_stmt  @ 64 @ decl_stmt  @ 83 @ 
name: ngram_width  @ 99 @ name: ngram_width  @ 136 @ 
name: pad_width_  @ 21 @ name: pad_width_  @ 23 @ 
argument  @ 35 @ argument  @ 38 @ 
init  @ 77 @ init  @ 101 @ 
operator: =  @ 57 @ operator: =  @ 81 @ 
name: i  @ 63 @ name: i  @ 82 @ 
name: tensorflow  @ 1 @ name: tensorflow  @ 1 @ 
expr  @ 81 @ expr  @ 106 @ 
operator: ++  @ 76 @ operator: ++  @ 100 @ 
name: tstring  @ 97 @ name: tstring  @ 133 @ 
expr  @ 68 @ expr  @ 87 @ 
decl_stmt  @ 145 @ decl_stmt  @ 200 @ 
operator: :  @ 21 @ operator: :  @ 23 @ 
expr  @ 21 @ expr  @ 24 @ 
name: i  @ 56 @ name: empty  @ 71 @ 
type  @ 99 @ type  @ 136 @ 
name: i  @ 71 @ name: i  @ 90 @ 
expr  @ 9 @ expr  @ 10 @ 
operator: ->  @ 129 @ operator: ->  @ 167 @ 
name: ngrams_splits  @ 49 @ name: ngrams_splits  @ 78 @ 
operator: >  @ 39 @ operator: >  @ 43 @ 
expr  @ 10 @ expr  @ 11 @ 
argument_list  @ 12 @ argument_list  @ 13 @ 
name: i  @ 41 @ name: i  @ 50 @ 
name: auto  @ 77 @ name: auto  @ 101 @ 
literal: 1  @ 69 @ literal: 1  @ 88 @ 
name: template  @ 5 @ name: template  @ 5 @ 
operator: <=  @ 56 @ operator: ->  @ 71 @ 
expr_stmt  @ 57 @ expr_stmt  @ 1 @ 
name: data  @ 32 @ name: data  @ 35 @ 
argument_list  @ 110 @ argument_list  @ 147 @ 
name: tensorflow  @ 34 @ name: tensorflow  @ 37 @ 
expr  @ 13 @ expr  @ 14 @ 
operator: <  @ 36 @ operator: <  @ 39 @ 
comment: // Build the ngram.  @ 121 @ comment: // Build the ngram.  @ 158 @ 
operator: >  @ 36 @ operator: >  @ 39 @ 
call  @ 113 @ call  @ 150 @ 
type  @ 104 @ type  @ 141 @ 
name: data  @ 76 @ name: data  @ 98 @ 
argument  @ 11 @ argument  @ 12 @ 
operator: .  @ 113 @ operator: .  @ 150 @ 
decl_stmt  @ 2 @ decl_stmt  @ 2 @ 
name: ngram_size  @ 110 @ name: ngram_size  @ 147 @ 
argument  @ 44 @ argument  @ 54 @ 
name: i  @ 56 @ name: splits  @ 71 @ 
operator: ::  @ 26 @ operator: ::  @ 29 @ 
name: output_start_idx  @ 83 @ name: output_start_idx  @ 108 @ 
for  @ 76 @ for  @ 100 @ 
name: Tensor  @ 30 @ name: Tensor  @ 33 @ 
name: left_pad_  @ 11 @ name: left_pad_  @ 12 @ 
name  @ 39 @ name  @ 43 @ 
control  @ 128 @ control  @ 166 @ 
block  @ 63 @ block  @ 82 @ 
operator: ==  @ 53 @ operator: ==  @ 66 @ 
name: int  @ 41 @ name: int  @ 46 @ 
argument_list  @ 32 @ argument_list  @ 35 @ 
operator: *  @ 34 @ operator: *  @ 37 @ 
name: min  @ 21 @ name: min  @ 23 @ 
name: append  @ 126 @ name: append  @ 163 @ 
operator: ||  @ 53 @ operator: ||  @ 66 @ 
expr  @ 129 @ expr  @ 167 @ 
expr  @ 113 @ expr  @ 150 @ 
init  @ 124 @ init  @ 161 @ 
name: int  @ 98 @ name: int  @ 135 @ 
name: splits  @ 49 @ name: splits  @ 78 @ 
name: context  @ 14 @ name: context  @ 15 @ 
operator: *  @ 110 @ operator: *  @ 147 @ 
literal: 0  @ 98 @ literal: 0  @ 135 @ 
name: num_batch_items  @ 76 @ name: num_batch_items  @ 100 @ 
expr  @ 5 @ expr  @ 5 @ 
operator: =  @ 25 @ operator: =  @ 28 @ 
name: ngram_widths_  @ 10 @ name: ngram_widths_  @ 11 @ 
type  @ 103 @ type  @ 140 @ 
name  @ 132 @ name  @ 176 @ 
argument_list  @ 125 @ argument_list  @ 162 @ 
name: namespace  @ 1 @ name: namespace  @ 1 @ 
operator: &  @ 12 @ operator: &  @ 13 @ 
expr_stmt  @ 135 @ expr_stmt  @ 179 @ 
argument  @ 26 @ argument  @ 29 @ 
name: i  @ 77 @ name: i  @ 101 @ 
expr  @ 119 @ expr  @ 156 @ 
expr  @ 57 @ expr  @ 115 @ 
argument  @ 49 @ argument  @ 78 @ 
name: ngram  @ 123 @ name: ngram  @ 160 @ 
expr  @ 12 @ expr  @ 13 @ 
name: OP_REQUIRES_OK  @ 49 @ name: OP_REQUIRES_OK  @ 77 @ 
name: StringNGramsOp  @ 5 @ name: StringNGramsOp  @ 6 @ 
expr_stmt  @ 110 @ expr_stmt  @ 147 @ 
operator: =  @ 69 @ operator: =  @ 88 @ 
index  @ 71 @ index  @ 90 @ 
argument  @ 44 @ argument  @ 55 @ 
argument  @ 21 @ argument  @ 24 @ 
operator: ::  @ 44 @ operator: ::  @ 54 @ 
argument_list  @ 49 @ argument_list  @ 77 @ 
name: i  @ 56 @ name: n  @ 186 @ 
type  @ 149 @ type  @ 204 @ 
name: splits_vec  @ 64 @ name: splits_vec  @ 83 @ 
block_content  @ 129 @ block_content  @ 167 @ 
argument  @ 31 @ argument  @ 34 @ 
operator: )  @ 26 @ operator: )  @ 29 @ 
call  @ 80 @ call  @ 105 @ 
operator: *  @ 119 @ operator: *  @ 156 @ 
expr  @ 13 @ expr  @ 14 @ 
operator: -  @ 21 @ operator: -  @ 24 @ 
name: ngram_width  @ 78 @ name: ngram_width  @ 103 @ 
incr  @ 133 @ incr  @ 177 @ 
operator: ::  @ 74 @ operator: ::  @ 93 @ 
name: context  @ 9 @ name: context  @ 10 @ 
expr  @ 10 @ expr  @ 11 @ 
expr_stmt  @ 140 @ expr_stmt  @ 195 @ 
name: tensorflow  @ 7 @ name: tensorflow  @ 8 @ 
block  @ 133 @ block  @ 177 @ 
expr_stmt  @ 67 @ expr_stmt  @ 86 @ 
expr  @ 21 @ expr  @ 23 @ 
decl  @ 98 @ decl  @ 135 @ 
expr  @ 76 @ expr  @ 100 @ 
name: valid_splits  @ 44 @ name: valid_splits  @ 53 @ 
name: length  @ 119 @ name: length  @ 156 @ 
literal: 0  @ 124 @ literal: 0  @ 161 @ 
literal: "Invalid split value "  @ 44 @ literal: "Invalid split value "  @ 55 @ 
argument_list  @ 25 @ argument_list  @ 28 @ 
call  @ 11 @ call  @ 12 @ 
operator: <  @ 39 @ operator: <  @ 43 @ 
argument  @ 75 @ argument  @ 96 @ 
name: int  @ 65 @ name: int  @ 84 @ 
argument_list  @ 102 @ argument_list  @ 139 @ 
operator: :  @ 8 @ operator: :  @ 9 @ 
name: tensorflow  @ 5 @ name: tensorflow  @ 6 @ 
name: num_ngrams  @ 68 @ name: num_ngrams  @ 87 @ 
operator: (  @ 53 @ operator: (  @ 66 @ 
argument_list  @ 64 @ argument_list  @ 83 @ 
expr  @ 124 @ expr  @ 161 @ 
operator: ::  @ 7 @ operator: ::  @ 8 @ 
expr  @ 130 @ expr  @ 168 @ 
name: GetAttr  @ 13 @ name: GetAttr  @ 14 @ 
decl  @ 97 @ decl  @ 133 @ 
call  @ 44 @ call  @ 55 @ 
name: shape  @ 55 @ name: shape  @ 69 @ 
index  @ 71 @ index  @ 90 @ 
condition  @ 63 @ condition  @ 82 @ 
name: n  @ 133 @ name: n  @ 177 @ 
specifier: const  @ 39 @ specifier: const  @ 43 @ 
argument  @ 11 @ argument  @ 12 @ 
name  @ 13 @ name  @ 14 @ 
name: ngrams_splits_data  @ 71 @ name: ngrams_splits_data  @ 90 @ 
expr  @ 9 @ expr  @ 10 @ 
if  @ 68 @ if  @ 87 @ 
type  @ 79 @ type  @ 104 @ 
argument_list  @ 11 @ argument_list  @ 12 @ 
expr  @ 103 @ expr  @ 140 @ 
name: valid_splits  @ 43 @ name: valid_splits  @ 52 @ 
expr  @ 67 @ expr  @ 86 @ 
decl  @ 77 @ decl  @ 101 @ 
name: int  @ 78 @ name: int  @ 102 @ 
expr  @ 44 @ expr  @ 55 @ 
argument  @ 100 @ argument  @ 137 @ 
argument_list  @ 80 @ argument_list  @ 105 @ 
control  @ 112 @ control  @ 149 @ 
block  @ 24 @ block  @ 27 @ 
operator: ->  @ 55 @ operator: ->  @ 69 @ 
argument  @ 100 @ argument  @ 137 @ 
name: InvalidArgument  @ 44 @ name: InvalidArgument  @ 54 @ 
operator: -  @ 102 @ operator: -  @ 139 @ 
operator: ::  @ 54 @ operator: ::  @ 67 @ 
operator: &  @ 79 @ operator: &  @ 104 @ 
decl_stmt  @ 118 @ decl_stmt  @ 155 @ 
argument  @ 9 @ argument  @ 10 @ 
operator: ->  @ 123 @ operator: ->  @ 160 @ 
expr  @ 92 @ expr  @ 128 @ 
incr  @ 63 @ incr  @ 82 @ 
name: int  @ 24 @ name: int  @ 27 @ 
argument  @ 9 @ argument  @ 10 @ 
expr  @ 66 @ expr  @ 85 @ 
name: override  @ 29 @ name: override  @ 32 @ 
name: splits_vec  @ 44 @ name: splits_vec  @ 55 @ 
argument_list  @ 11 @ argument_list  @ 12 @ 
argument_list  @ 8 @ argument_list  @ 9 @ 
literal: 0  @ 102 @ literal: 0  @ 139 @ 
argument  @ 21 @ argument  @ 23 @ 
block  @ 5 @ block  @ 6 @ 
name: string  @ 144 @ name: string  @ 199 @ 
name: ngram_size  @ 123 @ name: ngram_size  @ 160 @ 
decl_stmt  @ 148 @ decl_stmt  @ 203 @ 
name: left_padding  @ 103 @ name: left_padding  @ 140 @ 
init  @ 64 @ init  @ 83 @ 
name: ngram_widths_  @ 151 @ name: ngram_widths_  @ 206 @ 
name  @ 12 @ name  @ 13 @ 
argument_list  @ 55 @ argument_list  @ 69 @ 
literal: 0  @ 56 @ literal: 0  @ 186 @ 
name: splits_vec_size  @ 41 @ name: splits_vec_size  @ 50 @ 
expr  @ 79 @ expr  @ 104 @ 
init  @ 133 @ init  @ 177 @ 
name: ngram  @ 130 @ name: ngram  @ 168 @ 
name  @ 11 @ name  @ 12 @ 
argument_list  @ 75 @ argument_list  @ 94 @ 
expr  @ 140 @ expr  @ 195 @ 
argument  @ 44 @ argument  @ 55 @ 
expr  @ 25 @ expr  @ 28 @ 
argument  @ 31 @ argument  @ 34 @ 
argument  @ 10 @ argument  @ 11 @ 
expr  @ 89 @ expr  @ 125 @ 
call  @ 14 @ call  @ 15 @ 
block  @ 97 @ block  @ 134 @ 
unit  @ 1 @ unit  @ 1 @ 
argument  @ 92 @ argument  @ 128 @ 
expr  @ 128 @ expr  @ 166 @ 
name: std  @ 26 @ name: std  @ 29 @ 
control  @ 78 @ control  @ 103 @ 
argument_list  @ 42 @ argument_list  @ 51 @ 
name: n  @ 113 @ name: n  @ 150 @ 
argument  @ 77 @ argument  @ 101 @ 
decl  @ 144 @ decl  @ 199 @ 
expr  @ 39 @ expr  @ 43 @ 
expr  @ 10 @ expr  @ 11 @ 
type  @ 112 @ type  @ 149 @ 
condition  @ 98 @ condition  @ 135 @ 
init  @ 99 @ init  @ 136 @ 
name  @ 49 @ name  @ 78 @ 
argument  @ 125 @ argument  @ 162 @ 
operator: =  @ 36 @ operator: =  @ 39 @ 
name: size  @ 140 @ name: size  @ 195 @ 
name  @ 113 @ name  @ 150 @ 
literal: "ngram_widths"  @ 10 @ literal: "ngram_widths"  @ 11 @ 
operator: &  @ 14 @ operator: &  @ 16 @ 
argument  @ 17 @ argument  @ 19 @ 
name: right_padding  @ 133 @ name: right_padding  @ 177 @ 
macro  @ 17 @ macro  @ 19 @ 
index  @ 78 @ index  @ 102 @ 
operator: <  @ 76 @ operator: <  @ 100 @ 
init  @ 78 @ init  @ 102 @ 
name: void  @ 29 @ name: void  @ 32 @ 
name: pad_width  @ 26 @ name: pad_width  @ 29 @ 
name: tstring  @ 53 @ name: tstring  @ 66 @ 
name: separator_  @ 130 @ name: separator_  @ 168 @ 
argument_list  @ 17 @ argument_list  @ 19 @ 
argument_list  @ 49 @ argument_list  @ 78 @ 
name: splits_vec  @ 53 @ name: splits_vec  @ 66 @ 
decl_stmt  @ 80 @ decl_stmt  @ 105 @ 
name: int  @ 112 @ name: int  @ 149 @ 
name: void  @ 97 @ name: void  @ 133 @ 
name: valid_splits  @ 42 @ name: valid_splits  @ 51 @ 
call  @ 77 @ call  @ 101 @ 
name: int  @ 118 @ name: int  @ 155 @ 
decl  @ 124 @ decl  @ 161 @ 
name: context  @ 11 @ name: context  @ 12 @ 
block_content  @ 99 @ block_content  @ 136 @ 
expr  @ 135 @ expr  @ 179 @ 
name: num_tokens  @ 112 @ name: num_tokens  @ 149 @ 
expr  @ 63 @ expr  @ 82 @ 
name: auto  @ 76 @ name: auto  @ 98 @ 
name: empty  @ 54 @ name: empty  @ 67 @ 
operator: +  @ 26 @ operator: +  @ 29 @ 
name: allocate_output  @ 55 @ name: allocate_output  @ 69 @ 
expr  @ 130 @ expr  @ 168 @ 
expr  @ 98 @ expr  @ 135 @ 
operator: &  @ 90 @ operator: &  @ 126 @ 
name: std  @ 21 @ name: std  @ 23 @ 
expr  @ 129 @ expr  @ 167 @ 
name  @ 71 @ name  @ 90 @ 
incr  @ 124 @ incr  @ 161 @ 
init  @ 76 @ init  @ 98 @ 
name  @ 40 @ name  @ 44 @ 
call  @ 116 @ call  @ 153 @ 
name: input  @ 35 @ name: input  @ 38 @ 
operator: >  @ 104 @ operator: >  @ 141 @ 
expr  @ 97 @ expr  @ 133 @ 
literal: 0  @ 53 @ literal: 0  @ 66 @ 
decl_stmt  @ 79 @ decl_stmt  @ 104 @ 
expr  @ 135 @ expr  @ 179 @ 
expr  @ 126 @ expr  @ 163 @ 
argument  @ 12 @ argument  @ 13 @ 
for  @ 41 @ for  @ 50 @ 
operator: &  @ 13 @ operator: &  @ 14 @ 
name: tensorflow  @ 54 @ name: tensorflow  @ 67 @ 
name: get_num_ngrams  @ 67 @ name: get_num_ngrams  @ 86 @ 
operator: &  @ 55 @ operator: &  @ 69 @ 
name: ngram_size  @ 116 @ name: ngram_size  @ 153 @ 
expr  @ 35 @ expr  @ 38 @ 
expr  @ 35 @ expr  @ 38 @ 
operator: +  @ 103 @ operator: +  @ 140 @ 
name: CreateNgrams  @ 97 @ name: CreateNgrams  @ 133 @ 
expr  @ 132 @ expr  @ 176 @ 
decl_stmt  @ 108 @ decl_stmt  @ 145 @ 
block_content  @ 79 @ block_content  @ 104 @ 
operator: )  @ 32 @ operator: )  @ 35 @ 
operator: &  @ 9 @ operator: &  @ 10 @ 
operator: ->  @ 55 @ operator: ->  @ 69 @ 
name: max  @ 100 @ name: max  @ 137 @ 
name: auto  @ 36 @ name: auto  @ 39 @ 
expr  @ 35 @ expr  @ 38 @ 
expr  @ 122 @ expr  @ 159 @ 
expr  @ 49 @ expr  @ 78 @ 
decl  @ 65 @ decl  @ 84 @ 
operator: (  @ 39 @ operator: (  @ 43 @ 
name: i  @ 44 @ name: i  @ 55 @ 
comment: // Calculate the total expected size of the ngram so we can reserve the  @ 106 @ comment: // Calculate the total expected size of the ngram so we can reserve the  @ 143 @ 
name: SPLITS_TYPE  @ 36 @ name: SPLITS_TYPE  @ 39 @ 
operator: .  @ 110 @ operator: .  @ 147 @ 
name: context  @ 49 @ name: context  @ 78 @ 
operator: (  @ 102 @ operator: (  @ 139 @ 
type  @ 78 @ type  @ 103 @ 
argument  @ 12 @ argument  @ 13 @ 
argument  @ 10 @ argument  @ 11 @ 
operator: *  @ 26 @ operator: *  @ 29 @ 
argument  @ 11 @ argument  @ 12 @ 
name: left_pad_  @ 110 @ name: left_pad_  @ 147 @ 
expr  @ 25 @ expr  @ 28 @ 
argument  @ 25 @ argument  @ 28 @ 
init  @ 66 @ init  @ 85 @ 
name: ngram_size  @ 140 @ name: ngram_size  @ 195 @ 
argument_list  @ 49 @ argument_list  @ 78 @ 
name: use_pad_  @ 147 @ name: use_pad_  @ 202 @ 
operator: ->  @ 39 @ operator: ->  @ 43 @ 
name  @ 129 @ name  @ 167 @ 
operator: (  @ 36 @ operator: (  @ 39 @ 
name: length  @ 113 @ name: length  @ 150 @ 
expr  @ 31 @ expr  @ 34 @ 
name: ngram_width  @ 92 @ name: ngram_width  @ 128 @ 
argument  @ 80 @ argument  @ 105 @ 
operator: >  @ 53 @ operator: >  @ 66 @ 
expr  @ 31 @ expr  @ 34 @ 
name: ngram  @ 126 @ name: ngram  @ 163 @ 
operator: &  @ 77 @ operator: &  @ 101 @ 
init  @ 128 @ init  @ 166 @ 
argument_list  @ 5 @ argument_list  @ 5 @ 
operator: ->  @ 35 @ operator: ->  @ 38 @ 
expr  @ 67 @ expr  @ 86 @ 
init  @ 103 @ init  @ 140 @ 
name  @ 55 @ name  @ 69 @ 
literal: 1  @ 21 @ literal: 1  @ 24 @ 
argument  @ 8 @ argument  @ 9 @ 
operator: +=  @ 116 @ operator: +=  @ 153 @ 
name: ngram_size  @ 119 @ name: ngram_size  @ 156 @ 
macro  @ 8 @ macro  @ 9 @ 
name: int  @ 17 @ name: int  @ 19 @ 
argument  @ 151 @ argument  @ 206 @ 
argument  @ 14 @ argument  @ 15 @ 
expr  @ 64 @ expr  @ 83 @ 
literal: 1  @ 26 @ literal: 1  @ 29 @ 
block_content  @ 77 @ block_content  @ 101 @ 
argument_list  @ 67 @ argument_list  @ 86 @ 
name: bool  @ 147 @ name: bool  @ 202 @ 
expr  @ 30 @ expr  @ 33 @ 
condition  @ 112 @ condition  @ 149 @ 
operator: &&  @ 68 @ operator: &&  @ 87 @ 
name: ngram_width  @ 82 @ name: ngram_width  @ 107 @ 
name: right_pad_  @ 146 @ name: right_pad_  @ 201 @ 
argument_list  @ 55 @ argument_list  @ 69 @ 
name: num_separators  @ 119 @ name: num_separators  @ 156 @ 
name: num_tokens  @ 132 @ name: num_tokens  @ 176 @ 
name  @ 31 @ name  @ 34 @ 
name: pad_width_  @ 21 @ name: pad_width_  @ 23 @ 
expr  @ 71 @ expr  @ 90 @ 
name: context  @ 12 @ name: context  @ 13 @ 
for  @ 124 @ for  @ 161 @ 
operator: -  @ 21 @ operator: -  @ 23 @ 
call  @ 130 @ call  @ 168 @ 
argument  @ 9 @ argument  @ 10 @ 
control  @ 98 @ control  @ 135 @ 
argument_list  @ 50 @ argument_list  @ 79 @ 
block_content  @ 134 @ block_content  @ 178 @ 
expr  @ 80 @ expr  @ 105 @ 
name  @ 36 @ name  @ 39 @ 
argument_list  @ 81 @ argument_list  @ 106 @ 
argument  @ 92 @ argument  @ 128 @ 
condition  @ 76 @ condition  @ 100 @ 
expr_stmt  @ 151 @ expr_stmt  @ 206 @ 
expr  @ 41 @ expr  @ 50 @ 
expr_stmt  @ 1 @ expr_stmt  @ 57 @ 
name: data  @ 97 @ name: data  @ 133 @ 
name: num_ngrams  @ 97 @ name: num_ngrams  @ 133 @ 
decl  @ 128 @ decl  @ 166 @ 
name  @ 116 @ name  @ 153 @ 
literal: 1  @ 128 @ literal: 1  @ 166 @ 
expr  @ 82 @ expr  @ 107 @ 
expr  @ 133 @ expr  @ 177 @ 
type  @ 147 @ type  @ 202 @ 
comment: // Size of the tokens.  @ 111 @ comment: // Size of the tokens.  @ 148 @ 
argument  @ 44 @ argument  @ 56 @ 
argument  @ 49 @ argument  @ 78 @ 
if  @ 53 @ if  @ 66 @ 
name  @ 125 @ name  @ 162 @ 
name  @ 134 @ name  @ 178 @ 
name: ngram_index  @ 98 @ name: ngram_index  @ 135 @ 
expr  @ 12 @ expr  @ 13 @ 
name: right_pad_  @ 12 @ name: right_pad_  @ 13 @ 
argument_list  @ 80 @ argument_list  @ 105 @ 
name: flat  @ 53 @ name: flat  @ 66 @ 
expr  @ 13 @ expr  @ 14 @ 
range  @ 78 @ range  @ 103 @ 
type  @ 146 @ type  @ 201 @ 
expr_stmt  @ 71 @ expr_stmt  @ 90 @ 
call  @ 35 @ call  @ 38 @ 
name: OP_REQUIRES_OK  @ 10 @ name: OP_REQUIRES_OK  @ 11 @ 
name: ngram_index  @ 122 @ name: ngram_index  @ 159 @ 
operator: *  @ 97 @ operator: *  @ 133 @ 
name: ngram_index  @ 104 @ name: ngram_index  @ 141 @ 
name: i  @ 42 @ name: i  @ 51 @ 
argument  @ 81 @ argument  @ 106 @ 
name: get_num_ngrams  @ 24 @ name: get_num_ngrams  @ 27 @ 
name: i  @ 57 @ name: i  @ 115 @ 
operator: -  @ 26 @ operator: -  @ 29 @ 
argument_list  @ 140 @ argument_list  @ 195 @ 
expr  @ 44 @ expr  @ 55 @ 
return  @ 26 @ return  @ 29 @ 
index  @ 79 @ index  @ 104 @ 
expr  @ 11 @ expr  @ 12 @ 
argument  @ 82 @ argument  @ 107 @ 
decl_stmt  @ 91 @ decl_stmt  @ 127 @ 
operator: >  @ 68 @ operator: >  @ 87 @ 
type  @ 108 @ type  @ 145 @ 
name: num_ngrams  @ 67 @ name: num_ngrams  @ 86 @ 
range  @ 66 @ range  @ 85 @ 
name: context  @ 35 @ name: context  @ 38 @ 
name: data_length  @ 89 @ name: data_length  @ 125 @ 
block_content  @ 2 @ block_content  @ 2 @ 
name: pad_width  @ 100 @ name: pad_width  @ 137 @ 
name: context  @ 13 @ name: context  @ 14 @ 
call  @ 42 @ call  @ 51 @ 
operator: ->  @ 32 @ operator: ->  @ 35 @ 
name: tstring  @ 32 @ name: tstring  @ 35 @ 
expr  @ 118 @ expr  @ 155 @ 
condition  @ 128 @ condition  @ 166 @ 
name  @ 78 @ name  @ 102 @ 
argument_list  @ 116 @ argument_list  @ 153 @ 
expr  @ 10 @ expr  @ 11 @ 
expr  @ 99 @ expr  @ 136 @ 
argument  @ 140 @ argument  @ 195 @ 
argument  @ 14 @ argument  @ 15 @ 
literal: 2  @ 26 @ literal: 2  @ 29 @ 
name: namespace  @ 2 @ name: namespace  @ 2 @ 
type  @ 1 @ type  @ 1 @ 
name: ngrams_data  @ 76 @ name: ngrams_data  @ 98 @ 
name: data  @ 53 @ name: data  @ 66 @ 
name: int  @ 152 @ name: int  @ 207 @ 
operator: -  @ 100 @ operator: -  @ 137 @ 
call  @ 55 @ call  @ 69 @ 
call  @ 135 @ call  @ 179 @ 
argument  @ 135 @ argument  @ 179 @ 
name: length  @ 67 @ name: length  @ 86 @ 
expr  @ 6 @ expr  @ 7 @ 
for  @ 78 @ for  @ 103 @ 
block  @ 128 @ block  @ 166 @ 
expr  @ 43 @ expr  @ 52 @ 
call  @ 82 @ call  @ 107 @ 
type  @ 101 @ type  @ 138 @ 
type  @ 63 @ type  @ 82 @ 
control  @ 124 @ control  @ 161 @ 
name: output_start  @ 82 @ name: output_start  @ 107 @ 
name: n  @ 112 @ name: n  @ 149 @ 
ternary  @ 104 @ ternary  @ 141 @ 
type  @ 77 @ type  @ 101 @ 
expr  @ 12 @ expr  @ 13 @ 
literal: 1  @ 21 @ literal: 1  @ 23 @ 
operator: )  @ 36 @ operator: )  @ 39 @ 
condition  @ 53 @ condition  @ 66 @ 
name: std  @ 151 @ name: std  @ 206 @ 
operator: +  @ 118 @ operator: +  @ 155 @ 
name  @ 76 @ name  @ 98 @ 
operator: ->  @ 14 @ operator: ->  @ 15 @ 
expr  @ 14 @ expr  @ 16 @ 
name: input  @ 31 @ name: input  @ 34 @ 
name: int  @ 56 @ name: int  @ 50 @ 
name: i  @ 64 @ name: i  @ 83 @ 
argument  @ 99 @ argument  @ 136 @ 
argument  @ 35 @ argument  @ 38 @ 
name: ngrams_splits_data  @ 71 @ name: ngrams_splits_data  @ 90 @ 
argument_list  @ 129 @ argument_list  @ 167 @ 
operator: ->  @ 10 @ operator: ->  @ 11 @ 
argument_list  @ 43 @ argument_list  @ 52 @ 
decl  @ 80 @ decl  @ 105 @ 
argument_list  @ 82 @ argument_list  @ 107 @ 
expr  @ 140 @ expr  @ 195 @ 
name: ngrams_splits_data  @ 57 @ name: ngrams_splits_data  @ 115 @ 
name: num_tokens  @ 128 @ name: num_tokens  @ 166 @ 
expr  @ 63 @ expr  @ 82 @ 
name: auto  @ 79 @ name: auto  @ 104 @ 
argument_list  @ 53 @ argument_list  @ 66 @ 
name: flat  @ 76 @ name: flat  @ 98 @ 
decl_stmt  @ 1 @ decl_stmt  @ 1 @ 
operator: <  @ 124 @ operator: <  @ 161 @ 
expr  @ 113 @ expr  @ 150 @ 
argument  @ 13 @ argument  @ 14 @ 
operator: *  @ 89 @ operator: *  @ 125 @ 
init  @ 56 @ init  @ 186 @ 
condition  @ 68 @ condition  @ 87 @ 
specifier: const  @ 24 @ specifier: const  @ 27 @ 
argument  @ 43 @ argument  @ 52 @ 
expr  @ 104 @ expr  @ 141 @ 
expr  @ 76 @ expr  @ 100 @ 
name: int  @ 39 @ name: int  @ 43 @ 
expr  @ 80 @ expr  @ 105 @ 
name: context  @ 10 @ name: context  @ 11 @ 
operator: )  @ 76 @ operator: )  @ 98 @ 
argument  @ 92 @ argument  @ 128 @ 
expr  @ 79 @ expr  @ 104 @ 
block_content  @ 113 @ block_content  @ 150 @ 
call  @ 44 @ call  @ 53 @ 
call  @ 119 @ call  @ 156 @ 
expr  @ 104 @ expr  @ 141 @ 
name: num_batch_items  @ 63 @ name: num_batch_items  @ 82 @ 
expr  @ 97 @ expr  @ 133 @ 
operator: ++  @ 98 @ operator: ++  @ 135 @ 
name: ngrams  @ 74 @ name: ngrams  @ 93 @ 
argument_list  @ 44 @ argument_list  @ 53 @ 
name: int  @ 63 @ name: int  @ 82 @ 
expr  @ 78 @ expr  @ 102 @ 
expr  @ 11 @ expr  @ 12 @ 
argument_list  @ 21 @ argument_list  @ 23 @ 
type  @ 145 @ type  @ 200 @ 
argument  @ 11 @ argument  @ 12 @ 
name: ngrams_splits  @ 50 @ name: ngrams_splits  @ 79 @ 
call  @ 99 @ call  @ 136 @ 
name: flat  @ 50 @ name: flat  @ 79 @ 
name: size  @ 53 @ name: size  @ 66 @ 
name: output_start  @ 79 @ name: output_start  @ 104 @ 
name: append  @ 134 @ name: append  @ 178 @ 
expr  @ 151 @ expr  @ 206 @ 
call  @ 64 @ call  @ 83 @ 
call  @ 31 @ call  @ 34 @ 
name: data  @ 32 @ name: data  @ 35 @ 
name: flat  @ 39 @ name: flat  @ 43 @ 
decl_stmt  @ 77 @ decl_stmt  @ 101 @ 
operator: <  @ 32 @ operator: <  @ 35 @ 
name: num_ngrams  @ 71 @ name: num_ngrams  @ 90 @ 
name: int  @ 76 @ name: int  @ 100 @ 
name: data  @ 30 @ name: data  @ 33 @ 
expr  @ 12 @ expr  @ 13 @ 
block  @ 1 @ block  @ 1 @ 
literal: 0  @ 128 @ literal: 0  @ 166 @ 
comment: // Size of the separators.  @ 117 @ comment: // Size of the separators.  @ 154 @ 
expr  @ 124 @ expr  @ 161 @ 
argument  @ 132 @ argument  @ 176 @ 
argument_list  @ 24 @ argument_list  @ 27 @ 
argument_list  @ 55 @ argument_list  @ 68 @ 
decl_stmt  @ 81 @ decl_stmt  @ 106 @ 
call  @ 50 @ call  @ 79 @ 
name: tensorflow  @ 30 @ name: tensorflow  @ 33 @ 
argument  @ 75 @ argument  @ 95 @ 
operator: ::  @ 34 @ operator: ::  @ 37 @ 
call  @ 110 @ call  @ 147 @ 
name: int  @ 66 @ name: int  @ 85 @ 
name: length  @ 68 @ name: length  @ 87 @ 
argument  @ 97 @ argument  @ 133 @ 
operator: (  @ 76 @ operator: (  @ 98 @ 
literal: 0  @ 75 @ literal: 0  @ 97 @ 
argument_list  @ 123 @ argument_list  @ 160 @ 
block  @ 2 @ block  @ 2 @ 
name: splits_vec  @ 36 @ name: splits_vec  @ 39 @ 
type  @ 81 @ type  @ 106 @ 
modifier: *  @ 122 @ modifier: *  @ 159 @ 
name: auto  @ 90 @ name: auto  @ 126 @ 
argument_list  @ 140 @ argument_list  @ 195 @ 
name: public  @ 5 @ name: public  @ 6 @ 
specifier: const  @ 34 @ specifier: const  @ 37 @ 
literal: 0  @ 21 @ literal: 0  @ 23 @ 
name: num_separators  @ 118 @ name: num_separators  @ 155 @ 
operator: *  @ 97 @ operator: *  @ 133 @ 
argument  @ 44 @ argument  @ 53 @ 
operator: :  @ 6 @ operator: :  @ 7 @ 
call  @ 12 @ call  @ 13 @ 
expr  @ 77 @ expr  @ 101 @ 
call  @ 49 @ call  @ 78 @ 
expr  @ 48 @ expr  @ 76 @ 
decl  @ 76 @ decl  @ 98 @ 
index  @ 90 @ index  @ 126 @ 
name: OP_REQUIRES_OK  @ 14 @ name: OP_REQUIRES_OK  @ 15 @ 
call  @ 11 @ call  @ 12 @ 
expr  @ 102 @ expr  @ 139 @ 
block_content  @ 67 @ block_content  @ 86 @ 
name: splits_vec  @ 77 @ name: splits_vec  @ 101 @ 
name: left_padding  @ 110 @ name: left_padding  @ 147 @ 
operator: ::  @ 8 @ operator: ::  @ 9 @ 
name: int  @ 89 @ name: int  @ 125 @ 
operator: <  @ 112 @ operator: <  @ 149 @ 
type  @ 98 @ type  @ 135 @ 
expr  @ 34 @ expr  @ 37 @ 
incr  @ 112 @ incr  @ 149 @ 
argument_list  @ 9 @ argument_list  @ 10 @ 
decl  @ 64 @ decl  @ 83 @ 
argument  @ 42 @ argument  @ 51 @ 
condition  @ 133 @ condition  @ 177 @ 
decl  @ 81 @ decl  @ 106 @ 
operator: ==  @ 53 @ operator: ==  @ 66 @ 
operator: ->  @ 134 @ operator: ->  @ 178 @ 
expr  @ 14 @ expr  @ 15 @ 
name: input_data  @ 77 @ name: input_data  @ 101 @ 
argument  @ 44 @ argument  @ 56 @ 
call  @ 9 @ call  @ 10 @ 
name: ngram  @ 140 @ name: ngram  @ 195 @ 
name  @ 110 @ name  @ 147 @ 
name: i  @ 43 @ name: i  @ 52 @ 
comment: // We don't have to worry about dynamic padding sizes here: if padding  @ 86 @ comment: // We don't have to worry about dynamic padding sizes here: if padding  @ 122 @ 
condition  @ 124 @ condition  @ 161 @ 
decl  @ 146 @ decl  @ 201 @ 
name: ngrams  @ 76 @ name: ngrams  @ 98 @ 
name: max  @ 102 @ name: max  @ 139 @ 
decl  @ 118 @ decl  @ 155 @ 
type  @ 78 @ type  @ 102 @ 
name: tstring  @ 122 @ name: tstring  @ 159 @ 
name: context  @ 44 @ name: context  @ 53 @ 
name: tstring  @ 97 @ name: tstring  @ 133 @ 
expr  @ 41 @ expr  @ 50 @ 
expr  @ 55 @ expr  @ 68 @ 
argument  @ 55 @ argument  @ 69 @ 
decl  @ 103 @ decl  @ 140 @ 
name: ngrams_splits  @ 48 @ name: ngrams_splits  @ 76 @ 
name: GetAttr  @ 9 @ name: GetAttr  @ 10 @ 
expr  @ 44 @ expr  @ 56 @ 
name  @ 53 @ name  @ 66 @ 
name  @ 119 @ name  @ 156 @ 
name  @ 130 @ name  @ 168 @ 
expr  @ 122 @ expr  @ 159 @ 
decl  @ 108 @ decl  @ 145 @ 
expr  @ 67 @ expr  @ 86 @ 
expr  @ 123 @ expr  @ 160 @ 
name: bool  @ 42 @ name: bool  @ 51 @ 
operator: -  @ 128 @ operator: -  @ 166 @ 
expr  @ 55 @ expr  @ 69 @ 
operator: -  @ 103 @ operator: -  @ 140 @ 
argument  @ 12 @ argument  @ 13 @ 
argument_list  @ 135 @ argument_list  @ 179 @ 
name: ngram_width  @ 67 @ name: ngram_width  @ 86 @ 
init  @ 118 @ init  @ 155 @ 
comment: // Ngrams can be padded with either a fixed pad width or a dynamic pad  @ 18 @ comment: // Ngrams can be padded with either a fixed pad width or a dynamic pad  @ 20 @ 
name: pad_width  @ 104 @ name: pad_width  @ 141 @ 
argument_list  @ 119 @ argument_list  @ 156 @ 
name: namespace  @ 4 @ name: namespace  @ 4 @ 
decl_stmt  @ 147 @ decl_stmt  @ 202 @ 
name: ngram_widths_  @ 78 @ name: ngram_widths_  @ 103 @ 
expr  @ 49 @ expr  @ 78 @ 
name: num_ngrams  @ 65 @ name: num_ngrams  @ 84 @ 
block  @ 53 @ block  @ 66 @ 
argument  @ 123 @ argument  @ 160 @ 
name: ngram  @ 135 @ name: ngram  @ 179 @ 
name  @ 79 @ name  @ 104 @ 
operator: &&  @ 68 @ operator: &&  @ 87 @ 
name: get_num_ngrams  @ 81 @ name: get_num_ngrams  @ 106 @ 
name: output_start_idx  @ 90 @ name: output_start_idx  @ 126 @ 
range  @ 5 @ range  @ 6 @ 
name  @ 50 @ name  @ 79 @ 
type  @ 100 @ type  @ 137 @ 
call  @ 10 @ call  @ 11 @ 
name: i  @ 63 @ name: i  @ 82 @ 
name: n  @ 133 @ name: n  @ 177 @ 
block  @ 4 @ block  @ 4 @ 
expr  @ 44 @ expr  @ 55 @ 
call  @ 21 @ call  @ 23 @ 
incr  @ 41 @ incr  @ 50 @ 
init  @ 76 @ init  @ 100 @ 
argument  @ 13 @ argument  @ 14 @ 
name: length  @ 81 @ name: length  @ 106 @ 
operator: +=  @ 119 @ operator: +=  @ 156 @ 
argument_list  @ 134 @ argument_list  @ 178 @ 
expr  @ 55 @ expr  @ 69 @ 
type  @ 122 @ type  @ 159 @ 
init  @ 133 @ init  @ 177 @ 
continue  @ 84 @ continue  @ 120 @ 
block  @ 29 @ block  @ 32 @ 
call  @ 92 @ call  @ 128 @ 
name: right_padding  @ 116 @ name: right_padding  @ 153 @ 
argument_list  @ 64 @ argument_list  @ 83 @ 
call  @ 132 @ call  @ 176 @ 
block  @ 112 @ block  @ 149 @ 
name: length  @ 64 @ name: length  @ 83 @ 
argument  @ 64 @ argument  @ 83 @ 
call  @ 100 @ call  @ 137 @ 
argument_list  @ 35 @ argument_list  @ 38 @ 
literal: 1  @ 64 @ literal: 1  @ 83 @ 
decl_stmt  @ 65 @ decl_stmt  @ 84 @ 
call  @ 14 @ call  @ 15 @ 
operator: .  @ 119 @ operator: .  @ 156 @ 
argument  @ 14 @ argument  @ 16 @ 
operator: -  @ 80 @ operator: -  @ 105 @ 
index  @ 132 @ index  @ 176 @ 
expr  @ 82 @ expr  @ 107 @ 
name: OP_REQUIRES_OK  @ 11 @ name: OP_REQUIRES_OK  @ 12 @ 
name  @ 71 @ name  @ 90 @ 
decl_stmt  @ 5 @ decl_stmt  @ 5 @ 
name: length  @ 26 @ name: length  @ 29 @ 
expr  @ 108 @ expr  @ 145 @ 
expr  @ 82 @ expr  @ 107 @ 
operator: ->  @ 130 @ operator: ->  @ 168 @ 
argument  @ 134 @ argument  @ 178 @ 
operator: .  @ 39 @ operator: .  @ 43 @ 
name: left_pad_  @ 145 @ name: left_pad_  @ 200 @ 
argument_list  @ 99 @ argument_list  @ 136 @ 
operator: ->  @ 11 @ operator: ->  @ 12 @ 
operator: >  @ 76 @ operator: >  @ 98 @ 
argument  @ 130 @ argument  @ 168 @ 
expr_stmt  @ 113 @ expr_stmt  @ 150 @ 
name: right_padding  @ 118 @ name: right_padding  @ 155 @ 
operator: .  @ 40 @ operator: .  @ 44 @ 
decl  @ 90 @ decl  @ 126 @ 
operator: *  @ 30 @ operator: *  @ 33 @ 
decl  @ 152 @ decl  @ 207 @ 
name: int  @ 91 @ name: int  @ 127 @ 
name: data_start  @ 82 @ name: data_start  @ 107 @ 
name: i  @ 80 @ name: i  @ 105 @ 
name: data_start_index  @ 113 @ name: data_start_index  @ 150 @ 
name: SPLITS_TYPE  @ 5 @ name: SPLITS_TYPE  @ 5 @ 
block_content  @ 125 @ block_content  @ 162 @ 
name: Compute  @ 29 @ name: Compute  @ 32 @ 
name: ngram  @ 125 @ name: ngram  @ 162 @ 
init  @ 80 @ init  @ 105 @ 
decl_stmt  @ 101 @ decl_stmt  @ 138 @ 
decl_stmt  @ 144 @ decl_stmt  @ 199 @ 
expr  @ 54 @ expr  @ 67 @ 
name: append  @ 132 @ name: append  @ 176 @ 
name  @ 151 @ name  @ 206 @ 
comment: // Size of the right padding.  @ 115 @ comment: // Size of the right padding.  @ 152 @ 
call  @ 55 @ call  @ 69 @ 
specifier: const  @ 17 @ specifier: const  @ 19 @ 
name: ngrams_splits_data  @ 78 @ name: ngrams_splits_data  @ 102 @ 
name: tensorflow  @ 8 @ name: tensorflow  @ 9 @ 
name: splits_vec  @ 42 @ name: splits_vec  @ 51 @ 
argument_list  @ 29 @ argument_list  @ 32 @ 
call  @ 31 @ call  @ 34 @ 
literal: 0  @ 41 @ literal: 1  @ 50 @ 
operator: )  @ 43 @ operator: )  @ 52 @ 
name: ngram_width  @ 25 @ name: ngram_width  @ 28 @ 
argument  @ 9 @ argument  @ 10 @ 
expr  @ 35 @ expr  @ 38 @ 
name: data_start  @ 92 @ name: data_start  @ 128 @ 
name: num_batch_items  @ 56 @ name: shape  @ 71 @ 
control  @ 76 @ control  @ 100 @ 
argument_list  @ 7 @ argument_list  @ 8 @ 
argument  @ 5 @ argument  @ 5 @ 
expr  @ 71 @ expr  @ 90 @ 
name: size  @ 53 @ name: size  @ 66 @ 
name: explicit  @ 7 @ name: explicit  @ 8 @ 
literal: "separator"  @ 9 @ literal: "separator"  @ 10 @ 
decl  @ 133 @ decl  @ 177 @ 
name: ngram  @ 129 @ name: ngram  @ 167 @ 
argument_list  @ 14 @ argument_list  @ 15 @ 
decl  @ 100 @ decl  @ 137 @ 
name: context  @ 10 @ name: context  @ 11 @ 
operator: ==  @ 68 @ operator: ==  @ 87 @ 
name: ngram_width  @ 21 @ name: ngram_width  @ 23 @ 
expr  @ 125 @ expr  @ 162 @ 
name: ngram_width  @ 66 @ name: ngram_width  @ 85 @ 
operator: ->  @ 31 @ operator: ->  @ 34 @ 
argument  @ 35 @ argument  @ 38 @ 
name: public  @ 6 @ name: public  @ 7 @ 
comment: // If there is no data or size, return an empty RT.  @ 52 @ comment: // If there is no data or size, return an empty RT.  @ 65 @ 
literal: 1  @ 91 @ literal: 1  @ 127 @ 
decl  @ 2 @ decl  @ 2 @ 
expr  @ 92 @ expr  @ 128 @ 
name: OpKernel  @ 5 @ name: OpKernel  @ 6 @ 
type  @ 5 @ type  @ 5 @ 
type  @ 65 @ type  @ 84 @ 
then  @ 104 @ then  @ 141 @ 
call  @ 129 @ call  @ 167 @ 
name: ngram_index  @ 98 @ name: ngram_index  @ 135 @ 
argument_list  @ 14 @ argument_list  @ 15 @ 
expr  @ 124 @ expr  @ 161 @ 
name: num_tokens  @ 118 @ name: num_tokens  @ 155 @ 
name: data_start  @ 77 @ name: data_start  @ 101 @ 
name: OP_REQUIRES_OK  @ 13 @ name: OP_REQUIRES_OK  @ 14 @ 
argument_list  @ 39 @ argument_list  @ 43 @ 
incr  @ 98 @ incr  @ 135 @ 
operator: &  @ 49 @ operator: &  @ 78 @ 
name: auto  @ 32 @ name: auto  @ 35 @ 
if_stmt  @ 68 @ if_stmt  @ 87 @ 
call  @ 35 @ call  @ 38 @ 
specifier: const  @ 32 @ specifier: const  @ 35 @ 
literal: "data"  @ 31 @ literal: "data"  @ 34 @ 
operator: ++  @ 41 @ operator: ++  @ 50 @ 
name  @ 129 @ name  @ 167 @ 
operator: ?  @ 21 @ operator: ?  @ 23 @ 
name: num_ngrams  @ 83 @ name: num_ngrams  @ 108 @ 
type  @ 128 @ type  @ 166 @ 
name: n  @ 133 @ name: n  @ 177 @ 
name: text  @ 2 @ name: text  @ 2 @ 
type  @ 80 @ type  @ 105 @ 
name: pad_width_  @ 13 @ name: pad_width_  @ 14 @ 
argument  @ 31 @ argument  @ 34 @ 
name  @ 77 @ name  @ 101 @ 
argument  @ 140 @ argument  @ 195 @ 
argument_list  @ 31 @ argument_list  @ 34 @ 
name: ngram  @ 134 @ name: ngram  @ 178 @ 
name: OP_REQUIRES_OK  @ 75 @ name: OP_REQUIRES_OK  @ 94 @ 
operator: =  @ 40 @ operator: =  @ 44 @ 
block  @ 17 @ block  @ 19 @ 
expr  @ 104 @ expr  @ 141 @ 
control  @ 63 @ control  @ 82 @ 
type  @ 118 @ type  @ 155 @ 
literal: ", must be in [0,"  @ 44 @ literal: ", must be in ["  @ 55 @ 
argument_list  @ 92 @ argument_list  @ 128 @ 
block  @ 68 @ block  @ 87 @ 
decl  @ 79 @ decl  @ 104 @ 
expr  @ 125 @ expr  @ 162 @ 
name: append  @ 129 @ name: append  @ 167 @ 
type  @ 152 @ type  @ 207 @ 
operator: =  @ 39 @ operator: =  @ 43 @ 
name: input_data_size  @ 44 @ name: input_data_size  @ 56 @ 
name: i  @ 80 @ name: i  @ 105 @ 
expr  @ 104 @ expr  @ 141 @ 
init  @ 91 @ init  @ 127 @ 
operator: (  @ 26 @ operator: (  @ 29 @ 
expr_stmt  @ 123 @ expr_stmt  @ 160 @ 
type  @ 41 @ type  @ 46 @ 
decl  @ 1 @ decl  @ 1 @ 
name: ngram  @ 132 @ name: ngram  @ 176 @ 
name  @ 90 @ name  @ 126 @ 
decl_stmt  @ 97 @ decl_stmt  @ 133 @ 
name: context  @ 31 @ name: context  @ 34 @ 
expr  @ 31 @ expr  @ 34 @ 
argument  @ 44 @ argument  @ 53 @ 
operator: +=  @ 113 @ operator: +=  @ 150 @ 
for  @ 133 @ for  @ 177 @ 
expr  @ 133 @ expr  @ 177 @ 
literal: "data_splits"  @ 35 @ literal: "data_splits"  @ 38 @ 
literal: "preserve_short_sequences"  @ 14 @ literal: "preserve_short_sequences"  @ 15 @ 
argument_list  @ 31 @ argument_list  @ 34 @ 
operator: &  @ 35 @ operator: &  @ 38 @ 
name: n  @ 128 @ name: n  @ 166 @ 
name: input_data_size  @ 43 @ name: input_data_size  @ 52 @ 
comment: // generate at least one ngram.  @ 88 @ comment: // generate at least one ngram.  @ 124 @ 
expr  @ 44 @ expr  @ 56 @ 
name: n  @ 124 @ name: n  @ 161 @ 
call  @ 43 @ call  @ 52 @ 
index  @ 129 @ index  @ 167 @ 
call  @ 49 @ call  @ 77 @ 
init  @ 98 @ init  @ 135 @ 
operator: -  @ 47 @ operator: ,  @ 59 @ 
specifier: const  @ 40 @ specifier: const  @ 44 @ 
expr  @ 134 @ expr  @ 178 @ 
argument_list  @ 126 @ argument_list  @ 163 @ 
decl_stmt  @ 146 @ decl_stmt  @ 201 @ 
comment: // width depending on the 'pad_width' arg, but in no case should the padding  @ 19 @ comment: // width depending on the 'pad_width' arg, but in no case should the padding  @ 21 @ 
call  @ 7 @ call  @ 8 @ 
name: Tensor  @ 34 @ name: Tensor  @ 37 @ 
decl_stmt  @ 89 @ decl_stmt  @ 125 @ 
argument_list  @ 132 @ argument_list  @ 176 @ 
expr  @ 9 @ expr  @ 10 @ 
block  @ 78 @ block  @ 103 @ 
operator: ++  @ 112 @ operator: ++  @ 149 @ 
expr  @ 82 @ expr  @ 107 @ 
type  @ 89 @ type  @ 125 @ 
argument  @ 82 @ argument  @ 107 @ 
call  @ 55 @ call  @ 68 @ 
operator: )  @ 103 @ operator: )  @ 140 @ 
name: preserve_short_  @ 68 @ name: preserve_short_  @ 87 @ 
call  @ 32 @ call  @ 35 @ 
name: string  @ 145 @ name: string  @ 200 @ 
name: vector  @ 151 @ name: vector  @ 206 @ 
name: pad_width  @ 102 @ name: pad_width  @ 139 @ 
call  @ 53 @ call  @ 66 @ 
expr  @ 90 @ expr  @ 126 @ 
name: int  @ 64 @ name: int  @ 83 @ 
name: context  @ 9 @ name: context  @ 10 @ 
incr  @ 128 @ incr  @ 166 @ 
expr  @ 9 @ expr  @ 10 @ 
decl_stmt  @ 78 @ decl_stmt  @ 102 @ 
expr  @ 77 @ expr  @ 101 @ 
expr  @ 64 @ expr  @ 83 @ 
expr_stmt  @ 134 @ expr_stmt  @ 178 @ 
operator: &  @ 31 @ operator: &  @ 34 @ 
for  @ 112 @ for  @ 149 @ 
expr  @ 14 @ expr  @ 15 @ 
operator: -  @ 104 @ operator: -  @ 141 @ 
name: output_start_idx  @ 79 @ name: output_start_idx  @ 104 @ 
expr  @ 44 @ expr  @ 53 @ 
expr  @ 14 @ expr  @ 15 @ 
operator: &&  @ 43 @ operator: &&  @ 52 @ 
argument_list  @ 12 @ argument_list  @ 13 @ 
literal: 0  @ 104 @ literal: 0  @ 141 @ 
index  @ 57 @ index  @ 115 @ 
name: n  @ 128 @ name: n  @ 166 @ 
argument  @ 126 @ argument  @ 163 @ 
argument_list  @ 13 @ argument_list  @ 14 @ 
operator: <  @ 41 @ operator: <  @ 50 @ 
init  @ 42 @ init  @ 51 @ 
specifier: const  @ 30 @ specifier: const  @ 33 @ 
type  @ 66 @ type  @ 85 @ 
name: tensorflow  @ 48 @ name: tensorflow  @ 76 @ 
name: splits  @ 36 @ name: splits  @ 39 @ 
name: right_pad_  @ 116 @ name: right_pad_  @ 153 @ 
expr  @ 55 @ expr  @ 69 @ 
expr  @ 35 @ expr  @ 38 @ 
argument  @ 55 @ argument  @ 69 @ 
argument_list  @ 97 @ argument_list  @ 133 @ 
operator: ->  @ 49 @ operator: ->  @ 78 @ 
expr  @ 13 @ expr  @ 14 @ 
expr  @ 102 @ expr  @ 139 @ 
name: ngram_width  @ 26 @ name: ngram_width  @ 29 @ 
name: n  @ 124 @ name: n  @ 161 @ 
specifier: const  @ 36 @ specifier: const  @ 39 @ 
type  @ 133 @ type  @ 177 @ 
expr_stmt  @ 125 @ expr_stmt  @ 162 @ 
call  @ 126 @ call  @ 163 @ 
operator: ->  @ 50 @ operator: ->  @ 79 @ 
decl  @ 66 @ decl  @ 85 @ 
argument  @ 49 @ argument  @ 78 @ 
expr  @ 21 @ expr  @ 23 @ 
block_content  @ 64 @ block_content  @ 83 @ 
name: int  @ 97 @ name: int  @ 133 @ 
name: typename  @ 5 @ name: typename  @ 5 @ 
operator: +  @ 26 @ operator: +  @ 29 @ 
argument  @ 14 @ argument  @ 15 @ 
literal: 0  @ 55 @ literal: 0  @ 69 @ 
expr  @ 26 @ expr  @ 29 @ 
operator: *  @ 116 @ operator: *  @ 153 @ 
operator: ++  @ 56 @ operator: &  @ 71 @ 
name: i  @ 78 @ name: i  @ 102 @ 
operator: ->  @ 125 @ operator: ->  @ 162 @ 
operator: &  @ 122 @ operator: &  @ 159 @ 
operator: =  @ 71 @ operator: =  @ 90 @ 
type  @ 2 @ type  @ 2 @ 
name: StringNGramsOp  @ 7 @ name: StringNGramsOp  @ 8 @ 
type  @ 90 @ type  @ 126 @ 
name: input_data_size  @ 39 @ name: input_data_size  @ 43 @ 
block_content  @ 54 @ block_content  @ 67 @ 
operator: ++  @ 124 @ operator: ++  @ 161 @ 
name  @ 32 @ name  @ 35 @ 
name: length  @ 80 @ name: length  @ 105 @ 
literal: 0  @ 26 @ literal: 0  @ 29 @ 
name: num_ngrams  @ 98 @ name: num_ngrams  @ 135 @ 
expr  @ 40 @ expr  @ 44 @ 
expr  @ 43 @ expr  @ 52 @ 
expr_stmt  @ 74 @ expr_stmt  @ 93 @ 
operator: ->  @ 36 @ operator: ->  @ 39 @ 
argument_list  @ 76 @ argument_list  @ 98 @ 
argument  @ 49 @ argument  @ 78 @ 
operator: &  @ 11 @ operator: &  @ 12 @ 
literal: 1  @ 71 @ literal: 1  @ 90 @ 
name: num_ngrams  @ 82 @ name: num_ngrams  @ 107 @ 
type  @ 97 @ type  @ 133 @ 
expr  @ 49 @ expr  @ 78 @ 
operator: )  @ 39 @ operator: )  @ 43 @ 
argument  @ 129 @ argument  @ 167 @ 
argument  @ 12 @ argument  @ 13 @ 
name: preserve_short_  @ 14 @ name: preserve_short_  @ 16 @ 
name: num_ngrams  @ 92 @ name: num_ngrams  @ 128 @ 
expr  @ 44 @ expr  @ 55 @ 
name: Tensor  @ 54 @ name: Tensor  @ 67 @ 
call  @ 13 @ call  @ 14 @ 
operator: ->  @ 12 @ operator: ->  @ 13 @ 
operator: ->  @ 49 @ operator: ->  @ 78 @ 
argument_list  @ 35 @ argument_list  @ 38 @ 
call  @ 81 @ call  @ 106 @ 
operator: -  @ 118 @ operator: -  @ 155 @ 
decl  @ 104 @ decl  @ 141 @ 
operator: (  @ 103 @ operator: (  @ 140 @ 
type  @ 56 @ type  @ 50 @ 
operator: +  @ 129 @ operator: +  @ 167 @ 
name: output_start  @ 92 @ name: output_start  @ 128 @ 
decl  @ 41 @ decl  @ 50 @ 
name: DCHECK_EQ  @ 140 @ name: DCHECK_EQ  @ 195 @ 
name: i  @ 64 @ name: i  @ 83 @ 
block_content  @ 69 @ block_content  @ 88 @ 
expr  @ 100 @ expr  @ 137 @ 
expr  @ 92 @ expr  @ 128 @ 
name: Tensor  @ 74 @ name: Tensor  @ 93 @ 
name: context  @ 12 @ name: context  @ 13 @ 
argument  @ 92 @ argument  @ 128 @ 
name: data  @ 129 @ name: data  @ 167 @ 
expr  @ 82 @ expr  @ 107 @ 
expr  @ 7 @ expr  @ 8 @ 
name  @ 49 @ name  @ 78 @ 
name  @ 10 @ name  @ 11 @ 
comment: // correct amount of space in the string.  @ 107 @ comment: // correct amount of space in the string.  @ 144 @ 
name: int  @ 80 @ name: int  @ 105 @ 

