118a119,137
>class SubgraphGuard {
>  public:
>   SubgraphGuard(TfLiteContext* context, bool* is_subgraph_in_use)
>       : is_subgraph_in_use_(is_subgraph_in_use) { if (*is_subgraph_in_use_) {
>       TF_LITE_KERNEL_LOG( context, "Subgraph is already in use. Using an interpreter or a subgraph in " "multiple threads is not supported. Recursion in the graph is not " "supported.");
>       status_ = kTfLiteError;
>     } else {
>       *is_subgraph_in_use_ = true;
>     }
>   }
>   ~SubgraphGuard() { // If tht original status was OK, recover the boolean flag. if (status_ == kTfLiteOk) {
>       *is_subgraph_in_use_ = false;
>     }
>   }
>   TfLiteStatus status() const { return status_; }
>  private:
>   TfLiteStatus status_ = kTfLiteOk;
>   bool* is_subgraph_in_use_;
> };
165a166,167
>  SubgraphGuard guard(&context_, &is_subgraph_in_use_);
>  TF_LITE_ENSURE_OK(&context_, guard.status());
