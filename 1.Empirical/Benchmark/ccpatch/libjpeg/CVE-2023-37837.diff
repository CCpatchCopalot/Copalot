diff --git a/cmd/bitmaphook.cpp b/cmd/bitmaphook.cpp
index cee7229..9f41dbe 100644
--- a/cmd/bitmaphook.cpp
+++ b/cmd/bitmaphook.cpp
@@ -45 +45 @@
-** $Id: bitmaphook.cpp,v 1.16 2022/02/28 11:11:32 thor Exp $
+** $Id: bitmaphook.cpp,v 1.17 2023/07/07 12:19:11 thor Exp $
@@ -163,2 +163,4 @@ JPG_LONG BitmapHook(struct JPG_Hook *hook, struct JPG_TagItem *tags)
-            fread(bmm->bmm_pLDRMemPtr,sizeof(UBYTE),width * height * bmm->bmm_usDepth,
-                  bmm->bmm_pLDRSource);
+            ssize_t cnt = fread(bmm->bmm_pLDRMemPtr,sizeof(UBYTE),width * height * bmm->bmm_usDepth,
+                                bmm->bmm_pLDRSource);
+            if (cnt != width * height * bmm->bmm_usDepth)
+              return JPGERR_UNEXPECTED_EOF;
@@ -206,2 +208,4 @@ JPG_LONG BitmapHook(struct JPG_Hook *hook, struct JPG_TagItem *tags)
-              fread(bmm->bmm_pMemPtr,bmm->bmm_ucPixelType & CTYP_SIZE_MASK,
-                    width * height * bmm->bmm_usDepth,bmm->bmm_pSource);
+              ssize_t cnt = fread(bmm->bmm_pMemPtr,bmm->bmm_ucPixelType & CTYP_SIZE_MASK,
+                                  width * height * bmm->bmm_usDepth,bmm->bmm_pSource);
+              if (cnt != width * height * bmm->bmm_usDepth)
+                return JPGERR_UNEXPECTED_EOF;
@@ -443,2 +447,4 @@ JPG_LONG AlphaHook(struct JPG_Hook *hook, struct JPG_TagItem *tags)
-              fread(bmm->bmm_pAlphaPtr,bmm->bmm_ucAlphaType & CTYP_SIZE_MASK,
-                    bmm->bmm_ulWidth * height,bmm->bmm_pAlphaSource);
+              ssize_t cnt = fread(bmm->bmm_pAlphaPtr,bmm->bmm_ucAlphaType & CTYP_SIZE_MASK,
+                                  bmm->bmm_ulWidth * height,bmm->bmm_pAlphaSource);
+              if (cnt != bmm->bmm_ulWidth * height)
+                return JPGERR_UNEXPECTED_EOF;
diff --git a/interface/bitmaphook.cpp b/interface/bitmaphook.cpp
index c32ebf8..b128164 100644
--- a/interface/bitmaphook.cpp
+++ b/interface/bitmaphook.cpp
@@ -44 +44 @@
- * $Id: bitmaphook.cpp,v 1.10 2015/03/16 08:55:33 thor Exp $
+ * $Id: bitmaphook.cpp,v 1.11 2023/07/07 12:19:54 thor Exp $
@@ -195,2 +195,5 @@ void BitMapHook::Request(struct JPG_Hook *hook,struct JPG_TagItem *tags,UBYTE pi
-  if (hook)
-    hook->CallLong(tags);
+  if (hook) {
+    LONG result = hook->CallLong(tags);
+    if (result < 0)
+      comp->EnvironOf()->Throw(result,"BitmapHook::Request",__LINE__,__FILE__,"BitMapHook signalled an error");
+  }
@@ -238,2 +241,6 @@ void BitMapHook::Release(struct JPG_Hook *hook,struct JPG_TagItem *tags,UBYTE pi
-    
-    hook->CallLong(tags);
+
+    if (hook) {
+      LONG result = hook->CallLong(tags);
+      if (result < 0)
+        comp->EnvironOf()->Throw(result,"BitmapHook::Release",__LINE__,__FILE__,"BitMapHook signalled an error");
+    }
