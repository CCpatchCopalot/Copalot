diff --git a/contrib/gdevbjca.c b/contrib/gdevbjca.c
index a023f0ee0..164a47898 100644
--- a/contrib/gdevbjca.c
+++ b/contrib/gdevbjca.c
@@ -1,7 +1,7 @@
 /* BJC-210/240/250/265/1000 Bubble Jet Printer driver for GhostScript
  * utility subroutines and dithering code
  *
- * Copyright 2000, 2001, 2002 Gergely Szász (Gergely Sza'sz)
+ * Copyright 2000, 2001, 2002 Gergely Szï¿½sz (Gergely Sza'sz)
  * mailto://szaszg@hu.inter.net http://bjc250gs.sourceforge.net
  *
  *   This program may be distributed and/or modified under the terms of
@@ -655,12 +655,15 @@ FloydSteinbergDitheringC(gx_device_bjc_printer *dev,
         for( i=width; i>0; i--, row+=4, err_vect+=3) { /*separate components */
 
 /*                                               C     +       K           */
-            err_corrC = dev->bjc_gamma_tableC[ (*row)    + (*(row+3))]
-                          + dev->FloydSteinbergC;
-            err_corrM = dev->bjc_gamma_tableM[(*(row+1)) + (*(row+3))]
-                          + dev->FloydSteinbergM;
-            err_corrY = dev->bjc_gamma_tableY[(*(row+2)) + (*(row+3))]
-                          + dev->FloydSteinbergY;
+            int v = row[0] + row[3];
+            if (v > 255) v = 255;
+            err_corrC = dev->bjc_gamma_tableC[v] + dev->FloydSteinbergC;
+            v = row[1] + row[3];
+            if (v > 255) v = 255;
+            err_corrM = dev->bjc_gamma_tableM[v] + dev->FloydSteinbergM;
+            v = row[2] + row[3];
+            if (v > 255) v = 255;
+            err_corrY = dev->bjc_gamma_tableY[v] + dev->FloydSteinbergY;
 
             if(err_corrC > 4080 && limit_extr) err_corrC = 4080;
             if(err_corrM > 4080 && limit_extr) err_corrM = 4080;
@@ -751,12 +754,15 @@ FloydSteinbergDitheringC(gx_device_bjc_printer *dev,
 
         for( i=width; i>0; i--, row-=4, err_vect-=3) {
 
-            err_corrC = dev->bjc_gamma_tableC[  (*row)   + (*(row+3))]
-                          + dev->FloydSteinbergC;
-            err_corrM = dev->bjc_gamma_tableM[(*(row+1)) + (*(row+3))]
-                          + dev->FloydSteinbergM;
-            err_corrY = dev->bjc_gamma_tableY[(*(row+2)) + (*(row+3))]
-                          + dev->FloydSteinbergY;
+            int v = row[0] + row[3];
+            if (v > 255) v = 255;
+            err_corrC = dev->bjc_gamma_tableC[v] + dev->FloydSteinbergC;
+            v = row[1] + row[3];
+            if (v > 255) v = 255;
+            err_corrM = dev->bjc_gamma_tableM[v] + dev->FloydSteinbergM;
+            v = row[2] + row[3];
+            if (v > 255) v = 255;
+            err_corrY = dev->bjc_gamma_tableY[v] + dev->FloydSteinbergY;
 
             if(err_corrC > 4080 && limit_extr) err_corrC = 4080;
             if(err_corrM > 4080 && limit_extr) err_corrM = 4080;
