diff --git a/libr/io/io_bank.c b/libr/io/io_bank.c
index 228e422d65..dc13c286b6 100644
--- a/libr/io/io_bank.c
+++ b/libr/io/io_bank.c
@@ -229,6 +229,15 @@ R_API bool r_io_bank_map_add_top(RIO *io, const ut32 bankid, const ut32 mapid) {
-	while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {
-		//delete all submaps that are completly included in sm
-		RRBNode *next = r_rbnode_next (entry);
-		// this can be optimized, there is no need to do search here
-		r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);
-		entry = next;
+	ut64 smto = r_io_submap_to (sm);
+	if (entry) {
+		ut64 ento = r_io_submap_to (((RIOSubMap*)entry->data));
+		while (entry && ento <= smto) {
+			//delete all submaps that are completly included in sm
+			RRBNode *next = r_rbnode_next (entry);
+			// this can be optimized, there is no need to do search here
+			// XXX this is a workaround to avoid an UAF in Reproducer: iobank-crash
+			ento = r_io_submap_to (((RIOSubMap*)entry->data));
+			bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);
+			if (!a) {
+				next = NULL;
+			}
+			entry = next;
+		}
