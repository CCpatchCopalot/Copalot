diff --git a/epan/dissectors/packet-http3.c b/epan/dissectors/packet-http3.c
old mode 100644
new mode 100755
index d2ff4514e4..3497297741
--- a/epan/dissectors/packet-http3.c
+++ b/epan/dissectors/packet-http3.c
@@ -1442,14 +1442,20 @@ report_unknown_stream_type(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
 #define HTTP3_QPACK_MAX_INT ((1ull << HTTP3_QPACK_MAX_SHIFT) - 1)
 
 static gint
-read_qpack_prefixed_integer(guint8 *buf, guint8 *end, gint prefix,
+read_qpack_prefixed_integer(tvbuff_t *tvb, int offset, gint prefix,
                             guint64 *out_result, gboolean *out_fin, gboolean *out_flag)
 {
-    guint64       k     = (uint8_t)((1 << prefix) - 1);
-    guint64       n     = 0;
-    guint64       add   = 0;
-    guint64       shift = 0;
-    const guint8 *p     = buf;
+    /*
+     * This can throw a ReportedBoundError; in fact, we count on that
+     * currently in order to detect QPACK fields split across packets.
+     */
+    const uint8_t *buf   = tvb_get_ptr(tvb, offset, -1);
+    const uint8_t *end   = buf + tvb_captured_length_remaining(tvb, offset);
+    guint64        k     = (uint8_t)((1 << prefix) - 1);
+    guint64        n     = 0;
+    guint64        add   = 0;
+    guint64        shift = 0;
+    const guint8  *p     = buf;
 
     if (out_flag) {
         *out_flag = *p & (1 << prefix);
@@ -1525,11 +1531,12 @@ dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo _U_, proto_
     }
 
     while (decoded < remaining && can_continue) {
-        gint   opcode_offset = 0;
+        gint   opcode_offset = offset + decoded;
         gint   opcode_len    = 0;
         guint8 opcode        = 0;
         fin                  = 0;
 
+        TRY {
         opcode = qpack_buf[decoded] & QPACK_OPCODE_MASK;
 
         HTTP3_DISSECTOR_DPRINTF("Decoding opcode=%" PRIu8 " decoded=%d remaining=%d", opcode, decoded, remaining);
@@ -1696,6 +1703,12 @@ dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo _U_, proto_
             can_continue = 0;
         }
     }
+    CATCH(ReportedBoundsError) {
+         decoded = opcode_offset - offset;
+         can_continue = false;
+        }
+        ENDTRY;
+    }
 
     return offset + decoded;
 }
