

The most relevant vulnerability-related modification is in `tif_dirread.c` where a check using `_TIFFCheckFieldIsValidForCodec()` is added to ignore codec-specific tags when the codec isn't enabled. This directly addresses the invalid memory write vulnerability by validating tags before processing.

**Key diff from the patch:**

```diff
diff --git a/libtiff/tif_dirread.c b/libtiff/tif_dirread.c
index 772ebaf7..acde78b5 100644
--- a/libtiff/tif_dirread.c
+++ b/libtiff/tif_dirread.c
@@ -3580,6 +3580,10 @@ TIFFReadDirectory(TIFF* tif)
 							goto bad;
 						dp->tdir_tag=IGNORE;
 						break;
+                                        default:
+                                            if( !_TIFFCheckFieldIsValidForCodec(tif, dp->tdir_tag) )
+                                                dp->tdir_tag=IGNORE;
+                                            break;
 				}
 			}
 		}
``` 

This change introduces validation for extension tags, ensuring maliciously crafted tags (irrelevant to the active codec) are ignored, mitigating the memory corruption issue.