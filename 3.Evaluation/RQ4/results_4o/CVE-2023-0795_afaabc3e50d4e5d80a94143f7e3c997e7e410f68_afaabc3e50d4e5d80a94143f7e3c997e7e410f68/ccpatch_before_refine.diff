

The vulnerability stems from improper dimension updates when rotating images. The key modification is adding the `rot_image_params` flag to `rotateImage` to control dimension swapping only when rotating the entire image. The critical call chain change is in `correct_orientation`:

```diff
diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
@@ -7266,9 +7266,13 @@ static int correct_orientation(struct image_data *image,
                       (uint16_t)(image->adjustments & ROTATE_ANY));
             return (-1);
         }
-
-        if (rotateImage(rotation, image, &image->width, &image->length,
-                        work_buff_ptr, NULL))
+        /* Dummy variable to avoid switching image->width/length twice */
+        uint32_t width = image->width;
+        uint32_t length = image->length;
+        if (rotateImage(rotation, image, &width, &length, 
+                        work_buff_ptr, NULL, 
+                        TRUE))  /* TRUE enables dimension update */
         {
             TIFFError("correct_orientation", "Unable to rotate image");
             return (-1);
```

This change ensures image dimensions are only updated once during orientation correction, preventing inconsistent width/length values that could lead to out-of-bounds reads.