

The vulnerability is addressed by adding validation checks in `iods_box_read` and `stbl_box_read` to prevent invalid descriptor tags and chunk entries, which could lead to NULL pointer dereferences. The critical call chain modification is in `gf_isom_remove_track`, where the loop logic is adjusted to properly handle track references, ensuring descriptors are validated before use. Here is the relevant diff:

```diff
diff --git a/src/isomedia/isom_write.c b/src/isomedia/isom_write.c
index 69f9c9ebc..832526841 100644
--- a/src/isomedia/isom_write.c
+++ b/src/isomedia/isom_write.c
@@ -2845,7 +2846,6 @@ GF_Err gf_isom_remove_track(GF_ISOFile *movie, u32 trackNumber)
 	//note that we don't touch scal references, as we don't want to rewrite AVC/HEVC samples ...
 	i=0;
 	while ((trak = (GF_TrackBox *)gf_list_enum(movie->moov->trackList, &i))) {
-		if (trak == the_trak) continue;
 		if (! trak->References || ! gf_list_count(trak->References->child_boxes)) continue;
 
 		j=0;
```

This change removes the `continue` statement that skipped processing the current track, ensuring proper cleanup and validation of related descriptors, thereby preventing a NULL pointer dereference in `gf_utf8_wcslen` when handling invalid data.