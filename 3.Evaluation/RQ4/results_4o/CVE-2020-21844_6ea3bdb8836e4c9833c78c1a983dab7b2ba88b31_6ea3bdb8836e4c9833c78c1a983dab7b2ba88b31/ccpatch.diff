diff --git a/src/decode.c b/src/decode.c
index 2ce22343..7cd246f1 100644
--- a/src/decode.c
+++ b/src/decode.c
@@ -2123,7 +2123,29 @@ read_R2004_section_info (Bit_Chain *restrict dat, Dwg_Data *restrict dwg,
           LOG_ERROR ("read_R2004_section_info out of range");
           return DWG_ERR_INVALIDDWG;
         }
-
+      // max_decomp_size is the decompressed block size (max 0x7c00)
+      if (info->max_decomp_size > 0x8000)
+        {
+          LOG_ERROR ("Skip section %s with max decompression size 0x%x > 0x8000",
+                     info->name, info->max_decomp_size);
+          info->max_decomp_size = info->size = 0;
+          error |= DWG_ERR_VALUEOUTOFBOUNDS;
+        }
+      if (info->size > info->num_sections * info->max_decomp_size)
+        {
+          LOG_ERROR ("Skip section %s with size %lu > %d * " FORMAT_RL,
+                     info->name, info->size, info->num_sections, info->max_decomp_size);
+          info->max_decomp_size = info->size = info->num_sections = 0;
+          error |= DWG_ERR_VALUEOUTOFBOUNDS;
+        }
+      if (info->num_sections > 1 && info->size < info->max_decomp_size)
+        {
+          // on mult. blocks, size must exceed the size of the first block
+          LOG_ERROR ("Skip section %s with size %lu < max_decomp_size " FORMAT_RL,
+                     info->name, info->size, info->max_decomp_size);
+          info->max_decomp_size = info->size = info->num_sections = 0;
+          error |= DWG_ERR_VALUEOUTOFBOUNDS;
+        }
       if (info->num_sections < 1000000)
         {
           int32_t old_section_number = 0;
