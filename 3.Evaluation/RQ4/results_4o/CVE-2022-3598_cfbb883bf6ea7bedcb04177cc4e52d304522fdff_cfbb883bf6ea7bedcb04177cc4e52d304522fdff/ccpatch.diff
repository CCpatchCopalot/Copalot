diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 41a2ea36..deab5feb 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -861,7 +861,7 @@ static int readContigTilesIntoBuffer (TIFF* in, uint8_t* buf,
       TIFFError("readContigTilesIntoBuffer", "Integer overflow when calculating buffer size.");
       exit(EXIT_FAILURE);
   }
-  tilebuf = limitMalloc(tile_buffsize + 3);
+  tilebuf = limitMalloc(tile_buffsize + NUM_BUFF_OVERSIZE_BYTES);
   if (tilebuf == 0)
     return 0;
   tilebuf[tile_buffsize] = 0;
@@ -870,7 +870,7 @@ static int readContigTilesIntoBuffer (TIFF* in, uint8_t* buf,
     for (row = 0; row < tilecount; row++)
     {
         /* Calculate the read offset into the tilebuf */
-        src_offset = (row * tile_rowsize) + (col_offset * bps * spp + 7) / 8;
+        src_offset = (row * (uint32_t)tile_rowsize) + (col_offset * bps * spp + 7) / 8;
 
         status = TIFFReadTile(in, tilebuf, col * tw, row * tl, 0, 0);
         if (status == -1 && !ignore) {
@@ -881,7 +881,7 @@ static int readContigTilesIntoBuffer (TIFF* in, uint8_t* buf,
             _TIFFfree(tilebuf);
             return 0;
         }
-        extractContigSamplesShifted24bits(tilebuf + src_offset, bufp, ncol,
+        extractContigSamplesShifted24bits(tilebuf + src_offset, bufp, (uint32_t)ncol,
                                           shift_width, bps, spp);
         bufp += (ncol * bps * spp + 7) / 8;
     }
