

The vulnerability stems from a NULL pointer dereference in `GetESD` when accessing `esd->decoderConfig` without validation. The patch modifies `DumpTrackInfo` in `applications/mp4box/filedump.c` to check both `esd` and `esd->decoderConfig` before proceeding, preventing the dereference. Here's the critical diff:

```diff
diff --git a/applications/mp4box/filedump.c b/applications/mp4box/filedump.c
index ca0524bab..8973fbe4f 100644
--- a/applications/mp4box/filedump.c
+++ b/applications/mp4box/filedump.c
@@ -2371,8 +2371,9 @@ void DumpTrackInfo(GF_ISOFile *file, u32 trackID, Bool full_dump)
 	        || (msub_type==GF_ISOM_SUBTYPE_HVT1)
 	   )  {
 		esd = gf_isom_get_esd(file, trackNum, 1);
-		if (!esd) {
+		if (!esd || !esd->decoderConfig) {
 			fprintf(stderr, "WARNING: Broken MPEG-4 Track\n");
+			if (esd) gf_odf_desc_del((GF_Descriptor *)esd);
 		} else {
 			const char *st = gf_odf_stream_type_name(esd->decoderConfig->streamType);
 			if (st) {
```

This change directly addresses the NULL dereference by validating `esd->decoderConfig` and properly cleaning up `esd` if the config is missing.