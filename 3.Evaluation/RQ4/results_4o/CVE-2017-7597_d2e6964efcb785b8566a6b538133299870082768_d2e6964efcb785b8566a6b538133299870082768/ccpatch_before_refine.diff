

To address the vulnerability related to undefined behavior when converting doubles to floats, the key modification is in `tif_dirread.c` where clamping is added during array conversion. Here's the relevant diff:

```diff
diff --git a/libtiff/tif_dirread.c b/libtiff/tif_dirread.c
index eae34306..f8628fd6 100644
--- a/libtiff/tif_dirread.c
+++ b/libtiff/tif_dirread.c
@@ -2406,7 +2406,14 @@ static enum TIFFReadDirEntryErr TIFFReadDirEntryFloatArray(TIFF* tif, TIFFDirEnt
 				ma=(double*)origdata;
 				mb=data;
 				for (n=0; n<count; n++)
-					*mb++=(float)(*ma++);
+                                {
+                                    double val = *ma++;
+                                    if( val > FLT_MAX )
+                                        val = FLT_MAX;
+                                    else if( val < -FLT_MAX )
+                                        val = -FLT_MAX;
+                                    *mb++=(float)val;
+                                }
 			}
 			break;
 	}
```

This change clamps double values to the representable range of `float` before conversion, directly mitigating the undefined behavior described.