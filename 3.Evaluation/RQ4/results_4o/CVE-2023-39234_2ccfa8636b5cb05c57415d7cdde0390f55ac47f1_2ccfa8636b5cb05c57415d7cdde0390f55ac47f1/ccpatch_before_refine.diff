

The vulnerability stems from improper parsing of variable-length integers leading to an incorrect `lt->numrealfacs` value, causing an out-of-bounds write. The patch fixes the parsing logic by correctly handling unsigned bytes and bit checks. The critical diff is:

```diff
diff --git a/gtkwave3-gtk3/src/helpers/vzt_read.c b/gtkwave3-gtk3/src/helpers/vzt_read.c
index b9953d2..707fff8 100644
--- a/gtkwave3-gtk3/src/helpers/vzt_read.c
+++ b/gtkwave3-gtk3/src/helpers/vzt_read.c
@@ -171,19 +171,19 @@ return((m1<<24)|(m2<<16)|(m3<<8)|m4);
 }
 
 
-static vztint32_t vzt_rd_get_v32(char **mmx)
+static vztint32_t vzt_rd_get_v32(unsigned char **mmx)
 {
-signed char *c;
-signed char *beg;
+unsigned char *c;
+unsigned char *beg;
 vztint32_t val;
-signed char **mm = (signed char **)mmx;
+unsigned char **mm = mmx;
 
 c = *mm;
 beg = c;
 
-if(*c>=0)
+if(!(*c & 0x80))
 	{
-	while(*c>=0) c++;
+	while(!(*c & 0x80)) c++;
 	*mm = c+1;
 
 	val = (vztint32_t)(*c&0x7f);
```