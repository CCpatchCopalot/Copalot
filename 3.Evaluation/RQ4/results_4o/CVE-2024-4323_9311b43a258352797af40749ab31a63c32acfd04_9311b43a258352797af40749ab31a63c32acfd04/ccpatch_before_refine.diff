

The critical vulnerability fix is in the `find_input` function where input name length validation was added to prevent memory corruption via unterminated strings or incorrect buffer reads. Here's the key diff:

```diff
diff --git a/src/http_server/api/v1/trace.c b/src/http_server/api/v1/trace.c
--- a/src/http_server/api/v1/trace.c
+++ b/src/http_server/api/v1/trace.c
@@ -39,7 +59,10 @@
 
     mk_list_foreach(head, &hs->config->inputs) {
         in = mk_list_entry(head, struct flb_input_instance, _head);
-        if (strcmp(name, in->name) == 0) {
+        if (strlen(in->name) != nlen) {
+            continue;
+        }
+        if (strncmp(name, in->name, nlen) == 0) {
             return in;
         }
         if (in->alias) {
@@ -135,7 +158,7 @@
             output_name = flb_sds_create("stdout");
         }
 
-        toggled_on = enable_trace_input(hs, input_name, prefix, output_name, props);
+        toggled_on = enable_trace_input(hs, input_name, input_nlen, prefix, output_name, props);
         if (!toggled_on) {
             ret = -1;
             goto parse_error;
```

This change adds crucial length validation in `find_input` and propagates input length through the call chain from HTTP handlers to prevent buffer over-reads and memory corruption vulnerabilities.