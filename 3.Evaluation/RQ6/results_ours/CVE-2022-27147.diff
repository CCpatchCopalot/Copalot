diff --git a/include/gpac/internal/scenegraph_dev.h b/include/gpac/internal/scenegraph_dev.h
index e718c3a0b8..d8f2a10a62 100644
--- a/include/gpac/internal/scenegraph_dev.h
+++ b/include/gpac/internal/scenegraph_dev.h
@@ -945,7 +945,7 @@ GF_Err gf_dom_listener_del(GF_Node *listener, GF_DOMEventTarget *target);
 GF_DOMHandler *gf_dom_listener_build_ex(GF_Node *node, u32 event_type, u32 event_parameter, GF_Node *handler, GF_Node **out_listener);
 
 void	gf_dom_event_dump_listeners(GF_Node *n, FILE *f);
-void	gf_dom_event_remove_all_listeners(GF_DOMEventTarget *event_target);
+void	gf_dom_event_remove_all_listeners(GF_DOMEventTarget *event_target, GF_SceneGraph *sg);
 void	gf_dom_event_target_del(GF_DOMEventTarget *target);
 GF_Err	gf_dom_event_remove_listener_from_parent(GF_DOMEventTarget *event_target, GF_Node *listener);
 
diff --git a/src/scenegraph/base_scenegraph.c b/src/scenegraph/base_scenegraph.c
index b403d5f409..40f30260b3 100644
--- a/src/scenegraph/base_scenegraph.c
+++ b/src/scenegraph/base_scenegraph.c
@@ -367,7 +367,7 @@ void gf_sg_reset(GF_SceneGraph *sg)
 
 	gf_mx_p(sg->dom_evt_mx);
 	/*remove listeners attached to the doc*/
-	gf_dom_event_remove_all_listeners(sg->dom_evt);
+	gf_dom_event_remove_all_listeners(sg->dom_evt, sg);
 	/*flush any pending add_listener*/
 	gf_dom_listener_reset_deferred(sg);
 	gf_mx_v(sg->dom_evt_mx);
@@ -1598,7 +1598,7 @@ void gf_node_free(GF_Node *node)
 		}
 #ifndef GPAC_DISABLE_SVG
 		if (node->sgprivate->interact->dom_evt) {
-			gf_dom_event_remove_all_listeners(node->sgprivate->interact->dom_evt);
+			gf_dom_event_remove_all_listeners(node->sgprivate->interact->dom_evt, node->sgprivate->scenegraph);
 			gf_dom_event_target_del(node->sgprivate->interact->dom_evt);
 		}
 		if (node->sgprivate->interact->animations) {
diff --git a/src/scenegraph/dom_events.c b/src/scenegraph/dom_events.c
index 210b001ad6..257f534a4a 100644
--- a/src/scenegraph/dom_events.c
+++ b/src/scenegraph/dom_events.c
@@ -189,11 +189,15 @@ GF_Err gf_dom_event_remove_listener_from_parent(GF_DOMEventTarget *event_target,
 	return GF_OK;
 }
 
-void gf_dom_event_remove_all_listeners(GF_DOMEventTarget *event_target)
+void gf_dom_event_remove_all_listeners(GF_DOMEventTarget *event_target, GF_SceneGraph *sg)
 {
 	while (gf_list_count(event_target->listeners)) {
 		GF_Node *n = (GF_Node *)gf_list_get(event_target->listeners, 0);
-		gf_dom_listener_del(n, event_target);
+		if (gf_list_find(sg->exported_nodes, n)>=0) {
+			gf_list_rem(event_target->listeners, 0);
+		} else {
+			gf_dom_listener_del(n, event_target);
+		}
 	}
 }
 
