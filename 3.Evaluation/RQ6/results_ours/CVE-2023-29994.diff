diff --git a/src/sp/protocol/mqtt/mqtt_parser.c b/src/sp/protocol/mqtt/mqtt_parser.c
index 959115b01..12188c6cf 100644
--- a/src/sp/protocol/mqtt/mqtt_parser.c
+++ b/src/sp/protocol/mqtt/mqtt_parser.c
@@ -158,7 +158,7 @@ put_var_integer(uint8_t *dest, uint32_t value)
  * Get variable integer value
  *
  * @param buf Byte array
- * @param pos how many bits rlen occupied
+ * @param pos how many bits rlen occupied (accumulated value)
  * @return Integer value
  */
 uint32_t
@@ -571,7 +571,7 @@ conn_param_set_will_property(conn_param *cparam, property *prop)
 /**
  * @brief handle and decode CONNECT packet
  * only use in nego_cb !!!
- * TODO CONNECT packet validation
+ *
  */
 int32_t
 conn_handler(uint8_t *packet, conn_param *cparam, size_t max)
@@ -611,8 +611,15 @@ conn_handler(uint8_t *packet, conn_param *cparam, size_t max)
 	cparam->keepalive_mqtt = tmp;
 	pos += 2;
 	// properties
+
 	if (cparam->pro_ver == MQTT_PROTOCOL_VERSION_v5) {
+		// check length
 		log_trace("MQTT V5 Properties");
+		len_of_var = 0;
+		cparam->prop_len = (uint32_t) get_var_integer(packet + pos, &len_of_var);
+		if (cparam->prop_len > (max - pos - 1 - cparam->will_flag*2 ))
+			return PROTOCOL_ERROR;
+		log_debug("remain len %d max len %d prop len %d pos %d", len, max, cparam->prop_len, pos);
 		cparam->properties = decode_buf_properties(
 		    packet, len, &pos, &cparam->prop_len, true);
 		if (cparam->properties) {
diff --git a/src/supplemental/mqtt/mqtt_codec.c b/src/supplemental/mqtt/mqtt_codec.c
index d15bf1aa2..acccef415 100644
--- a/src/supplemental/mqtt/mqtt_codec.c
+++ b/src/supplemental/mqtt/mqtt_codec.c
@@ -2810,7 +2810,7 @@ read_str_data(struct pos_buf *buf, mqtt_buf *val)
 	}
 	return 0;
 }
-
+// TODO unite with get_var_integer
 static int
 read_variable_int(
     uint8_t *ptr, uint32_t length, uint32_t *value, uint8_t *used_bytes)
@@ -3717,6 +3717,10 @@ check_properties(property *prop)
 	return SUCCESS;
 }
 
+/**
+ * packet_len: remaining length
+ * len: property length
+ * */
 property *
 decode_buf_properties(uint8_t *packet, uint32_t packet_len, uint32_t *pos,
     uint32_t *len, bool copy_value)
@@ -3750,6 +3754,7 @@ decode_buf_properties(uint8_t *packet, uint32_t packet_len, uint32_t *pos,
 	/* Check properties appearance time */
 	// TODO
 
+	log_debug("remain len %d prop len %d curpos %p endpos %p", msg_len, prop_len, buf.curpos, buf.endpos);
 	while (buf.curpos < buf.endpos) {
 		read_byte(&buf, &prop_id);
 		property *         cur_prop = NULL;
