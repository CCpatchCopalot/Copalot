

Yes

```diff
diff --git a/src/plugins/sqldrivers/odbc/qsql_odbc.cpp b/src/plugins/sqldrivers/odbc/qsql_odbc.cpp
--- a/src/plugins/sqldrivers/odbc/qsql_odbc.cpp
+++ b/src/plugins/sqldrivers/odbc/qsql_odbc.cpp
@@ -745,6 +745,14 @@
     return quote;
 }
 
+static SQLRETURN qt_string_SQLSetConnectAttr(SQLHDBC handle, SQLINTEGER attr, const QString &val)
+{
+    auto encoded = toSQLTCHAR(val);
+    return SQLSetConnectAttr(handle, attr,
+                             encoded.data(),
+                             SQLINTEGER(encoded.size() * sizeof(SQLTCHAR))); // size in bytes
+}
+
 
 bool QODBCDriverPrivate::setConnectionOptions(const QString& connOpts)
 {
@@ -788,7 +796,7 @@
         } else if (opt.toUpper() == "SQL_ATTR_CURRENT_CATALOG"_L1) {
             r = qt_string_SQLSetConnectAttr(hDbc, SQL_ATTR_CURRENT_CATALOG, val);
         } else if (opt.toUpper() == "SQL_ATTR_METADATA_ID"_L1) {
-            if (val.toUpper() == "SQL_TRUE"_L1) {
+            if (val.toUpper() == QLatin1String("SQL_TRUE")) {
                 v = SQL_TRUE;
             } else {
                 v = SQL_FALSE;
@@ -2002,7 +2010,7 @@
     {
         auto encoded = toSQLTCHAR(connQStr);
         r = SQLDriverConnect(d->hDbc,
-                             nullptr,
+                             NULL,
                              encoded.data(), SQLSMALLINT(encoded.size()),
                              connOut.data(),
                              1024,
@@ -2388,12 +2396,12 @@
     if (tableType.isEmpty())
         return tl;
 
-    {
-        auto joinedTableTypeString = toSQLTCHAR(tableType.join(u','));
+    QString joinedTableTypeString = tableType.join(u',');
 
+    {
         r = SQLTables(hStmt,
-                      nullptr, 0,
-                      nullptr, 0,
+                      NULL, 0,
+                      NULL, 0,
                       nullptr, 0,
                       joinedTableTypeString.data(), joinedTableTypeString.size());
     }
@@ -2473,8 +2481,8 @@
         auto s = toSQLTCHAR(schema);
         auto t = toSQLTCHAR(table);
         r = SQLPrimaryKeys(hStmt,
-                           catalog.isEmpty() ? nullptr : c.data(), c.size(),
-                           schema.isEmpty()  ? nullptr : s.data(), s.size(),
+                           catalog.length() == 0 ? NULL : c.data(), c.size(),
+                           schema.length() == 0 ? NULL : s.data(), s.size(),
                            t.data(), t.size());
     }
 
@@ -2487,8 +2495,8 @@
         auto t = toSQLTCHAR(table);
         r = SQLSpecialColumns(hStmt,
                               SQL_BEST_ROWID,
-                              catalog.isEmpty() ? nullptr : c.data(), c.size(),
-                              schema.isEmpty()  ? nullptr : s.data(), s.size(),
+                              catalog.length() == 0 ? NULL : c.data(), c.size(),
+                              schema.length() == 0 ? NULL : s.data(), s.size(),
                               t.data(), t.size(),
                               SQL_SCOPE_CURROW,
                               SQL_NULLABLE);
@@ -2577,8 +2585,8 @@
         auto s = toSQLTCHAR(schema);
         auto t = toSQLTCHAR(table);
         r =  SQLColumns(hStmt,
-                        catalog.isEmpty() ? nullptr : c.data(), c.size(),
-                        schema.isEmpty()  ? nullptr : s.data(), s.size(),
+                        catalog.length() == 0 ? NULL : c.data(), c.size(),
+                        schema.length() == 0 ? NULL : s.data(), s.size(),
                         t.data(), t.size(),
                         nullptr,
                         0);
```