diff --git a/src/terminal/UserTerminalRouter.cpp b/src/terminal/UserTerminalRouter.cpp
index 53eeb7d89..a4513f932 100644
--- a/src/terminal/UserTerminalRouter.cpp
+++ b/src/terminal/UserTerminalRouter.cpp
@@ -16,6 +16,7 @@ UserTerminalRouter::UserTerminalRouter(
 }
 
 IdKeyPair UserTerminalRouter::acceptNewConnection() {
+  lock_guard<recursive_mutex> guard(routerMutex);
   LOG(INFO) << "Listening to id/key FIFO";
   int terminalFd = socketHandler->accept(serverFd);
   if (terminalFd < 0) {
@@ -49,6 +50,7 @@ IdKeyPair UserTerminalRouter::acceptNewConnection() {
 }
 
 TerminalUserInfo UserTerminalRouter::getInfoForId(const string &id) {
+  lock_guard<recursive_mutex> guard(routerMutex);
   auto it = idInfoMap.find(id);
   if (it == idInfoMap.end()) {
diff --git a/src/terminal/UserTerminalRouter.hpp b/src/terminal/UserTerminalRouter.hpp
index adf4ad1c8..5fd7e27df 100644
--- a/src/terminal/UserTerminalRouter.hpp
+++ b/src/terminal/UserTerminalRouter.hpp
@@ -24,6 +24,7 @@ class UserTerminalRouter {
   int serverFd;
   unordered_map<string, TerminalUserInfo> idInfoMap;
   shared_ptr<PipeSocketHandler> socketHandler;
+  recursive_mutex routerMutex;
 };
 }  // namespace et
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 65d9fa97b..1cc9e8156 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -163,7 +163,7 @@ add_definitions(-DET_VERSION="${PROJECT_VERSION}")
 # For easylogging, disable default log file, enable crash log, ensure thread
 # safe, and catch c++ exceptions
 set(CMAKE_CXX_FLAGS
-    "${CMAKE_CXX_FLAGS} -DELPP_NO_DEFAULT_LOG_FILE -DELPP_FEATURE_CRASH_LOG -DELPP_THREAD_SAFE -DSENTRY_BUILD_STATIC"
+    "${CMAKE_CXX_FLAGS} -DELPP_NO_DEFAULT_LOG_FILE -DELPP_FEATURE_CRASH_LOG -DELPP_THREAD_SAFE -DELPP_STRICT_PERMISSIONS -DSENTRY_BUILD_STATIC"
 )
 IF(WIN32)
   SET(CMAKE_CXX_FLAGS "-DSODIUM_STATIC")