diff --git a/channels/cliprdr/server/cliprdr_main.c b/channels/cliprdr/server/cliprdr_main.c
--- a/channels/cliprdr/server/cliprdr_main.c
+++ b/channels/cliprdr/server/cliprdr_main.c
@@ -432,6 +432,9 @@
 static UINT cliprdr_server_receive_general_capability(CliprdrServerContext* context, wStream* s,
                                                       CLIPRDR_GENERAL_CAPABILITY_SET* cap_set)
 {
+	if (Stream_GetRemainingLength(s) < 8)
+		return ERROR_INVALID_DATA;
+
 	Stream_Read_UINT32(s, cap_set->version);      /* version (4 bytes) */
 	Stream_Read_UINT32(s, cap_set->generalFlags); /* generalFlags (4 bytes) */
 
@@ -464,12 +467,14 @@
 	UINT16 index;
 	UINT16 capabilitySetType;
 	UINT16 capabilitySetLength;
-	UINT error = CHANNEL_RC_OK;
+	UINT error = ERROR_INVALID_DATA;
 	size_t cap_sets_size = 0;
-	CLIPRDR_CAPABILITIES capabilities;
+	CLIPRDR_CAPABILITIES capabilities = { 0 };
 	CLIPRDR_CAPABILITY_SET* capSet;
-	void* tmp;
 
+	if (Stream_GetRemainingLength(s) < 4)
+		return ERROR_INVALID_DATA;
+		
 	Stream_Read_UINT16(s, capabilities.cCapabilitiesSets); /* cCapabilitiesSets (2 bytes) */
 	Stream_Seek_UINT16(s);                                 /* pad1 (2 bytes) */
 
@@ -477,6 +482,8 @@
 	{
 		Stream_Read_UINT16(s, capabilitySetType);   /* capabilitySetType (2 bytes) */
 		Stream_Read_UINT16(s, capabilitySetLength); /* capabilitySetLength (2 bytes) */
+		if (Stream_GetRemainingLength(s) < 4)
+			goto out;
 
 		cap_sets_size += capabilitySetLength;
 
@@ -504,6 +511,7 @@
 		}
 	}
 
+	error = CHANNEL_RC_OK;
 	IFCALLRET(context->ClientCapabilities, error, context, &capabilities);
 out:
 	free(capabilities.capabilitySets);