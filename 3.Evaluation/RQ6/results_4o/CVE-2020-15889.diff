diff --git a/lgc.c b/lgc.c
index f26c921a9..f7fd7a59a 100644
--- a/lgc.c
+++ b/lgc.c
@@ -1138,7 +1138,7 @@
 static void youngcollection (lua_State *L, global_State *g) {
   GCObject **psurvival;  /* to point to first non-dead survival object */
   lua_assert(g->gcstate == GCSpropagate);
-  markold(g, g->survival, g->reallyold);
+  markold(g, g->allgc, g->reallyold);
   markold(g, g->finobj, g->finobjrold);
   atomic(L);
 
The vulnerability fix addresses the heap-based buffer over-read by correcting the range of objects processed by `markold`. The original code used `g->survival` as the starting point, which insufficiently covered necessary objects. The patched code uses `g->allgc` instead, ensuring all generational objects are properly marked, preventing the over-read.