diff --git a/src/isomedia/box_code_drm.c b/src/isomedia/box_code_drm.c
--- a/src/isomedia/box_code_drm.c
+++ b/src/isomedia/box_code_drm.c
@@ -876,8 +876,17 @@
 		ISOM_DECREASE_SIZE(ptr, 1);
 		iv_size = ptr->key_info[20] = gf_bs_read_u8(bs);
 		ISOM_DECREASE_SIZE(ptr, ptr->key_info[20]);
+		if ((iv_size!=8) && (iv_size!=16)) {
+			GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, ("[iso file] Invalid constant IV size %d, must be 8 or 16\n", (u32) iv_size));
+			ptr->key_info[20] = 16;
+			return GF_NON_COMPLIANT_BITSTREAM;
+		}
 		gf_bs_read_data(bs, ptr->key_info+21, iv_size);
 	}
+	else if ((iv_size!=0) && (iv_size!=8) && (iv_size!=16)) {
+		GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, ("[iso file] Invalid IV size %d, must be 0, 8 or 16\n", (u32) iv_size));
+		return GF_NON_COMPLIANT_BITSTREAM;
+	}
 	return GF_OK;
 }
 
The vulnerability fix adds validation checks for the IV size parameter in the tenc_box_read function. The critical modifications are:
1. Check for invalid constant IV sizes (must be 8 or 16) when present
2. Check for invalid default IV sizes (must be 0, 8 or 16) 
3. Return errors and set safe defaults when invalid sizes are detected
These changes prevent buffer overflow by enforcing valid IV sizes before performing memory operations.