diff --git a/src/dns.c b/src/dns.c
index 7746d216c0..5a4fc2747a 100644
--- a/src/dns.c
+++ b/src/dns.c
@@ -22,6 +22,7 @@
 #include "tlog.h"
 #include <arpa/inet.h>
 #include <fcntl.h>
+#include <stdint.h>
 #include <stdio.h>
 #include <string.h>
 #include <sys/stat.h>
@@ -52,9 +53,14 @@ static unsigned short _dns_read_short(unsigned char **buffer)
 {
 	unsigned short value = 0;
 
-	value = ntohs(*((unsigned short *)(*buffer)));
+	if ((uintptr_t)(*buffer) % 2 == 0) {
+		value = *((unsigned short *)(*buffer));
+	} else {
+		memcpy(&value, *buffer, 2);
+	}
+
 	*buffer += 2;
-	return value;
+	return ntohs(value);
 }
 
 /* write char and move pointer */
@@ -76,7 +82,12 @@ static unsigned char _dns_read_char(unsigned char **buffer)
 static void _dns_write_short(unsigned char **buffer, unsigned short value)
 {
 	value = htons(value);
-	*((unsigned short *)(*buffer)) = value;
+
+	if ((uintptr_t)(*buffer) % 2 == 0) {
+		*((unsigned short *)(*buffer)) = value;
+	} else {
+		memcpy(*buffer, &value, 2);
+	}
 	*buffer += 2;
 }
 
@@ -84,7 +95,11 @@ static void _dns_write_short(unsigned char **buffer, unsigned short value)
 static void _dns_write_int(unsigned char **buffer, unsigned int value)
 {
 	value = htonl(value);
-	*((unsigned int *)(*buffer)) = value;
+	if ((uintptr_t)(*buffer) % 4 == 0) {
+		*((unsigned int *)(*buffer)) = value;
+	} else {
+		memcpy(*buffer, &value, 4);
+	}
 	*buffer += 4;
 }
 
@@ -93,10 +108,14 @@ static unsigned int _dns_read_int(unsigned char **buffer)
 {
 	unsigned int value = 0;
 
-	value = ntohl(*((unsigned int *)(*buffer)));
-	*buffer += 4;
+	if ((uintptr_t)(*buffer) % 4 == 0) {
+		value = *((unsigned int *)(*buffer));
+	} else {
+		memcpy(&value, *buffer, 4);
+	}
 
-	return value;
+	*buffer += 4;
+	return ntohl(value);
 }
 
 static inline int _dns_left_len(struct dns_context *context)
@@ -1782,15 +1801,15 @@ static int _dns_encode_SOA(struct dns_context *context, struct dns_rrs *rrs)
 		return -1;
 	}
 
-	_dns_write_int(&context->ptr, *(unsigned int *)data_context.ptr);
+	_dns_write_intptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 4;
-	_dns_write_int(&context->ptr, *(unsigned int *)data_context.ptr);
+	_dns_write_intptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 4;
-	_dns_write_int(&context->ptr, *(unsigned int *)data_context.ptr);
+	_dns_write_intptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 4;
-	_dns_write_int(&context->ptr, *(unsigned int *)data_context.ptr);
+	_dns_write_intptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 4;
-	_dns_write_int(&context->ptr, *(unsigned int *)data_context.ptr);
+	_dns_write_intptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 4;
 
 	return 0;
@@ -1824,11 +1843,11 @@ static int _dns_encode_SRV(struct dns_context *context, struct dns_rrs *rrs)
 		return -1;
 	}
 
-	_dns_write_short(&context->ptr, *(unsigned short *)data_context.ptr);
+	_dns_write_shortptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 2;
-	_dns_write_short(&context->ptr, *(unsigned short *)data_context.ptr);
+	_dns_write_shortptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 2;
-	_dns_write_short(&context->ptr, *(unsigned short *)data_context.ptr);
+	_dns_write_shortptr(&context->ptr, data_context.ptr);
 	data_context.ptr += 2;
 	rr_len += 6;