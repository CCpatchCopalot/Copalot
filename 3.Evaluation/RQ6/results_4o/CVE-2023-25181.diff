diff --git a/Server/Source/http-s_req.c b/Server/Source/http-s_req.c
index 227f108..3287007 100644
--- a/Server/Source/http-s_req.c
+++ b/Server/Source/http-s_req.c
@@ -857,7 +857,9 @@ static  void  HTTPsReq_MethodParse (HTTPs_INSTANCE  *p_instance,
        *p_err = HTTPs_ERR_REQ_FORMAT_INVALID;
         return;
     }
-                                                                /* Move the start ptr to the first meanningful char.    */
+
+    skipped_chars = p_request_method_start - p_conn->RxBufPtr;
+    len -= skipped_chars;                                       /* Disregard illegal, non-printable ASCII characters.   */
     p_request_method_start = HTTP_StrGraphSrchFirst(p_conn->RxBufPtr, len);
     if (p_request_method_start == DEF_NULL) {
        *p_err = HTTPs_ERR_REQ_FORMAT_INVALID;
@@ -870,6 +872,8 @@ static  void  HTTPsReq_MethodParse (HTTPs_INSTANCE  *p_instance,
        *p_err = HTTPs_ERR_REQ_FORMAT_INVALID;
         return;
     }
+
+    p_conn->RxBufLenRem -= skipped_chars;                       /* Update RxBufLenRem to reflect nbr of skipped chars.  */
     len = p_request_method_end - p_request_method_start;
                                                                 /* Try to match the Method str received.                */
     method = HTTP_Dict_KeyGet(HTTP_Dict_ReqMethod,
@@ -1378,6 +1382,9 @@ static  void  HTTPsReq_ProtocolVerParse (HTTPs_INSTANCE  *p_instance,
        *p_err = HTTPs_ERR_REQ_FORMAT_INVALID;
         return;
     }
+
+    skipped_chars        = p_protocol_ver_start - p_conn->RxBufPtr;
+    len                 -= skipped_chars;                       /* Disregard illegal, non-printable ASCII characters.   */
                                                                 /* Find the end of the request line.                    */
     p_protocol_ver_end = Str_Str_N(p_protocol_ver_start, STR_CR_LF, len);
     if (p_protocol_ver_end == DEF_NULL) {                       /* If not found, check to get more data.                */
@@ -1385,6 +1392,8 @@ static  void  HTTPsReq_ProtocolVerParse (HTTPs_INSTANCE  *p_instance,
            *p_err = HTTPs_ERR_REQ_MORE_DATA_REQUIRED;
             return;
         }
+        
+        p_conn->RxBufLenRem -= skipped_chars;                    /* Update RxBufLenRem to reflect nbr of skipped chars.  */
         p_protocol_ver_end = Str_Char_N(p_protocol_ver_start, len, ASCII_CHAR_CR);
         if (p_protocol_ver_end == DEF_NULL) {
            *p_err = HTTPs_ERR_REQ_FORMAT_INVALID;