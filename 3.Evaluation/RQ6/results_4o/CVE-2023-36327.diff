diff --git a/include/relic_bn.h b/include/relic_bn.h
index c93fa4c4f..1b5b3244c 100644
--- a/include/relic_bn.h
+++ b/include/relic_bn.h
@@ -1270,15 +1270,6 @@ int bn_smb_leg(const bn_t a, const bn_t b);
  */
 int bn_smb_jac(const bn_t a, const bn_t b);
 
-/**
- * Returns a small precomputed prime from a given position in the list of prime
- * numbers.
- *
- * @param[in] pos			- the position in the prime sequence.
- * @return a prime if the position is lower than 512, 0 otherwise.
- */
-dig_t bn_get_prime(int pos);
-
 /**
  * Tests if a number is a probable prime.
diff --git a/src/bn/relic_bn_prime.c b/src/bn/relic_bn_prime.c
index aa4247b9c..ed232457a 100644
--- a/src/bn/relic_bn_prime.c
+++ b/src/bn/relic_bn_prime.c
@@ -170,13 +170,6 @@ static void bn_exp(bn_t c, const bn_t a, const bn_t b, const bn_t m) {
 /* Public definitions                                                         */
 /*============================================================================*/
 
-dig_t bn_get_prime(int pos) {
-	if (pos >= BASIC_TESTS) {
-		return 0;
-	}
-	return primes[pos];
-}
-
 int bn_is_prime(const bn_t a) {
 	int result;
 