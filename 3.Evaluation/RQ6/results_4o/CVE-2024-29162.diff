diff --git a/src/H5HG.c b/src/H5HG.c
index 3709c705566..a859b40f100 100644
--- a/src/H5HG.c
+++ b/src/H5HG.c
@@ -556,6 +556,11 @@ H5HG_read(H5F_t *f, H5HG_t *hobj, void *object /*out*/, size_t *buf_size)
     assert(f);
     assert(hobj);
 
+    /* Heap object idx 0 is the free space in the heap and should never be given out */
+    if (0 == hobj->idx)
+        HGOTO_ERROR(H5E_HEAP, H5E_BADVALUE, NULL, "bad heap index, heap object = {%" PRIxHADDR ", %zu}",
+                    hobj->addr, hobj->idx);
+
     /* Load the heap */
     if (NULL == (heap = H5HG__protect(f, hobj->addr, H5AC__READ_ONLY_FLAG)))
diff --git a/src/H5VLnative_blob.c b/src/H5VLnative_blob.c
index 718d5487561..890e82dc1b5 100644
--- a/src/H5VLnative_blob.c
+++ b/src/H5VLnative_blob.c
@@ -113,14 +113,17 @@ H5VL__native_blob_get(void *obj, const void *blob_id, void *buf, size_t size, vo
     UINT32DECODE(id, hobjid.idx);
 
     /* Check if this sequence actually has any data */
-    if (hobjid.addr > 0)
+    if (hobjid.addr > 0) {
+        /* Verify the size is correct */
+        if (H5HG_get_obj_size(f, &hobjid, &hobj_size) < 0)
+            HGOTO_ERROR(H5E_VOL, H5E_CANTGETSIZE, FAIL, "can't get object size");
+        if (hobj_size != size)
+            HGOTO_ERROR(H5E_VOL, H5E_BADSIZE, FAIL, "Expected global heap object size does not match");
+
         /* Read the VL information from disk */
         if (NULL == H5HG_read(f, &hobjid, buf, &hobj_size))
             HGOTO_ERROR(H5E_VOL, H5E_READERROR, FAIL, "unable to read VL information");
-
-    /* Verify the size is correct */
-    if (hobj_size != size)
-        HGOTO_ERROR(H5E_VOL, H5E_CANTDECODE, FAIL, "Expected global heap object size does not match");
+    }
 
 done:
     FUNC_LEAVE_NOAPI(ret_value)