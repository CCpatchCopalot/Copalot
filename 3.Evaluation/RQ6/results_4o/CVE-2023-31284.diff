diff --git a/usr/src/uts/common/io/dls/dls_mgmt.c b/usr/src/uts/common/io/dls/dls_mgmt.c
--- a/usr/src/uts/common/io/dls/dls_mgmt.c
+++ b/usr/src/uts/common/io/dls/dls_mgmt.c
@@ -1299,7 +1299,7 @@
 	 * If we reach this point it means dlmgmtd is up but has no
 	 * mapping for the link name.
 	 */
-	if (ddi_parse(link, drv, &ppa) != DDI_SUCCESS)
+	if (ddi_parse_dlen(link, drv, MAXLINKNAMELEN, &ppa) != DDI_SUCCESS)
 		return (ENOENT);
 
diff --git a/usr/src/uts/common/io/ib/clients/rds/rds_ioctl.c b/usr/src/uts/common/io/ib/clients/rds/rds_ioctl.c
--- a/usr/src/uts/common/io/ib/clients/rds/rds_ioctl.c
+++ b/usr/src/uts/common/io/ib/clients/rds/rds_ioctl.c
@@ -107,7 +107,8 @@
 		return (B_TRUE);
 	}
 
-	return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS &&
+	return (
+	    ddi_parse_dlen(ifname, drv, MAXLINKNAMELEN, &ppa) == DDI_SUCCESS &&
 	    rds_transport_ops->rds_transport_if_lookup_by_name(drv));
 }
diff --git a/usr/src/uts/common/io/softmac/softmac_stat.c b/usr/src/uts/common/io/softmac/softmac_stat.c
--- a/usr/src/uts/common/io/softmac/softmac_stat.c
+++ b/usr/src/uts/common/io/softmac/softmac_stat.c
@@ -177,8 +177,10 @@
 	uint_t		ppa;
 	kstat_t		*ksp;
 
-	if (ddi_parse(softmac->smac_devname, drv, &ppa) != DDI_SUCCESS)
+	if (ddi_parse_dlen(softmac->smac_devname, drv, MAXLINKNAMELEN, &ppa) !=
+	    DDI_SUCCESS) {
 		return (NULL);
+	}
 
 	/*
diff --git a/usr/src/uts/common/os/sunddi.c b/usr/src/uts/common/os/sunddi.c
--- a/usr/src/uts/common/os/sunddi.c
+++ b/usr/src/uts/common/os/sunddi.c
@@ -8957,29 +8957,54 @@
 }
 
 int
-ddi_parse(
-	const char	*ifname,
-	char		*alnum,
-	uint_t		*nump)
+ddi_parse(const char *ifname, char *alnum, uint_t *nump)
+{
+	/*
+	 * Cap "alnum" size at LIFNAMSIZ, as callers use that in most/all
+	 * cases.
+	 */
+	return (ddi_parse_dlen(ifname, alnum, LIFNAMSIZ, nump));
+}
+
+int
+ddi_parse_dlen(const char *ifname, char *alnum, size_t alnumsize, uint_t *nump)
 {
 	const char	*p;
-	int		l;
+	int		copy_len;
 	ulong_t		num;
 	boolean_t	nonum = B_TRUE;
 	char		c;
 
-	l = strlen(ifname);
-	for (p = ifname + l; p != ifname; l--) {
+	copy_len = strlen(ifname);
+	for (p = ifname + copy_len; p != ifname; copy_len--) {
 		c = *--p;
 		if (!isdigit(c)) {
-			(void) strlcpy(alnum, ifname, l + 1);
+			/*
+			 * At this point, copy_len is the length of ifname
+			 * WITHOUT the PPA number. For "e1000g10" copy_len is 6.
+			 *
+			 * We must first make sure we HAVE a PPA, and we
+			 * aren't exceeding alnumsize with copy_len and a '\0'
+			 * terminator...
+			 */
+			int copy_len_nul = copy_len + 1;
+
+			if (nonum || alnumsize < copy_len_nul)
+				return (DDI_FAILURE);
+
+			/*
+			 * ... then we abuse strlcpy() to copy over the
+			 * driver name portion AND '\0'-terminate it.
+			 */
+			(void) strlcpy(alnum, ifname, copy_len_nul);
 			if (ddi_strtoul(p + 1, NULL, 10, &num) != 0)
 				return (DDI_FAILURE);
 			break;
 		}
 		nonum = B_FALSE;
 	}
-	if (l == 0 || nonum)
+
+	if (copy_len == 0)
 		return (DDI_FAILURE);
 
diff --git a/usr/src/uts/common/sys/sunddi.h b/usr/src/uts/common/sys/sunddi.h
--- a/usr/src/uts/common/sys/sunddi.h
+++ b/usr/src/uts/common/sys/sunddi.h
@@ -2233,6 +2233,8 @@
  * <numeric> is maximal.
  */
 int ddi_parse(const char *, char *, uint_t *);
+/* Version with caller-specified destination buffer length. */
+int ddi_parse_dlen(const char *, char *, size_t, uint_t *);
 
 /*
  * DDI interrupt priority level