diff --git a/qpress.cpp b/qpress.cpp
--- a/qpress.cpp
+++ b/qpress.cpp
@@ -183,7 +183,9 @@
 unsigned long long recovery_file_written;
 unsigned long long recovery_bad_bytes = 0;
 unsigned long long current_file_payload;
-char tmp[200000];
+const long NAME_BUFFER_SIZE = 200000;
+char tmp[NAME_BUFFER_SIZE];
+
 
 enum {FATAL_ERROR, COUNTER_UPDATE, FILES_PROCESSED, RESULT, WARNING};
 
@@ -955,6 +955,13 @@
             try_aread(tmp, chunk_size + 1);
             curdir = curdir + DELIM_STR + tmp;
             PRINT(FILES_PROCESSED, "%s%s%s\n", BLANK_LINE, remove_leading_curdir(curdir).c_str(), DELIM_STR);
+	        /* RDS security fix: https://rds-jira.amazon.com/browse/MMCP-231
+	 		Need to check if we try to decompress file or directory outside working directory
+	 		*/
+	        if(true == check_if_path_has_dir_traversal(tmp)) 
+            {
+	            abort("Directory path contains directory traversal which is not allowed.");
+	        }
             if(!std_out)
             {
 #ifdef WINDOWS
@@ -972,6 +979,13 @@
             if(NAME_BUFFER_SIZE < chunk_size + 1)
 	             {
 	                 abort("File path string is bigger than buffer size");
+	             /* RDS security fix: https://rds-jira.amazon.com/browse/MMCP-231
+	 		       Need to check if we try to decompress file or directory outside working directory
+	 		     */
+	         if(true == check_if_path_has_dir_traversal(tmp)) 
+	         {
+	             abort("File path contains directory traversal which is not allowed.");
+	         }
 	             }
 	             try_aread(tmp, chunk_size + 1); // read file name to 'tmp' with size 'chunk_size + 1'
 	         /* RDS security fix: https://rds-jira.amazon.com/browse/MMCP-231