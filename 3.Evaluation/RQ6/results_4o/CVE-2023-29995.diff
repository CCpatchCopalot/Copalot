diff --git a/src/sp/protocol/mqtt/mqtt_parser.c b/src/sp/protocol/mqtt/mqtt_parser.c
--- a/src/sp/protocol/mqtt/mqtt_parser.c
+++ b/src/sp/protocol/mqtt/mqtt_parser.c
@@ -672,35 +672,37 @@
 				if ((rv = check_properties(
 				         cparam->will_properties)) !=
 				    SUCCESS) {
-					return rv;
+					return PROTOCOL_ERROR;
 				}
 			}
+			log_trace("pos after will property: [%d]", pos);
 		}
 		cparam->will_topic.body =
 		    (char *) copyn_utf8_str(packet, &pos, &len_of_str, max-pos);
 		cparam->will_topic.len = len_of_str;
 		rv                     = len_of_str <= 0 ? 1 : 0;
+
 		if (cparam->will_topic.body == NULL || rv != 0) {
-			rv = PROTOCOL_ERROR;
-			return rv;
+			return PROTOCOL_ERROR;
 		}
 		log_trace("will_topic: %s %d", cparam->will_topic.body, rv);
+		log_trace("pos after will topic body: [%d]", pos);
 		// will msg
-		if (rv == 0) {
-			if (cparam->payload_format_indicator == 0) {
-				cparam->will_msg.body = (char *) copyn_str(
-				    packet, &pos, &len_of_str, max - pos);
-			} else if (rv == 0 &&
-			    cparam->payload_format_indicator == 0x01) {
-				cparam->will_msg.body =
-				    (char *) copyn_utf8_str(
-				        packet, &pos, &len_of_str, max - pos);
-			}
-			cparam->will_msg.len = len_of_str;
-			rv = len_of_str <= 0 ? PAYLOAD_FORMAT_INVALID : 0;
-			log_trace(
-			    "will_msg: %s %d", cparam->will_msg.body, rv);
+		if (rv == 0 && cparam->payload_format_indicator == 0) {
+			cparam->will_msg.body = (char *) copyn_str(
+			    packet, &pos, &len_of_str, max - pos);
+		} else if (rv == 0 &&
+		    cparam->payload_format_indicator == 0x01) {
+			cparam->will_msg.body = (char *) copyn_utf8_str(
+			    packet, &pos, &len_of_str, max - pos);
+		}
+		rv = len_of_str <= 0 ? PAYLOAD_FORMAT_INVALID : 0;
+		if (cparam->will_msg.body == NULL || rv != 0) {
+			return PROTOCOL_ERROR;
 		}
+		cparam->will_msg.len = len_of_str;
+		log_trace("will_msg: %s %d", cparam->will_msg.body, rv);
+		log_trace("pos after will msg: [%d]", pos);
 	}
 
 	// username