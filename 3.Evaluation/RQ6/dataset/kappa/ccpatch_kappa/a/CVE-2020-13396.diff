diff --git a/winpr/libwinpr/sspi/NTLM/ntlm_message.c b/winpr/libwinpr/sspi/NTLM/ntlm_message.c
--- a/winpr/libwinpr/sspi/NTLM/ntlm_message.c
+++ b/winpr/libwinpr/sspi/NTLM/ntlm_message.c
@@ -367,12 +367,12 @@
 
 SECURITY_STATUS ntlm_read_ChallengeMessage(NTLM_CONTEXT* context, PSecBuffer buffer)
 {
+	if (!context || !buffer)
+		return SEC_E_INTERNAL_ERROR;
+
 	SECURITY_STATUS status = SEC_E_INVALID_TOKEN;
 	wStream* s;
 	size_t length;
-	size_t StartOffset;
-	size_t PayloadOffset;
-	NTLM_AV_PAIR* AvTimestamp;
 	NTLM_CHALLENGE_MESSAGE* message;
 
 	ntlm_generate_client_challenge(context);
@@ -385,6 +385,8 @@
 	if (!s)
 		return SEC_E_INTERNAL_ERROR;
 
+	size_t StartOffset = Stream_GetPosition(s);
+
 	if (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)
 		goto fail;
 
@@ -414,7 +416,7 @@
 		goto fail;
 
 	/* Payload (variable) */
-	PayloadOffset = Stream_GetPosition(s);
+	size_t PayloadOffset = Stream_GetPosition(s);
 
 	status = SEC_E_INTERNAL_ERROR;
 	if (message->TargetName.Len > 0)
@@ -426,6 +428,7 @@
 	if (message->TargetInfo.Len > 0)
 	{
 		size_t cbAvTimestamp;
+		NTLM_AV_PAIR* AvTimestamp;
 
 		if (ntlm_read_message_fields_buffer(s, &(message->TargetInfo)) < 0)
 			goto fail;
@@ -463,8 +466,6 @@
 	ntlm_generate_random_session_key(context);   /* RandomSessionKey */
 	ntlm_generate_exported_session_key(context); /* ExportedSessionKey */
 
-	ntlm_encrypt_exported_session_key(context); /* EncryptedExportedSessionKey */
-
 #ifdef WITH_DEBUG_NTLM
 	WLog_DBG(TAG, "ClientChallenge");
 	winpr_HexDump(TAG, WLOG_DEBUG, context->ClientChallenge, 8);
@@ -499,6 +500,8 @@
 	WLog_DBG(TAG, "EncryptedRandomSessionKey");
 	winpr_HexDump(TAG, WLOG_DEBUG, context->EncryptedRandomSessionKey, 16);
 #endif
+
+	ntlm_encrypt_exported_session_key(context); /* EncryptedExportedSessionKey */
 #endif
 	context->state = NTLM_STATE_AUTHENTICATE;
 	ntlm_free_message_fields_buffer(&(message->TargetName));