diff --git a/src/afilter/conv.c b/src/afilter/conv.c
index 7ec81b5..8983568 100644
--- a/src/afilter/conv.c
+++ b/src/afilter/conv.c
@@ -103,6 +103,12 @@ static int aconv_prepare(struct aconv *c, phi_track *t)
 	if (r != 0)
 		return PHI_ERR;
 
+	// Allow no more than 16MB per 1 second of 64-bit 7.1 audio: 0x00ffffff/(64/8*8)=262143
+	if (c->fo.rate > 262143) {
+		errlog(t, "too large sample rate: %u", c->fo.rate);
+		return PHI_ERR;
+	}
+
 	uint out_ch = c->fo.channels & PHI_PCM_CHMASK;
 	c->out_samp_size = pcm_size(c->fo.format, out_ch);
 	size_t cap = msec_to_samples(CONV_OUTBUF_MSEC, c->fo.rate) * c->out_samp_size;
diff --git a/src/afilter/soxr.h b/src/afilter/soxr.h
index 78c7ef9..df3ef3f 100644
--- a/src/afilter/soxr.h
+++ b/src/afilter/soxr.h
@@ -74,6 +74,10 @@ static inline int ffsoxr_create(ffsoxr *soxr, const struct phi_af *inpcm, const
 	if (inpcm->channels != outpcm->channels)
 		return -1;
 
+	// Allow no more than 16MB per 1 second of 64-bit 7.1 audio: 0x00ffffff/(64/8*8)=262143
+	if (outpcm->rate > 262143)
+		return -1;
+
 	int itype = _ffsoxr_getfmt(inpcm->format, inpcm->interleaved);
 	int otype = _ffsoxr_getfmt(outpcm->format, outpcm->interleaved);
 	if (itype == -1 || otype == -1)
diff --git a/src/format/wav.c b/src/format/wav.c
index b0875b6..b5729c9 100644
--- a/src/format/wav.c
+++ b/src/format/wav.c
 static int wav_process(void *ctx, phi_track *t)
@@ -129,7 +133,10 @@ static int wav_process(void *ctx, phi_track *t)
 			goto data;
 
 		case WAVREAD_HEADER:
-			wav_info(w, t, wavread_info(&w->wav));
+			if (wav_info(w, t, wavread_info(&w->wav))) {
+				errlog(t, "incorrect WAV header");
+				return PHI_ERR;
+			}
 
 			if (t->conf.info_only)
 				return PHI_LASTOUT;
