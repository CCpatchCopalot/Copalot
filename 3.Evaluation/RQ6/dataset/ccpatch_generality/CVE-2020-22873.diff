diff --git a/src/jsi.h b/src/jsi.h
--- a/src/jsi.h
+++ b/src/jsi.h
@@ -4,7 +4,7 @@
 
 #define JSI_VERSION_MAJOR   3
 #define JSI_VERSION_MINOR   0
-#define JSI_VERSION_RELEASE 6
+#define JSI_VERSION_RELEASE 7
 
 #define JSI_VERSION (JSI_VERSION_MAJOR + ((Jsi_Number)JSI_VERSION_MINOR/100.0) + ((Jsi_Number)JSI_VERSION_RELEASE/10000.0))
 
@@ -213,7 +213,7 @@
     JSI_DBI_NO_MUTEX     =0x0004, /* Disable mutex. */
     JSI_DBI_FULL_MUTEX   =0x0008, /* Use full mutex. */
     
-    JSI_MAX_NUMBER_STRING=50,
+    JSI_MAX_NUMBER_STRING=100,
     JSI_BUFSIZ=8192
 
 } Jsi_Enums; /* Debugging is easier with enums than #define. */
diff --git a/src/jsiNumber.c b/src/jsiNumber.c
--- a/src/jsiNumber.c
+++ b/src/jsiNumber.c
@@ -141,14 +141,14 @@
 static Jsi_RC NumberToPrecisionCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this,
     Jsi_Value **ret, Jsi_Func *funcPtr)
 {
-    char buf[100];
+    char buf[JSI_MAX_NUMBER_STRING*2];
     int prec = 0, skip = 0;
     Jsi_Number num;
     Jsi_Value *v;
     ChkStringN(_this, funcPtr, v);
     if (Jsi_GetIntFromValue(interp, Jsi_ValueArrayIndex(interp, args, skip), &prec) != JSI_OK)
         return JSI_ERROR;
-    if (prec<=0) return JSI_ERROR;
+    if (prec<=0 || prec>JSI_MAX_NUMBER_STRING) return Jsi_LogError("precision must be between 1 and %d", JSI_MAX_NUMBER_STRING);
     Jsi_GetDoubleFromValue(interp, v, &num);
     snprintf(buf, sizeof(buf),"%.*" JSI_NUMFFMT, prec, num);
     if (num<0)