diff --git a/src/terminal/UserTerminalRouter.cpp b/src/terminal/UserTerminalRouter.cpp
--- a/src/terminal/UserTerminalRouter.cpp
+++ b/src/terminal/UserTerminalRouter.cpp
@@ -16,6 +16,7 @@
 }
 
 IdKeyPair UserTerminalRouter::acceptNewConnection() {
+  lock_guard<recursive_mutex> guard(routerMutex);
   LOG(INFO) << "Listening to id/key FIFO";
   int terminalFd = socketHandler->accept(serverFd);
   if (terminalFd < 0) {
@@ -49,6 +50,7 @@
 }
 
 TerminalUserInfo UserTerminalRouter::getInfoForId(const string &id) {
+  lock_guard<recursive_mutex> guard(routerMutex);
   auto it = idInfoMap.find(id);
   if (it == idInfoMap.end()) {
diff --git a/src/terminal/UserTerminalRouter.hpp b/src/terminal/UserTerminalRouter.hpp
--- a/src/terminal/UserTerminalRouter.hpp
+++ b/src/terminal/UserTerminalRouter.hpp
@@ -24,6 +24,7 @@
   int serverFd;
   unordered_map<string, TerminalUserInfo> idInfoMap;
   shared_ptr<PipeSocketHandler> socketHandler;
+  recursive_mutex routerMutex;
 };
 }  // namespace et