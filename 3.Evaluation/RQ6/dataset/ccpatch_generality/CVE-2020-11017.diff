diff --git a/channels/cliprdr/server/cliprdr_main.c b/channels/cliprdr/server/cliprdr_main.c
--- a/channels/cliprdr/server/cliprdr_main.c
+++ b/channels/cliprdr/server/cliprdr_main.c
@@ -464,29 +464,31 @@
 	UINT16 index;
 	UINT16 capabilitySetType;
 	UINT16 capabilitySetLength;
-	UINT error = CHANNEL_RC_OK;
+	UINT error = ERROR_INVALID_DATA;
 	size_t cap_sets_size = 0;
-	CLIPRDR_CAPABILITIES capabilities;
+	CLIPRDR_CAPABILITIES capabilities = { 0 };
 	CLIPRDR_CAPABILITY_SET* capSet;
-	void* tmp;
 
 	WINPR_UNUSED(header);
 
-	/* set `capabilitySets` to NULL so `realloc` will know to alloc the first block */
-	capabilities.capabilitySets = NULL;
-
-
 	WLog_DBG(TAG, "CliprdrClientCapabilities");
+	if (Stream_GetRemainingLength(s) < 4)
+		return ERROR_INVALID_DATA;
+
 	Stream_Read_UINT16(s, capabilities.cCapabilitiesSets); /* cCapabilitiesSets (2 bytes) */
 	Stream_Seek_UINT16(s);                                 /* pad1 (2 bytes) */
 
 	for (index = 0; index < capabilities.cCapabilitiesSets; index++)
 	{
+		void* tmp = NULL;
+		if (Stream_GetRemainingLength(s) < 4)
+			goto out;
 		Stream_Read_UINT16(s, capabilitySetType);   /* capabilitySetType (2 bytes) */
 		Stream_Read_UINT16(s, capabilitySetLength); /* capabilitySetLength (2 bytes) */
 
 		cap_sets_size += capabilitySetLength;
 
-		tmp = realloc(capabilities.capabilitySets, cap_sets_size);
+		if (cap_sets_size > 0)
+			tmp = realloc(capabilities.capabilitySets, cap_sets_size);
 		if (tmp == NULL)
 		{
 			WLog_ERR(TAG, "capabilities.capabilitySets realloc failed!");
@@ -504,8 +506,7 @@
 		switch (capSet->capabilitySetType)
 		{
 			case CB_CAPSTYPE_GENERAL:
				if ((error = cliprdr_server_receive_general_capability(context, s, (CLIPRDR_GENERAL_CAPABILITY_SET*)capSet)))
 				{
 					WLog_ERR(TAG,
 					         "cliprdr_server_receive_general_capability failed with error %" PRIu32
@@ -518,11 +519,11 @@
 			default:
 				WLog_ERR(TAG, "unknown cliprdr capability set: %" PRIu16 "",
 				         capSet->capabilitySetType);
-				error = ERROR_INVALID_DATA;
 				goto out;
 		}
 	}
 
+	error = CHANNEL_RC_OK;
 	IFCALLRET(context->ClientCapabilities, error, context, &capabilities);
 out:
 	free(capabilities.capabilitySets);